-- // Sitink Hub Rewrite \\ --

getgenv().ScriptExecuted = true
if getgenv().ScriptExecuted then
	print("Script Executed")
end
repeat
	task.wait()
until game:IsLoaded() and game.Players and game.Players.LocalPlayer  
if islclosure(loadstring) then
	while true do
        -- Get laggy for user if crack
	end 
end
getgenv().LoadingFunction = true
if getgenv().LoadingFunction then
	print("Script : Loading Function")
end
repeat
	task.wait()
until game:IsLoaded() and game.Players and game.Players.LocalPlayer
if islclosure(loadstring) then
	while true do
        -- Get laggy for user if crack
	end
end

if not game:IsLoaded() then game.Loaded:Wait() end
local fask = task 
setreadonly(fask,false)

local RunService =  game:GetService("RunService")
local myWait = function(n)
	if not n then
		return RunService.Heartbeat:Wait()
	else
		local lasted = 0
		repeat
			lasted = lasted + RunService.Heartbeat:Wait()
		until lasted >= n
		return lasted
	end
end
fask.wait = myWait

if not LPH_OBFUSCATED then
	LPH_JIT_MAX = (function(...) return ... end)
	LPH_NO_VIRTUALIZE = (function(...) return ... end)
	LPH_NO_UPVALUES = (function(...) return ... end)
end

for i, v in pairs(getconnections(game:GetService("Players").LocalPlayer.Idled)) do 
	v:Disable()
end

HttpService = game:GetService("HttpService")
a = {}
local plr = game.Players.LocalPlayer
local Rc = game.ReplicatedStorage
local WS = game.Workspace
local plrcharacter = plr.Character
local NameHub = "Sitink Hub"
local PlayerName = plr.Name
local placeid = game.PlaceId
function SaveSettings(ni, ga)
    if ni ~= nil then
        a[ni] = ga
    end
    HttpService = game:GetService("HttpService")
    if not isfolder(NameHub) then
        makefolder(NameHub)
    end
    writefile(NameHub .. "/" .. PlayerName, HttpService:JSONEncode(a))
end
function ReadSettings()
    local bu, lon =
        pcall(
        function()
            HttpService = game:GetService("HttpService")
            if not isfolder(NameHub) then
                makefolder(NameHub)
            end
            return HttpService:JSONDecode(readfile(NameHub .. "/" .. PlayerName))
        end
    )
    if bu then
        return lon
    else
        SaveSettings()
        return ReadSettings()
    end
end

a = ReadSettings()

if placeid == 2753915549 then
	Old_World = true
elseif placeid == 4442272183 then
	New_World = true
elseif placeid == 7449423635 then
	Third_World = true
end

local Lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/MinhNghia2k11/Ui-Library/main/Source"))()
function GetTextureMoon()
	if Old_World then
		return game:GetService("Lighting").FantasySky.MoonTextureId
	elseif New_World then
		return game:GetService("Lighting").FantasySky.MoonTextureId
	elseif Third_World then
		return game:GetService("Lighting").Sky.MoonTextureId
	end
end

function DetectTeleporter(vcs)
    vcspos = vcs.Position
    min = math.huge
    min2 = math.huge
    local y = game.PlaceId
    if y == 2753915549 then
        OldWorld = true
    elseif y == 4442272183 then
        NewWorld = true
    elseif y == 7449423635 then
        ThreeWorld = true
    end
    if ThreeWorld then
        TableLocations = {
            ["Caslte On The Sea"] = Vector3.new(-5058.77490234375, 314.5155029296875, -3155.88330078125),
            ["Hydra"] = Vector3.new(5756.83740234375, 610.4240112304688, -253.9253692626953),
            ["Mansion"] = Vector3.new(-12463.8740234375, 374.9144592285156, -7523.77392578125),
            ["Great Tree"] = Vector3.new(28282.5703125, 14896.8505859375, 105.1042709350586),
            ["Ngu1"] = Vector3.new(-11993.580078125, 334.7812805175781, -8844.1826171875),
            ["ngu2"] = Vector3.new(5314.58203125, 25.419387817382812, -125.94227600097656)
        }
    elseif NewWorld then
        TableLocations = {
            ["Mansion"] = Vector3.new(-288.46246337890625, 306.130615234375, 597.9988403320312),
            ["Flamingo"] = Vector3.new(2284.912109375, 15.152046203613281, 905.48291015625),
            ["122"] = Vector3.new(923.21252441406, 126.9760055542, 32852.83203125),
            ["3032"] = Vector3.new(-6508.5581054688, 89.034996032715, -132.83953857422)
        }
    elseif OldWorld then
        TableLocations = {
            ["1"] = Vector3.new(-7894.6201171875, 5545.49169921875, -380.2467346191406),
            ["2"] = Vector3.new(-4607.82275390625, 872.5422973632812, -1667.556884765625),
            ["3"] = Vector3.new(61163.8515625, 11.759522438049316, 1819.7841796875),
            ["4"] = Vector3.new(3876.280517578125, 35.10614013671875, -1939.3201904296875)
        }
    end
    TableLocations2 = {}
    for r, v in pairs(TableLocations) do
        TableLocations2[r] = (v - vcspos).Magnitude
    end
    for r, v in pairs(TableLocations2) do
        if v < min then
            min = v
            min2 = v
        end
    end
    for r, v in pairs(TableLocations2) do
        if v < min then
            min = v
            min2 = v
        end
    end
    for r, v in pairs(TableLocations2) do
        if v <= min then
            choose = TableLocations[r]
        end
    end
    min3 = (vcspos - plr.Character.HumanoidRootPart.Position).Magnitude
    if min2 + 32 <= min3 and GetDistance(vcspos) > 5000 then
        return choose
    end
end

function requestEntrance(ac)
    args = {
        "requestEntrance",
        ac
    }
    Rc.Remotes.CommF_:InvokeServer(unpack(args))
    oldcframe = plr.Character.HumanoidRootPart.CFrame
    char = plr.Character.HumanoidRootPart
    char.CFrame = CFrame.new(oldcframe.X, oldcframe.Y + 50, oldcframe.Z)
end

function GetPosBypass(c)
    for i, v in pairs(WS["_WorldOrigin"].PlayerSpawns.Pirates:GetChildren()) do
        if v:IsA("Model") then
            if (v.Part.Position - c.Position).Magnitude < 1500 then
                return v
            end
        end
    end
end

function Tween(TargetPos)
	pcall(function()
		Distance = (TargetPos.Position - plrcharacter.HumanoidRootPart.Position).Magnitude
		if Distance <= 250 then
			tween:Cancel()
			plrcharacter.HumanoidRootPart.CFrame = TargetPos
		end
		local Lcc = DetectTeleporter(TargetPos)
		if Lcc then
			tween:Cancel()
			requestEntrance(Lcc)
		end		
		if GetDistance(TargetPos.Position) >= 3000 then
			repeat wait()
				plr.Character:FindFirstChild("Head"):Destroy()
                plr.Character.HumanoidRootPart.CFrame = GetPosBypass(TargetPos).Part.CFrame
                plr.Character:WaitForChild("Humanoid"):ChangeState(15)
                wait(2)
                plr.Character.PrimaryPart.CFrame = GetPosBypass(TargetPos).Part.CFrame
                wait(3)
			until GetDistance(TargetPos.Position) < 3000 or plr.Character.Humanoid.Health == 0
		end
		tween = game:GetService("TweenService"):Create(plrcharacter.HumanoidRootPart, TweenInfo.new(Distance / 250, Enum.EasingStyle.Linear), {CFrame = TargetPos})
		tween:Play()
	end)
end

spawn(function()
    while task.wait() do
        if tween and tween.PlaybackState == Enum.PlaybackState.Playing then
            NoClip = true
        elseif tween then
            NoClip = false
        end
    end
end)

spawn(function()
	while wait() do
		if NoClip and plr.Character and plr.Character:FindFirstChild("Head") then
			if not plr.Character.Head:FindFirstChild("Nigga") then
				local noclip = Instance.new("BodyVelocity")
				noclip.Name = "Nigga"
				noclip.Parent = plr.Character.Head
				noclip.Velocity = Vector3.new(0, 0, 0)
				noclip.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
				noclip.P = 1500
			end
			for i, v in pairs(plr.Character:GetDescendants()) do
				if v:IsA("BasePart") then
					v.CanCollide = false
				end
			end
		elseif not NoClip and plr.Character and plr.Character:FindFirstChild("Head") and plr.Character.Head:FindFirstChild("Nigga") then
			plr.Character.Head:FindFirstChild("Nigga"):Destroy()
		end
 	end
end)

function GetWeaponType(TypeWeapons)
    niggerweapons = ""
    for i, v in pairs(plr.Backpack:GetChildren()) do
        if v:IsA("Tool") and v.ToolTip == TypeWeapons then
            niggerweapons = v.Name
        end
    end
    for i, v in pairs(plr.Character:GetChildren()) do
        if v:IsA("Tool") and v.ToolTip == TypeWeapons then
            niggerweapons = v.Name
        end
    end
    return niggerweapons
end

function EquipWP(Giet)
    if a["Select Weapon"] == "" or a["Select Weapon"] == nil then
        a["Select Weapon"] = "Melee"
    end
    Giet = GetWeaponType(a["Select Weapon"])
    local toolname = plr.Backpack:FindFirstChild(Giet)
    if toolname then
        plr.Character.Humanoid:EquipTool(toolname)
    end
end

function FireRemotes(eventname)
	game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(eventname)
end

function Buso()
	if not plrcharacter:FindFirstChild("HasBuso") then
		FireRemotes("Buso")
	end
end

function RemoveLvTitle(beos)
	return tostring(tostring(beos):gsub(" %pLv. %d+%p", ""):gsub(" %pRaid Boss%p", ""):gsub(" %pBoss%p", ""))
end

function DetectMob(nc, checkrc)
    local cccc
	for r, v in pairs(nc) do
		nc[r] = RemoveLvTitle(v)
	end
    for i, v in pairs(workspace.Enemies:GetChildren()) do
        if ((typeof(nc) == "table" and table.find(nc, v.Name)) or (v.Name == nc and v.Name ~= "FishBoat" and not string.find(v.Name, "Brigade"))) and v:FindFirstChild('Humanoid') and v.Humanoid.Health > 0 and v:FindFirstChild('HumanoidRootPart') then
            cccc = v
        end
    end
	if checkrc then
		for i, v in pairs(Rc:GetChildren()) do
			if ((typeof(nc) == "table" and table.find(nc, v.Name)) or (v.Name == nc and v.Name ~= "FishBoat" and not string.find(v.Name, "Brigade"))) and v:FindFirstChild('Humanoid') and v.Humanoid.Health > 0 and v:FindFirstChild('HumanoidRootPart') then
				cccc = v
			end
		end
	end
    return cccc
end

function GetBackpack(asingon)
	for i, v in pairs(plr.Backpack:GetChildren()) do
		if v.Name == asingon then
			return v
		end
	end
	for i, v in pairs(plr.Character:GetChildren()) do
		if v.Name == asingon then
			return v
		end
	end
end

task.spawn(function()
	while wait() do
		if setscriptable then
			setscriptable(plr, "SimulationRadius", true)
		end
		if sethiddenproperty then
			sethiddenproperty(plr, "SimulationRadius", math.huge)
		end
	end
end)

function GetDistance(uisoioi)
	if typeof(uisoioi) == "CFrame" then
		return (uisoioi.Position - plr.Character.HumanoidRootPart.Position).Magnitude
	elseif typeof(uisoioi) == "Vector3" then
		return (uisoioi - plr.Character.HumanoidRootPart.Position).Magnitude
	end
end

function BringMob(why)
	for i, v in pairs(game.Workspace.Enemies:GetChildren()) do
		if v.Name == why and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v.Parent then
			if GetDistance(v.HumanoidRootPart.CFrame) <= 350 then
				v.HumanoidRootPart.CFrame = LockCFrame
				v.Humanoid.JumpPower = 0
				v.Humanoid.WalkSpeed = 0
				v.HumanoidRootPart.CanCollide = false
				v.Head.CanCollide = false
				v.Humanoid:ChangeState(14)
				v.Humanoid:ChangeState(11)
			end
		end
	end
end

local TableKatakuri = {
    "Cake Prince",
    "Dough King"
}

cac = 1
spawn(function()
	while wait() do
		if not CheckStun() then
			if cac == 1 then
				RandomPos = CFrame.new(45, 30, 23)
				cac = 2
			elseif cac == 2 then
				RandomPos = CFrame.new(23, -30, 45)
				cac = 3
			elseif cac == 3 then
				RandomPos = CFrame.new(45, 30, 23)
				cac = 4
			elseif cac == 4 then
				RandomPos = CFrame.new(23, -30, 45)
				cac = 1
			end
		end
	end
end)

function KillMob(target, valuestop)
		for i, v in pairs(game.Workspace.Enemies:GetChildren()) do
			if v.Name == target and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and not valuestop then
				repeat
					task.wait()
					EquipWP()
					Buso()
					LockCFrame = v.HumanoidRootPart.CFrame
					if not table.find(TableKatakuri, v.Name) then
						Tween(v.HumanoidRootPart.CFrame * CFrame.new(0, 20, 0))
					else
						Tween(v.HumanoidRootPart.CFrame * RandomPos)
					end
					BringMob(target)
					NoClip = true
				until v:FindFirstChild("Humanoid").Health <= 0 or not v:FindFirstChild("Humanoid") or not v.Parent or not v:FindFirstChild("HumanoidRootPart") or valuestop
				NoClip = false
			end
		end
end

function GetMiragePuzzle()
	if Rc.Remotes.CommF_:InvokeServer("CheckTempleDoor") then
		return true
	end
	return false
end

function CheckStatusMiragePuzzle()
	if GetMiragePuzzle() then
		return "Completed"
	else
		return "Not Completed"
	end
end

function EnableKen()
	if not plr.PlayerGui.ScreenGui:FindFirstChild("ImageLabel") then
		game:GetService('VirtualUser'):CaptureController()
		game:GetService('VirtualUser'):SetKeyDown('0x65')
		wait(2)
		game:GetService('VirtualUser'):SetKeyUp('0x65')
	end
end

local QuestKhac = {"BartiloQuest", "CitizenQuest"}
local function GetAutoQuest()
    local Lvl = plr.Data.Level.Value
    local GuideModule = require(Rc.GuideModule)
    local Quests = require(Rc.Quests)
    for i, v in pairs(GuideModule["Data"]["NPCList"]) do
        for i1, v1 in pairs(v["Levels"]) do
            if Lvl >= v1 then
                if not levelreq then
                    levelreq = 0
                end
                if v1 > levelreq then
                    npcpos = i["CFrame"]
                    Mob3 = i1
                    levelreq = v1
                end
                if #v["Levels"] == 3 and Mob3 == 3 then
                    npcpos = i["CFrame"]
                    Mob3 = 2
                    levelreq = v["Levels"][2]
                end
            end
        end
    end
    for i, v in pairs(Quests) do
        for i1, v1 in pairs(v) do
            for O, P in pairs(v1.Task) do
                if v1["LevelReq"] == levelreq and v1.Task[O] > 1 and not table.find(QuestKhac, tostring(i)) then
                    Mob2 = i
                    for i2, v2 in pairs(v1["Task"]) do
                        Mob1 = i2
                    end
                end
            end
        end
    end
end

local v132 = require(Rc.Quests)
local v183 = require(Rc:WaitForChild("GuideModule"))
function GetQuestTask()
	for r , v in next, v183.Data do
		if r == "QuestData" then
			return true
		end
	end
	return false
end

function GetMobQuests()
	local c
	if GetQuestTask() then
		for r, v in next, v183.Data.QuestData.Task do
			c = r
		end
	end
	return c
end

function GetDoubleQuest()
	GetAutoQuest()
	local returnfunc = {}
	if a["Double Quest"] and plr.Data.Level.Value >= 10 and GetMobQuests() == Mob1 and GetMobQuests() == #2 then
		for r, v in pairs(v132) do
			for cuc, cut in pairs(v) do
				for an, cac in pairs(cut.Task) do
					if tostring(cac) == Mob1 then
						for bu, da in pairs(v) do
							for dit, ma in pairs(da.Task) do
								if dit ~= Mob1 and ma > 1 then
									if da.LevelReq <= plr.Data.Level.Value then
                                        returnfunc["Name Mob"] = tostring(dit)
                                        returnfunc["Name Quest"] = r
                                        returnfunc["Id"] = bu
                                    else
                                        returnfunc["Name Mob"] = Mob1
                                        returnfunc["Name Quest"] = Mob2
                                        returnfunc["Id"] = Mob3
                                    end
									return returnfunc
								end
                            end
                        end
                    end
                end
            end
        end
    else
        returnfunc["Name Mob"] = Mob1
        returnfunc["Name Quest"] = Mob2
        returnfunc["Id"] = Mob3
        return returnfunc
    end
    returnfunc["Name Mob"] = Mob1
    returnfunc["Name Quest"] = Mob2
    returnfunc["Id"] = Mob3
    return returnfunc
end

function GetMobLevelFarm()
	local mobselect = {}
	for r, v in pairs(WS.Enemies:GetChildren()) do
		if not table.find(mobselect, v.Name) and not string.find(v.Name, "Brigade") and not v.Name == "FishBoat" and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v.Parent then
			table.insert(mobselect, v.Name)
		end
	end
	for r, v in pairs(mobselect) do
		local ca = v
		v = tostring(v:gsub(" %pLv. %d+%p", ""))
		if tostring(v) == GetMobQuests() then
            return tostring(ca)
        end
	end
	return false
end

function CFrameQuest()
	for i,v in pairs(v183["Data"]["NPCList"]) do
        if v["NPCName"] == v183["Data"]["LastClosestNPC"] then
            return i["CFrame"]
        end
    end
end

function CanTurnV4()
	if plr.Character:FindFirstChild("RaceEnergy") and plr.Character.RaceEnergy.Value >= 1 and not plr.Character.RaceTransformed.Value then
		return true
	end
	return false
end

function SendKey(KeyName, HoldTime)
	if HoldTime == nil then
		HoldTime = 0.3
	end
	game:service("VirtualInputManager"):SendKeyEvent(true, KeyName, false, game)
	task.wait(HoldTime)
	game:service("VirtualInputManager"):SendKeyEvent(false, KeyName, false, game)
end

local Windows = Lib:AddWindows({
	Title = "Sitink Hub", 
	Logo = "rbxassetid://18763227055"
})

local MFarm = Windows:AddTab({
	Name = "Main Farm"
})

local MAutoFarm = Windows:AddTab({
	Name = "Misc Auto Farm"
})

local StFarm = MFarm:AddSection("Right", {
	Title = "Settings Farm",
})

local DropdownSelectWeapon = StFarm:AddDropdown({
	Name = "Select Weapon",
	Options = {
		"Melee",
		"Sword"
	},
	Default = a["Select Weapon"],
	Callback = function(Value)
		SaveSettings("Select Weapon", Value)
	end
})

local function ChangeFastDelay(typedelay)
	if typedelay == nil or typedelay == "" then
		Delay = 0.06
	end
	if typedelay == "Normal" then
		Delay = 0.06
	elseif typedelay == "Fast" then
		Delay = 0.04
	elseif typedelay == "Super FastAttack" then
		Delay = 0.03
	end
end

local DropdownDelayAttack = StFarm:AddDropdown({
	Name = "Delay Attack",
	Options = {
		"Normal",
		"Fast",
		"Super FastAttack"
	},
	Default = a["FastDelay"],
	Callback = function(Value)
		SaveSettings("FastDelay", Value)
		ChangeFastDelay(a["FastDelay"])
	end
})

NoAnimationation = true
local RL = require(game:GetService("ReplicatedStorage").CombatFramework.RigLib)
local oldRL = RL.wrapAnimationationAsync
RL.wrapAnimationationAsync = function(a,b,c,d,func)
	if not NoAnimationation then
		return oldRL(a,b,c,60,func)
	end

	local Hits = {}
	local Client = game.Players.LocalPlayer
	local Characters = game:GetService("Workspace").Characters:GetChildren()
	for i,v in pairs(Characters) do
		local Human = v:FindFirstChildOfClass("Humanoid")
		if v.Name ~= game.Players.LocalPlayer.Name and Human and Human.RootPart and Human.Health > 0 and Client:DistanceFromCharacter(Human.RootPart.Position) < 65 then
			table.insert(Hits,Human.RootPart)
		end
	end
	local Enemies = game:GetService("Workspace").Enemies:GetChildren()
	for i,v in pairs(Enemies) do
		local Human = v:FindFirstChildOfClass("Humanoid")
		if Human and Human.RootPart and Human.Health > 0 and Client:DistanceFromCharacter(Human.RootPart.Position) < 65 then
			table.insert(Hits,Human.RootPart)
		end
	end
	a:Play(0.01,0.01,0.01)
	pcall(func,Hits)
end

getAllBladeHits = LPH_NO_VIRTUALIZE(function(Sizes)
	local Hits = {}
	local Client = game.Players.LocalPlayer
	local Enemies = game:GetService("Workspace").Enemies:GetChildren()
	for i,v in pairs(Enemies) do
		local Human = v:FindFirstChildOfClass("Humanoid")
		if Human and Human.RootPart and Human.Health > 0 and Client:DistanceFromCharacter(Human.RootPart.Position) < Sizes+5 then
			table.insert(Hits,Human.RootPart)
		end
	end
	return Hits
end)

local CombatFramework = require(plr.PlayerScripts:WaitForChild("CombatFramework"))
local CombatFrameworkR = getupvalues(CombatFramework)[2]
local RigEven = game:GetService("ReplicatedStorage").RigControllerEvent
local Animation = Instance.new("Animation")
local AttackCoolDown = 0
local cooldowntickFire = 0
local MaxFire = 1000
local FireL = 0
local bladehit = {}

CancelCoolDown = LPH_JIT_MAX(function()
	local ac = CombatFrameworkR.activeController
	if ac and ac.equipped then
		AttackCoolDown = tick() + (Delay or 0.288) + ((FireL/MaxFire)*0.3)
		RigEven.FireServer(RigEven,"weaponChange",ac.currentWeaponModel.Name)
		FireL = FireL + 1
		fask.delay((Delay or 0.288) + ((FireL+0.4/MaxFire)*0.2),function()
			FireL = FireL - 1
		end)
	end
end)

AttackFunction = LPH_JIT_MAX(function()
	local ac = CombatFrameworkR.activeController
	if ac and ac.equipped then
		local bladehit = {}
		bladehit = getAllBladeHits(60)
		if #bladehit > 0 then
			pcall(fask.spawn,ac.attack,ac)
			if tick() > AttackCoolDown then
				CancelCoolDown()
			end
			if #bladehit > 0 then
				pcall(fask.spawn,ac.attack,ac)
				if tick() > AttackCoolDown then
					CancelCoolDown()
				end
				if tick() - cooldowntickFire > 0.4 then
					ac.timeToNextAttack = 0
					ac.hitboxMagnitude = 60
					pcall(fask.spawn,ac.attack,ac)
					cooldowntickFire = tick()
				end
				local AMI3 = ac.anims.basic[3]
				local AMI2 = ac.anims.basic[2]
				local REALID = AMI3 or AMI2
				Animation.AnimationId = REALID
				local StartP = ac.humanoid:LoadAnimation(Animation)
				StartP:Play(0.01,0.01,0.01)
				RigEven.FireServer(RigEven,"hit",bladehit,AMI3 and 3 or 2,"")
				fask.delay(0.5,function()
					StartP:Stop()
				end)
			end
		end
	end
end)

function CheckStun()
	if game:GetService('Players').LocalPlayer.Character:FindFirstChild("Stun") then
		return game:GetService('Players').LocalPlayer.Character.Stun.Value ~= 0
	end
	return false
end

DamageAura = true
LPH_JIT_MAX(function()
	spawn(function()
		while game:GetService("RunService").Stepped:Wait() do
			local ac = CombatFrameworkR.activeController
			if ac and ac.equipped and not CheckStun() then
				if DamageAura then
					fask.spawn(function()
						pcall(fask.spawn,AttackFunction)
					end)
				end
			end
		end
	end)
end)()

local kkii = require(game.ReplicatedStorage.Util.CameraShaker)
kkii:Stop()

local ToggleObservation = StFarm:AddToggle({
	Name = "Auto Observation",
	Default = a["Auto Observation"],
	Callback = function(Value)
		SaveSettings("Auto Observation", Value)
	end
})

local ToggleTurnv4 = StFarm:AddToggle({
	Name = "Auto Race V4",
	Default = a["Auto Race V4"],
	Callback = function(Value)
		SaveSettings("Auto Race V4", Value)
	end
})

local ToggleClaimQuest = StFarm:AddToggle({
	Name = "Claim Quest Bones + Cake",
	Default = a["Claim Quest Bones + Cake"],
	Callback = function(Value)
		SaveSettings("Claim Quest Bones + Cake", Value)
	end
})

spawn(function()
	while wait() do
		if a["Auto Observation"] and not plr.PlayerGui.ScreenGui:FindFirstChild("ImageLabel") then
			EnableKen()
		end
		if a["Auto Race V4"] and CanTurnV4() then
			SendKey("Y")
		end
	end
end)

local MFarmSection = MFarm:AddSection("Left", {
	Title = "Auto Farm",
})

MFarmSection:AddSeperator("Method Farm")

local ToggleAutoFarm = MFarmSection:AddToggle({
    Name = "Auto Farm Level",
    Default = a["Auto Farm Level"],
    Callback = function(Value)
        SaveSettings("Auto Farm Level", Value)
    end
})

function GetMobSpawn(dumamay)
	for i, v in pairs(dumamay) do
		dumamay[i] = RemoveLvTitle(v)
	end
	for r, v in pairs(WS["_WorldOrigin"].EnemySpawns:GetChildren()) do
		if v.Name == dumamay or RemoveLvTitle(v.Name) == dumamay then
			return v
		end
	end
end

spawn(function()
	while wait() do
		if a["Auto Farm Level"] then
			if plr.PlayerGui.Main:FindFirstChild("Quest").Visible and not string.find(plr.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "(0/1)") then
				local MobLevel = GetMobLevelFarm()
				if MobLevel then
					for r, v in pairs(game.Workspace.Enemies:GetChildren()) do
						if v.Name == MobLevel then
							if v:FindFirstChild('Humanoid') and v.Humanoid.Health > 0 and v:FindFirstChild('HumanoidRootPart') and v.Parent then
								repeat wait()
									KillMob(v.Name, a["Auto Farm Level"] == false)
								until not a["Auto Farm Level"] or v:FindFirstChild("Humanoid").Health <= 0 or not v:FindFirstChild("Humanoid") or not v.Parent or not v:FindFirstChild("HumanoidRootPart")
							end
						end
					end
				elseif not MobLevel then
					if GetMobSpawn(MobLevel) then
						repeat wait()
							NoClip = true
							Tween(GetMobSpawn(MobLevel).CFrame)
						until GetDistance(GetMobSpawn(MobLevel).Position) <= 10 or MobLevel or a["Auto Farm Level"] == false
					end
				end
			elseif not plr.PlayerGui.Main:FindFirstChild("Quest").Visible or string.find(plr.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "(0/1)") then
				if GetDistance(CFrameQuest().Position) < 10 then
					Rc.Remotes["CommF_"]:InvokeServer("StartQuest", tostring(GetDoubleQuest()["Name Quest"]), GetDoubleQuest().Id)
				else
					NoClip = true
					Tween(CFrameQuest())
				end
			end
		end
	end
end)

local ToggleAutoFarmDBQuest = MFarmSection:AddToggle({
    Name = "Double Quest",
    Default = a["Double Quest"],
    Callback = function(Value)
        SaveSettings("Double Quest", Value)
    end
})

local CakePrinceTab = MAutoFarm:AddSection("Right", {
	Title = "Cake Prince Farm",
})

local StatusCakePrince = CakePrinceTab:AddParagraph({
	Title = "Cake Prince Status : Spawned",
	Description = "Killed 0"
})

local ToggleAutoCakePrince = CakePrinceTab:AddToggle({
    Name = "Auto Cake Prince",
    Default = a["Auto Cake Prince"],
    Callback = function(Value)
        SaveSettings("Auto Cake Prince", Value)
    end
})

local ToggleAutoCakePrinceSpawn = CakePrinceTab:AddToggle({
    Name = "Auto Spawn Cake Prince",
    Default = a["Auto Spawn Cake Prince"],
    Callback = function(Value)
        SaveSettings("Auto Spawn Cake Prince", Value)
    end
})

local TableCakeMobs = {
	"Cookie Crafter [Lv. 2200]",
	"Cake Guard [Lv. 2225]",
	"Baking Staff [Lv. 2250]",
	"Head Baker [Lv. 2275]"
}

spawn(function()
	while wait() do
		if not DetectMob(TableKatakuri, true) then
			StatusCakePrince:SetTitle("Cake Prince Status : Not Spawned")
			StatusCakePrince:SetDesc("Killed : " ..string.gsub(game.ReplicatedStorage.Remotes.CommF_:InvokeServer("CakePrinceSpawner", true),"%D","") .. " Mob")
		else
			StatusCakePrince:SetTitle("Cake Prince Status : Spawned")
			StatusCakePrince:SetDesc("Killed : 0 Mob")
		end
	end
end)

spawn(function()
    while wait() do
		if a["Auto Cake Prince"] then
			if not DetectMob(TableKatakuri, true) then
				if DetectMob(TableCakeMobs) then
					for r, v in pairs(game.Workspace.Enemies:GetChildren()) do
						if table.find(TableCakeMobs, v.Name) then
							if v:FindFirstChild('Humanoid') and v.Humanoid.Health > 0 and v:FindFirstChild('HumanoidRootPart') and v.Parent then
								repeat wait()
									KillMob(v.Name, a["Auto Cake Prince"] == false)
								until not a["Auto Cake Prince"] or v:FindFirstChild("Humanoid").Health <= 0 or not v:FindFirstChild("Humanoid") or not v.Parent or not v:FindFirstChild("HumanoidRootPart")
							end
						end
					end
				else
					NoClip = true
					Tween(CFrame.new(-2125.64282, 70.3262863, -12400.6777))
				end
			else
				game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CakePrinceSpawner")
				if a["Claim Quest Bones + Cake"] and not plr.PlayerGui.Main.Quest.Visible or not string.find(plr.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "Cookie Crafter") then
					if GetDistance(CFrame.new(-2020.6177978515625, 37.793975830078125, -12029.17578125)) < 10 then
						Rc.Remotes.CommF_:InvokeServer("StartQuest", "CakeQuest1", 1)
					else
						Tween(CFrame.new(-2020.6177978515625, 37.793975830078125, -12029.17578125))
					end
				elseif not a["Claim Quest Bones + Cake"] or a["Claim Quest Bones + Cake"] and plr.PlayerGui.Main.Quest.Visible and string.find(plr.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "Cookie Crafter") then
					if DetectMob(TableKatakuri) then
						for i, v in pairs(game.Workspace.Enemies:GetChildren()) do
							if table.find(TableKatakuri, v.Name) then
								if v:FindFirstChild('Humanoid') and v.Humanoid.Health > 0 and v:FindFirstChild('HumanoidRootPart') and v.Parent then
									repeat wait()
										KillMob(v.Name, a["Auto Cake Prince"] == false)
									until v:FindFirstChild("Humanoid").Health <= 0 or not v:FindFirstChild("Humanoid") or not v.Parent or not v:FindFirstChild("HumanoidRootPart") or not a["Auto Cake Prince"]
								end
							end
						end
					else
						NoClip = true
						Tween(CFrame.new(-2125.64282, 70.3262863, -12400.6777))
					end
				end
			end
		end
	end
end)

local BoneTab = MAutoFarm:AddSection("Right", {
	Title = "Bones Farm",
})

local StatusBone = BoneTab:AddParagraph({
	Title = "You Bone : nil",
	Description = ""
})

spawn(function()
	while wait() do
		StatusBone:SetTitle("You Bone : " .. game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Bones","Check"))
	end
end)

local ToggleAutoBones = BoneTab:AddToggle({
    Name = "Auto Bones Farm",
    Default = a["Auto Bones Farm"],
    Callback = function(Value)
        SaveSettings("Auto Bones Farm", Value)
    end
})

local ToggleAutoSuprise = BoneTab:AddToggle({
    Name = "Auto Random Suprise",
    Default = a["Auto Random Suprise"],
    Callback = function(Value)
        SaveSettings("Auto Random Suprise", Value)
    end
})

spawn(function()
	while wait() do
		if a["Auto Random Suprise"] then
			Rc.Remotes.CommF_:InvokeServer("Bones", "Buy", 1, 1)
		end
	end
end)

local TableBoneMobs = {
	"Reborn Skeleton [Lv. 1975]",
	"Living Zombie [Lv. 2000]",
	"Demonic Soul [Lv. 2025]",
	"Posessed Mummy [Lv. 2050]"
}

spawn(function()
	while wait() do
		if a["Auto Bones Farm"] then
			if a["Claim Quest Bones + Cake"] and not plr.PlayerGui.Main.Quest.Visible or not string.find(plr.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "Demonic Soul") then
				if GetDistance(CFrame.new(-9516.99316, 172.017181, 6078.46533, 0, 0, -1, 0, 1, 0, 1, 0, 0) ) < 10 then
					Rc.Remotes.CommF_:InvokeServer("StartQuest", "HauntedQuest2", 1)
				else
					Tween(CFrame.new(-9516.99316, 172.017181, 6078.46533, 0, 0, -1, 0, 1, 0, 1, 0, 0) )
				end
			elseif not a["Claim Quest Bones + Cake"] or a["Claim Quest Bones + Cake"] and plr.PlayerGui.Main.Quest.Visible and string.find(plr.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "Demonic Soul") then
				if DetectMob(TableBoneMobs) then
					for i, v in pairs(WS.Enemies:GetChildren()) do
						if table.find(TableBoneMobs, v.Name) then
							if v:FindFirstChild('Humanoid') and v.Humanoid.Health > 0 and v:FindFirstChild('HumanoidRootPart') and v.Parent then
								repeat wait()
									KillMob(v.Name, a["Auto Bones Farm"] == false)
								until not a["Auto Bones Farm"] or v:FindFirstChild("Humanoid").Health <= 0 or not v:FindFirstChild("Humanoid") or not v.Parent or not v:FindFirstChild("HumanoidRootPart")
							end
						end
					end
				end
			end		
		end
	end
end)
