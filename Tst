if not game:IsLoaded() then game.Loaded:Wait() end
local fask = task 
setreadonly(fask,false)

local RunService =  game:GetService("RunService")
local myWait = function(n)
	if not n then
		return RunService.Heartbeat:Wait()
	else
		local lasted = 0
		repeat
			lasted = lasted + RunService.Heartbeat:Wait()
		until lasted >= n
		return lasted
	end
end
fask.wait = myWait

local isloadedui
local HttpService = game:GetService("HttpService")
local PlaceId = game.PlaceId
local plr = game.Players.LocalPlayer
local WS = game.Workspace
local Rc = game.ReplicatedStorage
if not LPH_OBFUSCATED then
	LPH_JIT_MAX = (function(...) return ... end)
	LPH_NO_VIRTUALIZE = (function(...) return ... end)
	LPH_NO_UPVALUES = (function(...) return ... end)
end
if getgenv().Team == nil or getgenv().Team == "" then
    getgenv().Team = "Pirates"
end
if plr.PlayerGui.Main:FindFirstChild("ChooseTeam") then
    repeat
        wait()
        if plr.PlayerGui:WaitForChild("Main").ChooseTeam.Visible == true then
            for i, v in pairs(
                getconnections(
                    plr.PlayerGui.Main.ChooseTeam.Container[getgenv().Team].Frame.TextButton.Activated
                )
            ) do
                for a, b in pairs(getconnections(game:GetService("UserInputService").TouchTapInWorld)) do
                    b:Fire()
                end
                v.Function()
            end
        end
    until plr.Team ~= nil and game:IsLoaded()
end

game:GetService("StarterGui"):SetCore("SendNotification", {Title = "sitink hub", Text = "Loading...", Duration = 5})

if islclosure(loadstring) then
    while true do
    end 
end

repeat
    task.wait()
until game:IsLoaded() and game.Players and plr
if islclosure(loadstring) then
    while true do
    end
end

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/MinhNghia2k11/Ui-Library/main/Source"))()
if PlaceId == 2753915549 then
    Old_World = true
elseif PlaceId == 4442272183 then
    New_World = true
elseif PlaceId == 7449423635 then
    Third_World = true
else
    plr:Kick("Sitink Hub \n CAI DIT ME MAY NHAM GAME ROI")
end

Settings = {
    ["Select Weapon"] = "Melee",
    ["Tween Speed"] = 180,
    ["Anti Flag Reset"] = true,
    ["FastAttack"] = true
}

function SaveSettings(ni, ga)
    if ni ~= nil then
        Settings[ni] = ga
    end
    HttpService = game:GetService("HttpService")
    if not isfolder("sitink hub") then
        makefolder("sitink hub")
    end
    writefile("sitink hub" .. "/" .. plr.Name, HttpService:JSONEncode(Settings))
end
function LoadedSettings()
    local bu, lon =
        pcall(
        function()
            HttpService = game:GetService("HttpService")
            if not isfolder("sitink hub") then
                makefolder("sitink hub")
            end
            return HttpService:JSONDecode(readfile("sitink hub" .. "/" .. plr.Name))
        end
    )
    if bu then
        return lon
    else
        SaveSettings()
        return LoadedSettings()
    end
end

Settings = LoadedSettings()

function HopServer(bO)
    if not bO then
        bO = 10
    end
    ticklon = tick()
    repeat
        wait()
    until tick() - ticklon >= 1
    local function Hop()
        for r = 1, math.huge do
            if ChooseRegion == nil or ChooseRegion == "" then
                ChooseRegion = "Singapore"
            else
                plr.PlayerGui.ServerBrowser.Frame.Filters.SearchRegion.TextBox.Text = ChooseRegion
            end
            local bP = Rc.__ServerBrowser:InvokeServer(r)
            for k, v in pairs(bP) do
                if k ~= game.JobId and v["Count"] < bO then
                    SvJob = k
                    Library:MakeNotify({
                        Title = "Sitink Hub",
                        Content = "Join Server Region : " .. ChooseRegion .. "!!!",
                        Description = "Hop Server",
                        Time = 5 
                    })
                    Library:MakeNotify({
                        Title = "Sitink Hub",
                        Content = "Join Server Job Id : ".. SvJob .. "!!!",
                        Description = "Hop Server",
                        Time = 5 
                    })
                    Library:MakeNotify({
                        Title = "Sitink Hub",
                        Content = "Players In Server Hop : " .. v["Count"] .. "!!!",
                        Description = "Hop Server",
                        Time = 5 
                    })
                    Rc.__ServerBrowser:InvokeServer("teleport", SvJob)
                    wait(6)
                end
            end
        end
        return false
    end
    if not getgenv().Loaded then
        local function bQ(v)
            if v.Name == "ErrorPrompt" then
                if v.Visible then
                    if v.TitleFrame.ErrorTitle.Text == "Teleport Failed" then
                        HopServer()
                        v.Visible = false
                    end
                end
                v:GetPropertyChangedSignal("Visible"):Connect(
                    function()
                        if v.Visible then
                            if v.TitleFrame.ErrorTitle.Text == "Teleport Failed" then
                                HopServer()
                                v.Visible = false
                            end
                        end
                    end
                )
            end
        end
        for k, v in pairs(game.CoreGui.RobloxPromptGui.promptOverlay:GetChildren()) do
            bQ(v)
        end
        game.CoreGui.RobloxPromptGui.promptOverlay.ChildAdded:Connect(bQ)
        getgenv().Loaded = true
    end
    while not Hop() do
        wait()
    end
end

function DetectTeleporter(vcs)
    vcspos = vcs.Position
    min = math.huge
    min2 = math.huge
    local y = game.PlaceId
    if y == 2753915549 then
        OldWorld = true
    elseif y == 4442272183 then
        NewWorld = true
    elseif y == 7449423635 then
        ThreeWorld = true
    end
    if ThreeWorld then
        TableLocations = {
            ["Caslte On The Sea"] = Vector3.new(-5058.77490234375, 314.5155029296875, -3155.88330078125),
            ["Hydra"] = Vector3.new(5756.83740234375, 610.4240112304688, -253.9253692626953),
            ["Mansion"] = Vector3.new(-12463.8740234375, 374.9144592285156, -7523.77392578125),
            ["Great Tree"] = Vector3.new(28282.5703125, 14896.8505859375, 105.1042709350586),
            ["Ngu1"] = Vector3.new(-11993.580078125, 334.7812805175781, -8844.1826171875),
            ["ngu2"] = Vector3.new(5314.58203125, 25.419387817382812, -125.94227600097656)
        }
    elseif NewWorld then
        TableLocations = {
            ["Mansion"] = Vector3.new(-288.46246337890625, 306.130615234375, 597.9988403320312),
            ["Flamingo"] = Vector3.new(2284.912109375, 15.152046203613281, 905.48291015625),
            ["122"] = Vector3.new(923.21252441406, 126.9760055542, 32852.83203125),
            ["3032"] = Vector3.new(-6508.5581054688, 89.034996032715, -132.83953857422)
        }
    elseif OldWorld then
        TableLocations = {
            ["1"] = Vector3.new(-7894.6201171875, 5545.49169921875, -380.2467346191406),
            ["2"] = Vector3.new(-4607.82275390625, 872.5422973632812, -1667.556884765625),
            ["3"] = Vector3.new(61163.8515625, 11.759522438049316, 1819.7841796875),
            ["4"] = Vector3.new(3876.280517578125, 35.10614013671875, -1939.3201904296875)
        }
    end
    TableLocations2 = {}
    for r, v in pairs(TableLocations) do
        TableLocations2[r] = (v - vcspos).Magnitude
    end
    for r, v in pairs(TableLocations2) do
        if v < min then
            min = v
            min2 = v
        end
    end
    for r, v in pairs(TableLocations2) do
        if v < min then
            min = v
            min2 = v
        end
    end
    for r, v in pairs(TableLocations2) do
        if v <= min then
            choose = TableLocations[r]
        end
    end
    min3 = (vcspos - plr.Character.HumanoidRootPart.Position).Magnitude
    if min2 + 32 <= min3 and GetDistance(vcspos) > 5000 then
        return choose
    end
end

function requestEntrance(ac)
    args = {
        "requestEntrance",
        ac
    }
    Rc.Remotes.CommF_:InvokeServer(unpack(args))
    oldcframe = plr.Character.HumanoidRootPart.CFrame
    char = plr.Character.HumanoidRootPart
    char.CFrame = CFrame.new(oldcframe.X, oldcframe.Y + 50, oldcframe.Z)
end
function Tween(TargetCFrame)
    pcall(function()
        if isloadedui and plr and plr.Character:FindFirstChild("HumanoidRootPart") and plr.Character:FindFirstChild("Humanoid") and plr.Character.Humanoid.Health > 0 then
            local humanoidRootPart = plr.Character.HumanoidRootPart
            local Distance = (TargetCFrame.Position - humanoidRootPart.Position).Magnitude
            local DetectPortal = DetectTeleporter(TargetCFrame)
            if Distance > 2500 then
                if DetectPortal then
                    pcall(function()
                        tween:Cancel()
                    end)
                    requestEntrance(DetectPortal)
                end
            end
            if Distance <= 250 then
                if tween then
                    tween:Cancel()
                end
                humanoidRootPart.CFrame = TargetCFrame
            else
                local IsLow = plr.Character.Humanoid.Health * 30 / 100
                local NotLow = plr.Character.Humanoid.Health * 70 / 100
                if Settings["Same Y If Low Health"] and plr.Character.Humanoid.MaxHealth <= IsLow then
                    if tween then
                        tween:Cancel()
                    end
                    repeat wait()
                        OldY = humanoidRootPart.CFrame.Y
                        humanoidRootPart.CFrame = CFrame.new(humanoidRootPart.Position.X, math.random(1000, 10000), humanoidRootPart.Position.Z)
                    until plr.Character.Humanoid.Health > NotLow
                    humanoidRootPart.CFrame = CFrame.new(humanoidRootPart.Position.X, OldY, humanoidRootPart.Position.Z)
                end
                local tweenservice = game:GetService("TweenService")
                local Info = TweenInfo.new(Distance / Settings["Tween Speed"], Enum.EasingStyle.Linear)
                tween = tweenservice:Create(humanoidRootPart, Info, {CFrame = TargetCFrame})
                tween:Play()
            end
        end
    end)
end

spawn(function()
    while task.wait() do
        if tween and tween.PlaybackState == Enum.PlaybackState.Playing then
            NoClip = true
        elseif tween then
            NoClip = false
        end
    end
end)

function GetPosBypass(c)
    for i, v in pairs(WS["_WorldOrigin"].PlayerSpawns.Pirates:GetChildren()) do
        if v:IsA("Model") then
            if (v.Part.Position - c.Position).Magnitude < 1500 then
                return v
            end
        end
    end
end
function DetectFruitBackback()
    for i, v in pairs(plr.Backpack:GetChildren()) do
        if string.find(v.Name, "Fruit") then
            if not v:FindFirstChild("Level") then
                return true
            end
        end
    end
    for i, v in pairs(plr.Character:GetChildren()) do
        if string.find(v.Name, "Fruit") then
            if not v:FindFirstChild("Level") then
                return true
            end
        end
    end
    return false
end

function GetBackpack(Item)
    for i, v in pairs(plr.Backpack:GetChildren()) do
        if ((typeof(Item) == "table" and table.find(Item, v.Name)) or (typeof(Item) == "string" and v.Name == Item)) then
            return v
        end
    end
    for i, v in pairs(plr.Character:GetChildren()) do
        if ((typeof(Item) == "table" and table.find(Item, v.Name)) or (typeof(Item) == "string" and v.Name == Item)) then
            return v
        end
    end
end

function CancelTween()
    if not isloadedui then
        return
    end
    if isloadedui then
        tween:Cancel()
        NoClip = false
    end
end

function BypassTo(Nigga)
    pcall(function()
        local Teleporter = DetectTeleporter(Nigga)
        if Teleporter then
            CancelTween()
            requestEntrance(Teleporter)
        end
        if GetDistance(Nigga.Position) > 4500 then
            repeat wait()
                plr.Character:FindFirstChild("Head"):Destroy()
                plr.Character.HumanoidRootPart.CFrame = GetPosBypass(Nigga).Part.CFrame
                plr.Character:WaitForChild("Humanoid"):ChangeState(15)
                wait(2)
                plr.Character.PrimaryPart.CFrame = GetPosBypass(Nigga).Part.CFrame
                wait(3)
            until GetDistance(Nigga.Position) <= 4500 or v.Humanoid.Health <= 0
        end
    end)
end

function ToBypass(gay)
    if GetDistance(gay.Position) > 4500 then
        repeat wait()
            BypassTo(gay)
        until GetDistance(gay.Position) <= 4500 or not plr.Character:FindFirstChild("Humanoid") or plr.Character:FindFirstChild("Humanoid").Health <= 0
    elseif GetDistance(gay.Position) < 4500 then
        NoClip = true
        Tween(gay)
    end
end

function DetectMob(nc)
    local cccc
    for i, v in pairs(WS.Enemies:GetChildren()) do
        if ((typeof(nc) == "table" and table.find(nc, v.Name)) or (v.Name == nc and v.Name ~= "FishBoat" and not string.find(v.Name, "Brigade"))) and v:FindFirstChild('Humanoid') and v.Humanoid.Health > 0 and v:FindFirstChild('HumanoidRootPart') then
            cccc = v
        end
    end
    return cccc
end

function DetectMob2(nc)
    local cccc
    for i, v in pairs(WS.Enemies:GetChildren()) do
        if ((typeof(nc) == "table" and table.find(nc, v.Name)) or (v.Name == nc and v.Name ~= "FishBoat" and not string.find(v.Name, "Brigade"))) and v:FindFirstChild('Humanoid') and v.Humanoid.Health > 0 and v:FindFirstChild('HumanoidRootPart') then
            cccc = v
        end
    end
    for i, v in pairs(Rc:GetChildren()) do
        if ((typeof(nc) == "table" and table.find(nc, v.Name)) or (v.Name == nc and v.Name ~= "FishBoat" and not string.find(v.Name, "Brigade"))) and v:FindFirstChild('Humanoid') and v.Humanoid.Health > 0 and v:FindFirstChild('HumanoidRootPart') then
            cccc = v
        end
    end
    return cccc
end

function GetWP(MeleeorSword)
    Nahfck = ""
    for i, v in pairs(plr.Backpack:GetChildren()) do
        if v:IsA("Tool") and v.ToolTip == MeleeorSword then
            Nahfck = v.Name
        end
    end
    for i, v in pairs(plr.Character:GetChildren()) do
        if v:IsA("Tool") and v.ToolTip == MeleeorSword then
            Nahfck = v.Name
        end
    end
    return Nahfck
end

function EquipWeapon(Giet)
    if Settings["Select WP"] == "" or Settings["Select WP"] == nil then
        Settings["Select WP"] = "Melee"
    end
    Giet = GetWP(Settings["Select WP"])
    local bucac = plr.Backpack:FindFirstChild(Giet)
    if bucac then
        plr.Character.Humanoid:EquipTool(bucac)
    end
end

function Buso()
    if not plr.Character:FindFirstChild("HasBuso") then
        local args = {[1] = "Buso"}
        Rc.Remotes.CommF_:InvokeServer(unpack(args))
    end
end

function InMyNetWork(object)
	if isnetworkowner then
		return isnetworkowner(object)
	else
		if (object.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 200 then 
			return true
		end
		return false
	end
end

function BringMob(huh)
    pcall(function()
        for i, v in pairs(WS.Enemies:GetChildren()) do
            if v.Name == huh and v.Parent and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and (v.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).Magnitude <= 250 then
                if InMyNetWork(v.HumanoidRootPart) then
                    v.HumanoidRootPart.CFrame = BringPos
                    v.Humanoid.JumpPower = 0
                    v.Humanoid.WalkSpeed = 0
                    v.HumanoidRootPart.Size = Vector3.new(30, 30, 30)
                    v.HumanoidRootPart.Transparency = 0.5
                    v.HumanoidRootPart.CanCollide = false
                    v.Head.CanCollide = false
                    if v.Humanoid:FindFirstChild("Animator") then
                        v.Humanoid.Animator:Destroy()
                    end
                    if not v.HumanoidRootPart:FindFirstChild("Lock") then
                        local lock = Instance.new("BodyVelocity")
                        lock.Parent = v.HumanoidRootPart
                        lock.Name = "Lock"
                        lock.MaxForce = Vector3.new(100000, 100000, 100000)
                        lock.Velocity = Vector3.new(0, 0, 0)
                    end
                    sethiddenproperty(plr, "SimulationRadius", math.huge)
                    v.Humanoid:ChangeState(11)
                end
            end
        end
    end)
end

function KillMob(TargetName, valueFunction, UsingFastRoyx)
    local v = DetectMob2(TargetName)
    if v and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and not valueFunction and isloadedui then
        pcall(function()
            repeat task.wait()
                Buso()
                EquipWeapon()
                Tween(v.HumanoidRootPart.CFrame * CFrame.new(0, 15, 0))
                BringPos = v.HumanoidRootPart.CFrame
                BringMob(TargetName)
                NoClip = true
                if UsingFastRoyx == true and UsingFastRoyx ~= nil then
                    if GetDistance(v.HumanoidRootPart.Position) <= 100 then
                        FastRoyX = true
                    end
                end
            until not v:FindFirstChild("HumanoidRootPart") or not v:FindFirstChild("Humanoid") or v.Humanoid.Health == 0 or valueFunction
            NoClip = false
            FastRoyx = false
        end)
    end
end

local QuestKhac = {"BartiloQuest", "CitizenQuest"}
local function S()
    local Lvl = plr.Data.Level.Value
    local GuideModule = require(Rc.GuideModule)
    local Quests = require(Rc.Quests)
    for i, v in pairs(GuideModule["Data"]["NPCList"]) do
        for i1, v1 in pairs(v["Levels"]) do
            if Lvl >= v1 then
                if not levelreq then
                    levelreq = 0
                end
                if v1 > levelreq then
                    npcpos = i["CFrame"]
                    Mob3 = i1
                    levelreq = v1
                end
                if #v["Levels"] == 3 and Mob3 == 3 then
                    npcpos = i["CFrame"]
                    Mob3 = 2
                    levelreq = v["Levels"][2]
                end
            end
        end
    end
    for i, v in pairs(Quests) do
        for i1, v1 in pairs(v) do
            for O, P in pairs(v1.Task) do
                if v1["LevelReq"] == levelreq and v1.Task[O] > 1 and not table.find(QuestKhac, tostring(i)) then
                    Mob2 = i
                    for i2, v2 in pairs(v1["Task"]) do
                        Mob1 = i2
                    end
                end
            end
        end
    end
end
local Q = require(Rc.Quests)
local a3 = require(Rc:WaitForChild("GuideModule"))
function CheckDataQuest()
    for r, v in next, a3.Data do
        if r == "QuestData" then
            return true
        end
    end
    return false
end
function CheckMobDataQuest()
    local a
    if CheckDataQuest() then
        for r, v in next, a3.Data.QuestData.Task do
            a = r
        end
    end
    return a
end
function CheckDoubleQuest()
    S()
    local a5 = {}
    if
        plr.Data.Level.Value >= 10 and Settings["Double Quest"] and CheckDataQuest() and
            CheckMobDataQuest() == Mob1 and
            #CheckMobDataQuest() > 2
     then
        for r, v in pairs(Q) do
            for M, N in pairs(v) do
                for O, P in pairs(N.Task) do
                    if tostring(O) == Mob1 then
                        for a6, a7 in next, v do
                            for a8, a9 in next, a7.Task do
                                if a8 ~= Mob1 and a9 > 1 then
                                    if a7.LevelReq <= plr.Data.Level.Value then
                                        a5["Name"] = tostring(a8)
                                        a5["Mob2"] = r
                                        a5["ID"] = a6
                                    else
                                        a5["Name"] = Mob1
                                        a5["Mob2"] = Mob2
                                        a5["ID"] = Mob3
                                    end
                                    return a5
                                end
                            end
                        end
                    end
                end
            end
        end
    else
        a5["Name"] = Mob1
        a5["Mob2"] = Mob2
        a5["ID"] = Mob3
        return a5
    end
    a5["Name"] = Mob1
    a5["Mob2"] = Mob2
    a5["ID"] = Mob3
    return a5
end
function MobLevel1OrMobLevel2()
    local aa = {}
    for r, v in pairs(game.Workspace.Enemies:GetChildren()) do
        if
            not table.find(aa, v.Name) and v:IsA("Model") and v.Name ~= "PirateBasic" and
                v.Name ~= "FishBoat" and
                not string.find(v.Name, "Brigade") and
                v:FindFirstChild("Humanoid") and
                v.Humanoid.Health > 0 and
                v:FindFirstChild("HumanoidRootPart")
         then
            table.insert(aa, v.Name)
        end
    end
    for r, v in pairs(aa) do
        local ab = v
        v = tostring(v:gsub(" %pLv. %d+%p", ""))
        if tostring(v) == CheckMobDataQuest() then
            return tostring(ab)
        end
    end
    return false
end

local GuideModule = require(Rc.GuideModule)
function NpcPos()
    for i,v in pairs(GuideModule["Data"]["NPCList"]) do
        if v["NPCName"] == GuideModule["Data"]["LastClosestNPC"] then
            return i["CFrame"]
        end
    end
end

Mob = ""
Mob1 = ""
if game.Workspace:FindFirstChild("MobSpawns") then
    for i, v in pairs(game.Workspace:GetChildren()) do
        if v.Name == "MobSpawns" then
            v:Destroy()
        end
    end
end
local CreateFoldermmb = Instance.new("Folder")
CreateFoldermmb.Parent = game.Workspace
CreateFoldermmb.Name = "MobSpawns"

function RemoveLevelTitle(v)
    return tostring(tostring(v):gsub(" %pLv. %d+%p", ""):gsub(" %pRaid Boss%p", ""):gsub(" %pBoss%p", ""))
end 
spawn(
    function()
        while wait() do 
            for i, v in pairs(game.workspace.MobSpawns:GetChildren()) do  
                v.Name = RemoveLevelTitle(v.Name)
            end
        end
    end
)
function MobDepTrai()
    MobDepTraiTable = {}
    for i, v in pairs(WS["_WorldOrigin"].EnemySpawns:GetChildren()) do
        table.insert(MobDepTraiTable, v)
    end
    local tablefoldermmb = {}
    for i, v in next, require(Rc.Quests) do
        for i1, v1 in next, v do
            for i2, v2 in next, v1.Task do
                if v2 > 1 then
                    table.insert(tablefoldermmb, i2)
                end
            end
        end
    end
    for i, v in pairs(getnilinstances()) do
        if table.find(tablefoldermmb, RemoveLevelTitle(v.Name)) then
            table.insert(MobDepTraiTable, v)
        end
    end
    return MobDepTraiTable
end
local MobSpawnList = MobDepTrai()
function ReloadFolderMob()
    for i, v in next, game.Workspace.MobSpawns:GetChildren() do
        v:Destroy()
    end
    for i, v in pairs(MobSpawnList) do
        if v then
            if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then
                MobNew = Instance.new("Part")
                MobNew.CFrame = v.HumanoidRootPart.CFrame
                MobNew.Name = v.Name
                MobNew.Anchored = true
                MobNew.Transparency = 1
                MobNew.CanCollide = false
                MobNew.Parent = game.Workspace.MobSpawns
            elseif v:IsA("Part") then
                MobNew = v:Clone()
                MobNew.Parent = game.Workspace.MobSpawns
            end
        end
    end
end
ReloadFolderMob()
function GetMobNameList(a)
    a = RemoveLevelTitle(a)
    k = {}
    for i, v in pairs(game.Workspace.MobSpawns:GetChildren()) do
        if v.Name == a then
            table.insert(k, v)
        end
    end
    return k
end
function EquipTool(c)
    local tool = plr.Backpack:FindFirstChild(c)
    if tool then
        plr.Character.Humanoid:EquipTool(tool)
    end
end
function GetMob()
    local tablegetmob = {}
    for i, v in pairs(game.Workspace.MobSpawns:GetChildren()) do
        if not table.find(tablegetmob, v.Name) then
            table.insert(tablegetmob, v.Name)
        end
    end
    if string.find(WS["_WorldOrigin"].EnemySpawns:GetChildren()[1].Name, "Lv.") then
        for i, v in pairs(tablegetmob) do
            local b = v
            v = tostring(v:gsub(" %pLv. %d+%p", ""))
            if v == CheckMobDataQuest() then
                return b
            end
        end
    else
        return CheckMobDataQuest()
    end
end
function DetectFruit()
    for i,v in pairs(WS:GetChildren()) do
        if string.find(v.Name, "Fruit") then
            return v
        end
    end
end
function GetMobName(Name)
    local tablegetmob = {}
    for i, v in pairs(game.Workspace.MobSpawns:GetChildren()) do
        if not table.find(tablegetmob, v.Name) then
            table.insert(tablegetmob, v.Name)
        end
    end
    if string.find(WS["_WorldOrigin"].EnemySpawns:GetChildren()[1].Name, "Lv.") then
        for i, v in pairs(tablegetmob) do
            local b = v
            v = tostring(v:gsub(" %pLv. %d+%p", ""))
            if v == Name then
                return b
            end
        end
    else
        return Name
    end
end

function GetDistance(a)
    if typeof(a) == "CFrame" then
        return (a.Position - plr.Character.HumanoidRootPart.Position).Magnitude
    elseif typeof(a) == "Vector3" then
        return (a - plr.Character.HumanoidRootPart.Position).Magnitude
    end
end

function GetQuest()
    if (NpcPos().Position - plr.Character.HumanoidRootPart.Position).Magnitude <= 10 then
        Rc.Remotes["CommF_"]:InvokeServer("StartQuest", tostring(CheckDoubleQuest().Mob2), CheckDoubleQuest().ID)
    else
        NoClip = true
        ToBypass(NpcPos())
    end
end

function SendKey(Name, Hold)
    if Hold == nil then
        Hold = 0.3
    end
    game:service("VirtualInputManager"):SendKeyEvent(true, Name, false, game)
    wait(Hold)
    game:service("VirtualInputManager"):SendKeyEvent(false, Name, false, game)
end

function TweenTemple()
    if GetDistance(CFrame.new(28734.3945, 14888.2324, -109.071777)) > 1500 then
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance", Vector3.new(28282.5703125, 14896.8505859375, 105.1042709350586))
    end
    if GetDistance(CFrame.new(28734.3945, 14888.2324, -109.071777)) > 1500 then
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("requestEntrance", Vector3.new(28282.5703125, 14896.8505859375, 105.1042709350586))
    end
end

function PullLever()
    local bo = CFrame.new(28576.4688, 14935.9512, 75.469101)
    local bp = 0.2
    if
        WS.Map["Temple of Time"].Lever.Lever.CFrame.Z > bo.Z + bp or
            WS.Map["Temple of Time"].Lever.Lever.CFrame.Z < bo.Z - bp
     then
        TweenTemple()
        NoClip = true
        Tween(WS.Map["Temple of Time"].Lever.Part.CFrame)
        for r, v in pairs(WS.Map["Temple of Time"].Lever:GetDescendants()) do
            if v.Name == "ProximityPrompt" then
                fireproximityprompt(v)
            end
        end
    end
end

function MoonTextureId()
    if Old_World then
        return game:GetService("Lighting").FantasySky.MoonTextureId
    elseif New_World then
        return game:GetService("Lighting").FantasySky.MoonTextureId
    elseif Third_World then
        return game:GetService("Lighting").Sky.MoonTextureId
    end
end

local gg = getrawmetatable(game)
local old = gg.__namecall
setreadonly(gg, false)
gg.__namecall =
    newcclosure(
    function(...)
        local method = getnamecallmethod()
        local args = {...}
        if tostring(method) == "FireServer" then
            if tostring(args[1]) == "RemoteEvent" then
                if tostring(args[2]) ~= "true" and tostring(args[2]) ~= "false" then
                    if AimSkill then
                        args[2] = AimPos
                        return old(unpack(args))
                    end
                end
            end
        end
        return old(...)
    end
)

spawn(function()
    while wait() do
        pcall(function()
            if NoClip == true then
                if not plr.Character.Head:FindFirstChild("Nigga") then
                    local bv = Instance.new("BodyVelocity")
                    bv.Name = "Nigga"
                    bv.Velocity = Vector3.new(0, 0, 0)
                    bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                    bv.P = 15000
                    bv.Parent = plr.Character.Head
                end
                for i, v in pairs(plr.Character:GetDescendants()) do
                    if v:IsA("BasePart") then
                        v.CanCollide = false
                    end
                end
            else
                if plr.Character.Head:FindFirstChild("Nigga") then
                    plr.Character.Head:FindFirstChild("Nigga"):Destroy()
                end
            end
        end)
    end
end)

local MobElite = {
    "Diablo",
    "Urban",
    "Deandre"
}

function DetectElite()
    for i, v in pairs(Rc:GetChildren()) do
        if table.find(MobElite, v.Name) then
            if v:FindFirstChild("HumanoidRootPart") and v.Parent and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                return v
            end
        end
    end
    for i, v in pairs(WS.Enemies:GetChildren()) do
        if table.find(MobElite, v.Name) then
            if v:FindFirstChild("HumanoidRootPart") and v.Parent and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                return v
            end
        end
    end
end

lessfoundAnything = ""
function HopLowPlayers()
    if lessfoundAnything == "" then
        SiteHopServerLess = game.HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"))
    else
        SiteHopServerLess = game.HttpService:JSONDecode( game:HttpGet("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100&cursor=" .. lessfoundAnything))
    end
    if SiteHopServerLess.nextPageCursor and SiteHopServerLess.nextPageCursor ~= "null" and SiteHopServerLess.nextPageCursor ~= nil then
        lessfoundAnything = SiteHopServerLess.nextPageCursor
    end
    for i, v in pairs(SiteHopServerLess.data) do
        if v.playing and tonumber(v.playing) <= 4 and v.id ~= game.JobId then
            Library:MakeNotify({
                Title = "Sitink Hub",
                Content = "Players In Server Hop : " .. tonumber(v.playing) .. "!!!",
                Description = "Hop Server",
                Time = 5 
            })
            Library:MakeNotify({
                Title = "Sitink Hub",
                Content = "Server Job Id : " .. tostring(v.id) .. "!!!",
                Description = "Hop Server",
                Time = 5 
            })
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, tostring(v.id), plr)
        end
    end
end

local CombatFramework = require(game:GetService("Players").LocalPlayer.PlayerScripts:WaitForChild("CombatFramework"))
local CombatFrameworkR = getupvalues(CombatFramework)[2]
local Animation = Instance.new("Animation")
function CurrentWeapon()
    local ac = CombatFrameworkR.activeController
    local ret = ac.blades[1]
    if not ret then
        return game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Name
    end
    pcall(
        function()
            while ret.Parent ~= game.Players.LocalPlayer.Character do
                ret = ret.Parent
            end
        end
    )
    if not ret then
        return game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Name
    end
    return ret
end
function DoAttack()
    if game.Players.LocalPlayer.Character.Stun.Value ~= 0 then
        return nil
    end
    local ac = CombatFrameworkR.activeController
    ac.hitboxMagnitude = 55
    if ac and ac.equipped then
        for indexincrement = 1, 1 do
            local bladehit =require(game.ReplicatedStorage.CombatFramework.RigLib).getBladeHits(game.Players.LocalPlayer.Character,{game.Players.LocalPlayer.Character.HumanoidRootPart},60)
            if #bladehit > 0 then
                local AcAttack8 = debug.getupvalue(ac.attack, 5)
                local AcAttack9 = debug.getupvalue(ac.attack, 6)
                local AcAttack7 = debug.getupvalue(ac.attack, 4)
                local AcAttack10 = debug.getupvalue(ac.attack, 7)
                local NumberAc12 = (AcAttack8 * 798405 + AcAttack7 * 727595) % AcAttack9
                local NumberAc13 = AcAttack7 * 798405
                (function()
                    NumberAc12 = (NumberAc12 * AcAttack9 + NumberAc13) % 1099511627776
                    AcAttack8 = math.floor(NumberAc12 / AcAttack9)
                    AcAttack7 = NumberAc12 - AcAttack8 * AcAttack9
                end)()
                AcAttack10 = AcAttack10 + 1
                debug.setupvalue(ac.attack, 5, AcAttack8)
                debug.setupvalue(ac.attack, 6, AcAttack9)
                debug.setupvalue(ac.attack, 4, AcAttack7)
                debug.setupvalue(ac.attack, 7, AcAttack10)
                if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") and ac.blades and ac.blades[1] then
                    Animation.AnimationId = ac.anims.basic[2]
                    ac.humanoid:LoadAnimation(Animation):Play(1, 1)
                    game.ReplicatedStorage.Remotes.Validator:FireServer(math.floor(NumberAc12 / 1099511627776 * 16777215), AcAttack10)
                    game:GetService("ReplicatedStorage").RigControllerEvent:FireServer("weaponChange", tostring(CurrentWeapon()))
                    game:GetService("ReplicatedStorage").RigControllerEvent:FireServer("hit", bladehit, 2, "")
                end
            end
        end
    end
end

FireAttack = 0  
TickStartAttack = tick()
spawn(function()
    local MT = getrawmetatable(game)
    local OldNameCall = MT.__namecall
    setreadonly(MT, false)
    MT.__namecall = newcclosure(function(self, ...)
        local Method = getnamecallmethod()
        local Args = {...}
        if Method == 'FireServer' and self.Name == "RigControllerEvent" and  Args[1] == "hit"  then
            FireAttack = FireAttack + 1 
            TickStartAttack = tick()
        end
        return OldNameCall(self, unpack(Args))
    end)
end)

function Attack()
    pcall(function()
        DoAttack()
    end)
end

function Attack2()
    if FireAttack <= 70 then
        Attack()
        FireAttack = FireAttack + 1
    elseif FireAttack >= 70 then
        Attack()
        task.wait(0.1)
    end
end

function Ken()
    if plr:FindFirstChild("PlayerGui") and plr.PlayerGui:FindFirstChild("ScreenGui") and plr.PlayerGui.ScreenGui:FindFirstChild("ImageLabel") then
    else
        wait(1)
        game:service("VirtualUser"):CaptureController()
        game:service("VirtualUser"):SetKeyDown("0x65")
        wait(2)
        game:service("VirtualUser"):SetKeyUp("0x65")
    end
end

function CheckGlassCake()
    if WS.Map.CakeLoaf.BigMirror.Other.Transparency == 1 then
        return true
    end
    return false
end

function DetectCastleRaiding()
    for i, v in pairs(Rc:GetChildren()) do
        if v.Name ~= 'FishBoat' and not string.find(v.Name, "Brigade") and v:FindFirstChild("HumanoidRootPart") and (v.HumanoidRootPart.Position - CFrame.new(-5496.17432, 313.768921, -2841.53027).Position).Magnitude <= 1500 and v.Parent and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
            return v
        end
    end
    for i, v in pairs(WS.Enemies:GetChildren()) do
        if v.Name ~= 'FishBoat' and not string.find(v.Name, "Brigade") and v:FindFirstChild("HumanoidRootPart") and (v.HumanoidRootPart.Position - CFrame.new(-5496.17432, 313.768921, -2841.53027).Position).Magnitude <= 1500 and v.Parent and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
            return v
        end
    end
end

function GetInventory(uwu)
    for k, v in pairs(Rc.Remotes["CommF_"]:InvokeServer("getInventory")) do
        if v.Name == uwu then
            return v
        end
    end
end

function CheckSaberDoor()
    for r, v in next, WS.Map.Jungle.Final:GetChildren() do
        if v:IsA("Part") and not v.CanCollide then
            return true
        end
    end
end

function CheckButtonJungle()
    for r, v in pairs(WS.Map.Jungle.QuestPlates:GetChildren()) do
        if v:IsA("Model") then
            if v.Button:FindFirstChild("TouchInterest") then
                return v
            end
        end
    end
end

function GetPlayersInThisCFrame(bucacccho, nigga)
    for i, v in pairs(WS.Characters:GetChildren()) do
        if v.Name ~= plr.Name then
            if v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v.Parent and v:FindFirstChild("HumanoidRootPart") then
                if (v.HumanoidRootPart.Position - bucacccho.Position).Magnitude <= nigga then
                    return v
                end
            end
        end
    end
end

function CanGoNewWorld()
    if plr.Data.Level.Value >= 700 and Rc.Remotes.CommF_:InvokeServer("DressrosaQuestProgress", "Dressrosa") ~= 0 then
        return true
    end
    if plr.Data.Level.Value < 700 or Rc.Remotes.CommF_:InvokeServer("DressrosaQuestProgress", "Dressrosa") == 0 then
        return false
    end
    return false
end
local TableDauBuoiAcMin = {
    "rip_indra",
    "rip_indra True Form"
}
local BartiloProgess = Rc.Remotes.CommF_:InvokeServer("BartiloQuestProgress","Bartilo")
function CanGoThirdSea()
    if BartiloProgess == 3 then
        if plr.Data.Level.Value >= 1500 then
            if Rc.Remotes.CommF_:InvokeServer("TalkTrevor", "1") ~= 0 then
                return false
            elseif not Rc.Remotes.CommF_:InvokeServer("ZQuestProgress", "Check")  then
                if DetectMob2("Don Swan") then
                    return true
                end
            elseif Rc.Remotes.CommF_:InvokeServer("ZQuestProgress", "Check") == 0 then
                return true
            end
        end
    end
end
local EliteProgess = Rc.Remotes.CommF_:InvokeServer("EliteHunter", "Progress")

function DetectQuestComplete()
    for i,v in pairs(plr.PlayerGui.Notifications:GetDescendants()) do
        if v:IsA("TextLabel") then 
            if string.find(v.Text,"COMPLETED")  or string.find(v.Text,"QUEST COMPLETED!") then 
                return true
            end
        end
    end
    return false
end

function GetNotification(ccacc)
    for i,v in pairs(plr.PlayerGui.Notifications:GetDescendants()) do
        if v:IsA("TextLabel") then 
            if string.find(v.Text,ccacc) then 
                return true
            end
        end
    end
    return false
end

function Click()
    local bc = game:GetService("VirtualUser")
    bc:CaptureController()
    bc:ClickButton1(Vector2.new(851, 158), WS.Camera.CFrame)
end

CountClaimQuest = 0
function SkipLevel()
    if IsStackFarm then end
    if plr.Data.Level.Value >= 1 and plr.Data.Level.Value <= 29 then
        if DetectMob("Sky Bandit") then
            repeat wait()
                SetDescStatus("Killing Mob Sky Bandit")
                KillMob("Sky Bandit", not Settings["Auto Farm"] or plr.Data.Level.Value < 30)
            until Settings["Auto Farm"] == false or IsStackFarm or plr.Data.Level.Value >= 30 or not DetectMob("Sky Bandit")
        else
            for i, v in pairs(GetMobNameList(GetMobName("Sky Bandit"))) do
                if not DetectMob("Sky Bandit") then
                    SetDescStatus("Waitting Mob Sky Bandit")
                    NoClip = true
                    Tween(v.CFrame * CFrame.new(0, 15, 0))
                end
            end
        end
    elseif plr.Data.Level.Value >= 30 and plr.Data.Level.Value <= 49 then
        if DetectMob("Shanda") then
            repeat wait()
                SetDescStatus("Killing Mob Shanda")
                KillMob("Shanda", not Settings["Auto Farm"] or IsStackFarm or plr.Data.Level.Value < 50)
            until Settings["Auto Farm"] == false or IsStackFarm or plr.Data.Level.Value >= 50 or not DetectMob("Shanda")
        else
            for i, v in pairs(GetMobNameList(GetMobName("Shanda"))) do
                if not DetectMob("Shanda") then
                    SetDescStatus("Waitting Mob Shanda")
                    Tween(v.CFrame * CFrame.new(0, 15, 0))
                    NoClip = true
                end
            end
        end
    elseif plr.Data.Level.Value >= 50 and plr.Data.Level.Value <= 299 then
        if not KillDone then
            if plr.PlayerGui.Main.Quest.Visible == false then
                Rc.Remotes["CommF_"]:InvokeServer("PlayerHunter")
                CountClaimQuest = CountClaimQuest + 1
            elseif plr.PlayerGui.Main.Quest.Visible == true then
                local djtmenokhovailon = string.gsub(plr.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "Defeat ", "")
                djtmenokhovailon = string.gsub(djtmenokhovailon, " %p(0/1)%p", "")
                if not WS.Characters:FindFirstChild(djtmenokhovailon) and plr.PlayerGui.Main.Quest.Visible == true then
                    Rc.Remotes.CommF_:InvokeServer("AbandonQuest")
                end
                if WS.Characters:FindFirstChild(djtmenokhovailon):FindFirstChild("Humanoid").Health <= 0 then
                    Rc.Remotes.CommF_:InvokeServer("AbandonQuest")
                end
                if game.Players[djtmenokhovailon].Data.Level.Value < 20 or game.Players[djtmenokhovailon].Data.Level.Value >= 150 then
                    Rc.Remotes.CommF_:InvokeServer("AbandonQuest")
                    print(game.Players[djtmenokhovailon].Data.Level.Value)
                end
                if GetNotification("Die") or GetNotification("Player") then
                    Rc.Remotes.CommF_:InvokeServer("AbandonQuest")
                end
                if CountClaimQuest >= 15 then
                    HopServer()
                end
                if game.Players[djtmenokhovailon].Data.Level.Value >= 20 and game.Players[djtmenokhovailon].Data.Level.Value < 150 then
                    for i, v in pairs(WS.Characters:GetChildren()) do
                        if v:IsA("Model") then
                            if v.Name == djtmenokhovailon then
                                if v:FindFirstChild("Humanoid").Health > 0 and v.Parent and v:FindFirstChild("HumanoidRootPart") then
                                    if plr.PlayerGui.Main.PvpDisabled.Visible == false then
                                        pcall(function()
                                            repeat wait()
                                                SetDescStatus("Killing Players ".. v.Name)
                                                v.HumanoidRootPart.Size = Vector3.new(30, 30, 30)
                                                Tween(v.HumanoidRootPart.CFrame * CFrame.new(math.random(0, 12), math.random(2, 5), math.random(0, 12)))
                                                EquipWeapon()
                                                NoClip = true
                                                Buso()
                                                if GetDistance(v.HumanoidRootPart.Position) <= 10 then
                                                    SendKey("X")
                                                    Click()
                                                    SendKey("Z")
                                                    Settings["FastAttack"] = false
                                                end
                                            until CheckSafeZone(v) or v:FindFirstChild("Humanoid").Health <= 0 or not v.Parent or not v:FindFirstChild("HumanoidRootPart") or plr.PlayerGui.Main.PvpDisabled.Visible == true or Settings["Auto Farm"] == false
                                            Settings["FastAttack"] = true
                                            NoClip = false
                                        end)
                                    elseif plr.PlayerGui.Main.PvpDisabled.Visible == true then
                                        Rc.Remotes.CommF_:InvokeServer("EnablePvp")
                                    end
                                end
                            end
                        end
                    end
                end
            end
        elseif DetectQuestComplete() then
            Killshanda = true
        end
    elseif plr.Data.Level.Value >= 300 then
        KillDone = false
    end
end

function DetectHakiColorPart()
    for i,v in next,WS.Map["Boat Castle"].Summoner.Circle:GetChildren() do
        if v:IsA("Part") and v.Part.BrickColor.Name ~= "Lime green"  then
            return v
        end
    end
end

function GetTorch()
    local a 
    if not WS.Map.Turtle.QuestTorches.Torch1.Particles.Main.Enabled then
        a = "1"
    elseif not WS.Map.Turtle.QuestTorches.Torch2.Particles.Main.Enabled then
        a = "2"
    elseif not WS.Map.Turtle.QuestTorches.Torch3.Particles.Main.Enabled then
        a = "3"
    elseif not WS.Map.Turtle.QuestTorches.Torch4.Particles.Main.Enabled then
        a = "4"
    elseif not WS.Map.Turtle.QuestTorches.Torch5.Particles.Main.Enabled then
        a = "5"
    end
    for i,v in next,WS.Map.Turtle.QuestTorches:GetChildren() do
        if v:IsA("MeshPart") and  string.find(v.Name, a) and not v.Particles.Main.Enabled then
            return v 
        end
    end
end

function GetZombie(x)
    CountZombie = 0
    for i, v in pairs(WS.Enemies:GetChildren()) do
        if v.Name == "Living Zombie" then
            if v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v.Parent and v:FindFirstChild("HumanoidRootPart") then
                if not x or (v.HumanoidRootPart.Position - Vector3.new(-10171.7607421875, 138.62667846679688, 6008.0654296875).Position).Magnitude < 30 then
                    CountZombie = CountZombie + 1
                end
            end
        end
    end
    return CountZombie
end
function GetZombieNotBring()
    ZombieCount = 0
    for i, v in pairs(WS.Enemies:GetChildren()) do
        if v.Name == "Living Zombie" then
            if v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v.Parent and v:FindFirstChild("HumanoidRootPart") then
                ZombieCount = ZombieCount + 1
            end
        end
    end
    return ZombieCount
end
function BringZombie()
    for i, v in pairs(WS.Enemies:GetChildren()) do
        if v.Name == "Living Zombie" then
            if v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v.Parent and v:FindFirstChild("HumanoidRootPart") then
                if (v.HumanoidRootPart.Position - CFrame.new(-10171.7607421875, 138.62667846679688, 6008.0654296875).Position).Magnitude > 5 then
                    v.HumanoidRootPart.CFrame = CFrame.new(-10171.7607421875, 138.62667846679688, 6008.0654296875)
                    if not v:FindFirstChild("Lock") then
                        local lock = Instance.new("BodyVelocity")
                        lock.Parent = v.HumanoidRootPart
                        lock.Name = "Lock"
                        lock.MaxForce = Vector3.new(100000, 100000, 100000)
                        lock.Velocity = Vector3.new(0, 0, 0)
                    end
                    v.Humanoid.WalkSpeed = 0
                    sethiddenproperty(plr, "SimulationRadius", math.huge)
                    v.Humanoid:ChangeState(11)
                end
            end
        end
    end
end

function GetItemCount(bj)
    for k, v in pairs(game:GetService("ReplicatedStorage").Remotes["CommF_"]:InvokeServer("getInventory")) do
        if v["Name"] == bj then
            return v["Count"]
        end
    end
    return 0
end

function GetToolMastery(cac ,nigga)
    for i, v in next,getupvalues(require(game:GetService("Players").LocalPlayer.PlayerGui.Main.UIController.Inventory).UpdateRender) do
        if i == 4 then
            for v1,v2 in next,v do
                if v2.details.Name == cac and  v2.details.Mastery >= nigga then
                    return true
                end
            end
        end
    end
    return false
end

function Good3()
    for i, v in pairs(getnilinstances()) do
        if v.Name:match("Luxury Boat Dealer") then
            plr.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame
            local args = {
                [1] = "CDKQuest",
                [2] = "BoatQuest",
                [3] = workspace.NPCs:FindFirstChild("Luxury Boat Dealer")
            }
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        end;
    end;
end

function Good4()
    if not IsCastleRaidc then
        NoClip = true
        Tween(CFrame.new(-4993.22314, 557.519348, -2962.49756, 0.506485403, 0, 0.86224854, 0, 1, -0, -0.86224854, 0, 0.506485403))
    else
        local v = DetectCastleRaiding()
        if v then
            repeat wait()
                SetDescStatus("Killing Mob ".. v.Name)
                KillMob(v.Name, Settings["Auto CDK"] == false)
            until Settings["Auto CDK"] == false or not v.Parent or v:FindFirstChild("Humanoid").Health <= 0
        end
    end
end

function GetTorchTushita() 
    if game:GetService("Workspace").Map:FindFirstChild("HeavenlyDimension") then 
        for i, v in pairs(game:GetService("Workspace").Map.HeavenlyDimension:GetChildren()) do
            if string.find(v.Name, "Torch") then
                if v.ProximityPrompt.Enabled == true then
                    return v
                end
            end
        end
    end
end  

function GetSomeMobs()
    Mobs = game.workspace.Enemies:GetChildren()
    if #Mobs <= 0 then 
        return 
    else
        for i, v in pairs(Mobs) do 
            if v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart") then 
                return v 
            end
        end
    end
end      

local PosCake = CFrame.new(
    -678.648804,
    381.353943,
    -11114.2012,
    -0.908641815,
    0.00149294338,
    0.41757378,
    0.00837114919,
    0.999857843,
    0.0146408929,
    -0.417492568,
    0.0167988986,
    -0.90852499
)

function Evil1()
    v = DetectMob2("Mythological Pirate")
    if v then
        repeat wait()
            NoClip = true
            ToBypass(v.HumanoidRootPart.CFrame)
        until plr.Character:FindFirstChild("Humanoid").Health <= 0
    else
        NoClip = true
        ToBypass(CFrame.new(-13516.0458984375, 469.8182373046875, -6899.16064453125))
    end
end

function MobHazeLeft()
    accc = 0
    pcall(function()
        for i, v in pairs(game:GetService("Players").LocalPlayer.QuestHaze:GetChildren()) do
            if v.Value > 0 then
                accc = accc + v.Value
            end
        end
    end)
    return accc
end

function GetMobSpawn(mob)
    mob = RemoveLevelTitle(mob)
    ps, ps2 =
        pcall(
        function(v)
            if not MobSpawnList[mob] then
                if game.workspace.MobSpawns:FindFirstChild(mob) then
                    for i, v in pairs(game.workspace.MobSpawns:GetChildren()) do
                        if RemoveLevelTitle(v.Name) == mob or v.Name == mob then
                            MobSpawnList[mob] = v
                        end
                    end
                else
                    print("waitting put mob on folder MobSpawns")
                end
            end
        end
    )
    return MobSpawnList[mob]
end

function CheckNearestMobSpawnHaze()
    allhaze = {}
    for i, v in next, game:GetService("Players").LocalPlayer.QuestHaze:GetChildren() do
        if v.Value > 0 then
            table.insert(allhaze, RemoveLevelTitle(v.Name))
        end
    end
    nameg = ""
    distancemss = math.huge
    for i, v in pairs(allhaze) do
        if GetMobSpawn(v) then
            if GetDistance(GetMobSpawn(v).Position) < distancemss then
                distancemss = GetDistance(GetMobSpawn(v).Position)
            end
        end
    end
    for i, v in pairs(allhaze) do
        if GetMobSpawn(v) then
            if GetDistance(GetMobSpawn(v).Position) <= distancemss then
                nameg = v
            end
        end
    end
    return nameg
end

function CheckEspHaze()
    local xx
    for i, v in next, game.workspace.Enemies:GetChildren() do
        if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("HazeESP") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
            xx = v
        end
    end
    for i, v in next, game.workspace.Enemies:GetChildren() do
        if RemoveLevelTitle(v.Name) == CheckNearestMobSpawnHaze() and v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
            xx = v
        end
    end
    return xx
end

function Evil2()
    HazeMob = CheckEspHaze()
    if HazeMob then
        KillMob(HazeMob.Name, Settings["Auto CDK"] == false or GetInventory("Dual Cursed Katana") or not HazeMob:FindFirstChild("HazeESP"))
        if MobHazeLeft() <= 0 then
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, plr)
        end
    else
        nigge = CheckNearestMobSpawnHaze()
        if not CheckEspHaze() then
            NoClip = true
            ToBypass(GetMobSpawn(nigge).CFrame * CFrame.new(0, 15, 0))
        end
        if MobHazeLeft() <= 0 then
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, plr)
        end
    end
end

function GetTorchYama() 
    if game:GetService("Workspace").Map:FindFirstChild("HellDimension") then 
        for i, v in pairs(game:GetService("Workspace").Map.HellDimension:GetChildren()) do
            if string.find(v.Name, "Torch") then
                if v.ProximityPrompt.Enabled == true then
                    return v
                end
            end
        end
    end
end  

function BuyMelee(Taolaskiddertop1inallunversite)
    if Taolaskiddertop1inallunversite ~= "Mua Dragon Claw :))" then
        Rc.Remotes.CommF_:InvokeServer(Taolaskiddertop1inallunversite)
    elseif Taolaskiddertop1inallunversite == "Mua Dragon Claw :))" then
        Rc.Remotes.CommF_:InvokeServer("BlackbeardReward", "DragonClaw", "2")
    end
end

function DetectMeleeMastery(cac, chim)
    local v = GetBackpack(cac)
    if v then
        if v.Level.Value >= chim then
            return true
        end
    end
end

function GetDeathStepDoor()
    if WS.Map.IceCastle.Hall.LibraryDoor:FindFirstChild("PhoeyuDoor") then
        return WS.Map.IceCastle.Hall.LibraryDoor.PhoeyuDoor.CanCollide
    end
end

function GetPartProgess2()
    local a  
    if WS.Map.Dressrosa.BartiloPlates.Plate1.BrickColor == BrickColor.new("Sand yellow") then 
        a = "Plate1"
    elseif WS.Map.Dressrosa.BartiloPlates.Plate2.BrickColor == BrickColor.new("Sand yellow") then
        a = "Plate2"
    elseif WS.Map.Dressrosa.BartiloPlates.Plate3.BrickColor == BrickColor.new("Sand yellow") then
        a = "Plate3"
    elseif WS.Map.Dressrosa.BartiloPlates.Plate4.BrickColor == BrickColor.new("Sand yellow") then
        a = "Plate4"
    elseif WS.Map.Dressrosa.BartiloPlates.Plate5.BrickColor == BrickColor.new("Sand yellow") then
        a = "Plate5"
    elseif WS.Map.Dressrosa.BartiloPlates.Plate6.BrickColor == BrickColor.new("Sand yellow") then
        a = "Plate6"
    elseif WS.Map.Dressrosa.BartiloPlates.Plate7.BrickColor == BrickColor.new("Sand yellow") then
        a = "Plate7"
    elseif WS.Map.Dressrosa.BartiloPlates.Plate8.BrickColor == BrickColor.new("Sand yellow") then
        a = "Plate8"
    end
    return a 
end

function DetectRace()
    local Wenlocktoad = Rc.Remotes.CommF_:InvokeServer("Wenlocktoad", "1")
    local Alchemist = Rc.Remotes.CommF_:InvokeServer("Alchemist", "1")
    if plr.Character:FindFirstChild("RaceTransformed") then
        return plr.Data.Race.Value .. " V4"
    end
    if Wenlocktoad == -2 then
        return plr.Data.Race.Value .. " V3"
    end
    if Alchemist == -2 then
        return plr.Data.Race.Value .. " V2"
    end
    return plr.Data.Race.Value .. " V1"
end

function GetSafeZone()
    for i,v in pairs(WS["_WorldOrigin"].SafeZones:GetChildren()) do
        if v:IsA("Part") then
            return v
        end
    end
end

function CheckSafeZone(v)
    if v:FindFirstChild("HumanoidRootPart") then
        if v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
            if (v.HumanoidRootPart.Position - GetSafeZone().Position).Magnitude <= 400 then
                return true
            end
        end
    end
    return false
end

function StartRaid()
    if New_World then
        return fireclickdetector(WS.Map.CircleIsland.RaidSummon2.Button.Main.ClickDetector)
    elseif Third_World then
        return fireclickdetector(WS.Map["Boat Castle"].RaidSummon2.Button.Main.ClickDetector)
    end
end

function getBlueGear()
    if game.workspace.Map:FindFirstChild("MysticIsland") then
        for r, v in pairs(game.workspace.Map.MysticIsland:GetChildren()) do
            if v:IsA("MeshPart") and v.MeshId == "rbxassetid://10153114969" then
                return v
            end
        end
    end
end
function TweenBlueGear()
    BlueGear = getBlueGear()
    if BlueGear then
        NoClip = true
        Tween(BlueGear.CFrame)
        wait(2)
        NoClip = false
    end
end

function getHighestPoint()
    if not game.workspace.Map:FindFirstChild("MysticIsland") then
        return nil
    end
    for r, v in pairs(WS.Map.MysticIsland:GetDescendants()) do
        if v:IsA("MeshPart") then
            if v.MeshId == "rbxassetid://6745037796" then
                return v
            end
        end
    end
end
function TeleHighPoint()
    if WS.Map:FindFirstChild("MysticIsland") then
        if getHighestPoint() then
            NoClip = true
            Tween(getHighestPoint().CFrame * CFrame.new(0, 211.88, 0))
        end
    end
end

function QuestHeadnungcac()
    if GetDistance(CFrame.new(2956.78, 2281.85, -7217.63)) > 10 then
        NoClip = true
        Tween(CFrame.new(2956.78, 2281.85, -7217.63))
    else
        local args = {
            [1] = "RaceV4Progress",
            [2] = "Teleport"
        }
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    end
    if GetDistance(CFrame.new(28610, 14897, 105, 1, 0, 0, 0, 1, 0, 0, 0, 1)) < 1000 then
        repeat wait()
            NoClip = true
            Tween(CFrame.new(28610, 14897, 105, 1, 0, 0, 0, 1, 0, 0, 0, 1))
        until GetDistance(CFrame.new(28610, 14897, 105, 1, 0, 0, 0, 1, 0, 0, 0, 1)) <= 10
        local args = {
            [1] = "RaceV4Progress",
            [2] = "TeleportBack"
        }
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    end
end

function RemoveFrog()
    game.Lighting.FogEnd = 100000
    for r, v in pairs(game.Lighting:GetDescendants()) do
        if v:IsA("Atmosphere") then
            v:Destroy()
        end
    end
end

function TrialHuman()
    if WS["_WorldOrigin"].Locations:FindFirstChild("Trial of Strength") then
        StrengthPart = WS["_WorldOrigin"].Locations["Trial of Strength"].CFrame
        if GetDistance(StrengthPart) <= 1000 then
            for i, v in pairs(WS.Enemies:GetChildren()) do
                if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v.Parent then
                    if GetDistance(v.HumanoidRootPart.Position) <= 2000 then
                        repeat wait()
                            KillMob(v.Name, v:FindFirstChild("Humanoid").Health <= 0 or not v.Parent or Settings["Auto Trials"] == false
                            )
                        until v:FindFirstChild("Humanoid").Health <= 0 or not v.Parent or Settings["Auto Trials"]
                    end
                end
            end
        end
    end
end

function GhoulTrial()
    if WS["_WorldOrigin"].Locations:FindFirstChild("Trial of Carnage") then
        if GetDistance(WS["_WorldOrigin"].Locations["Trial of Carnage"].Position) <= 1000 then
            for i, v in pairs(WS.Enemies:GetChildren()) do
                if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v.Parent then
                    if GetDistance(v.HumanoidRootPart.Position) <= 1000 then
                        repeat wait()
                            KillMob(v.Name, v:FindFirstChild("Humanoid").Health <= 0 or not v.Parent or Settings["Auto Trials"] == false
                            )
                        until v:FindFirstChild("Humanoid").Health <= 0 or not v.Parent or Settings["Auto Trials"]
                    end
                end
            end
        end
    end
end

NoAttackAnimation = false
local DmgAttack = game:GetService("ReplicatedStorage").Assets.GUI:WaitForChild("DamageCounter")
local PC = require(game.Players.LocalPlayer.PlayerScripts.CombatFramework.Particle)
local RL = require(game:GetService("ReplicatedStorage").CombatFramework.RigLib)
local oldRL = RL.wrapAttackAnimationAsync
RL.wrapAttackAnimationAsync = function(a,b,c,d,func)
	if not NoAttackAnimation then
		return oldRL(a,b,c,60,func)
	end

	local Hits = {}
	local Client = game.Players.LocalPlayer
	local Characters = game:GetService("Workspace").Characters:GetChildren()
	for i,v in pairs(Characters) do
		local Human = v:FindFirstChildOfClass("Humanoid")
		if v.Name ~= game.Players.LocalPlayer.Name and Human and Human.RootPart and Human.Health > 0 and Client:DistanceFromCharacter(Human.RootPart.Position) < 65 then
			table.insert(Hits,Human.RootPart)
		end
	end
	local Enemies = game:GetService("Workspace").Enemies:GetChildren()
	for i,v in pairs(Enemies) do
		local Human = v:FindFirstChildOfClass("Humanoid")
		if Human and Human.RootPart and Human.Health > 0 and Client:DistanceFromCharacter(Human.RootPart.Position) < 65 then
			table.insert(Hits,Human.RootPart)
		end
	end
	a:Play(0.01,0.01,0.01)
	pcall(func,Hits)
end

getAllBladeHits = LPH_NO_VIRTUALIZE(function(Sizes)
	local Hits = {}
	local Client = game.Players.LocalPlayer
	local Enemies = game:GetService("Workspace").Enemies:GetChildren()
	for i,v in pairs(Enemies) do
		local Human = v:FindFirstChildOfClass("Humanoid")
		if Human and Human.RootPart and Human.Health > 0 and Client:DistanceFromCharacter(Human.RootPart.Position) < Sizes+5 then
			table.insert(Hits,Human.RootPart)
		end
	end
	return Hits
end)

getAllBladeHitsPlayers = LPH_NO_VIRTUALIZE(function(Sizes)
	local Hits = {}
	local Client = game.Players.LocalPlayer
	local Characters = game:GetService("Workspace").Characters:GetChildren()
	for i,v in pairs(Characters) do
		local Human = v:FindFirstChildOfClass("Humanoid")
		if v.Name ~= game.Players.LocalPlayer.Name and Human and Human.RootPart and Human.Health > 0 and Client:DistanceFromCharacter(Human.RootPart.Position) < Sizes+5 then
			table.insert(Hits,Human.RootPart)
		end
	end
	return Hits
end)

local CombatFramework = require(game:GetService("Players").LocalPlayer.PlayerScripts:WaitForChild("CombatFramework"))
local CombatFrameworkR = getupvalues(CombatFramework)[2]
local RigEven = game:GetService("ReplicatedStorage").RigControllerEvent
local AttackAnim = Instance.new("Animation")
local AttackCoolDown = 0
local cooldowntickFire = 0
local MaxFire = 1000
local FireCooldown = 0.04
local FireL = 0
local bladehit = {}

CancelCoolDown = LPH_JIT_MAX(function()
	local ac = CombatFrameworkR.activeController
	if ac and ac.equipped then
		AttackCoolDown = tick() + (FireCooldown or 0.288) + ((FireL/MaxFire)*0.3)
		RigEven.FireServer(RigEven,"weaponChange",ac.currentWeaponModel.Name)
		FireL = FireL + 1
		fask.delay((FireCooldown or 0.288) + ((FireL+0.4/MaxFire)*0.3),function()
			FireL = FireL - 1
		end)
	end
end)

AttackFunction = LPH_JIT_MAX(function(typef)
	local ac = CombatFrameworkR.activeController
	if ac and ac.equipped then
		local bladehit = {}
		if typef == 1 then
			bladehit = getAllBladeHits(60)
		elseif typef == 2 then
			bladehit = getAllBladeHitsPlayers(65)
		else
			for i2,v2 in pairs(getAllBladeHits(55)) do
				table.insert(bladehit,v2)
			end
			for i3,v3 in pairs(getAllBladeHitsPlayers(55)) do
				table.insert(bladehit,v3)
			end
		end
		if #bladehit > 0 then
			pcall(fask.spawn,ac.attack,ac)
			if tick() > AttackCoolDown then
				CancelCoolDown()
			end
			if tick() - cooldowntickFire > 0.5 then
				ac.timeToNextAttack = 0
				ac.hitboxMagnitude = 60
				pcall(fask.spawn,ac.attack,ac)
				cooldowntickFire = tick()
			end
			local AMI3 = ac.anims.basic[3]
			local AMI2 = ac.anims.basic[2]
			local REALID = AMI3 or AMI2
			AttackAnim.AnimationId = REALID
			local StartP = ac.humanoid:LoadAnimation(AttackAnim)
			StartP:Play(0.01,0.01,0.01)
			RigEven.FireServer(RigEven,"hit",bladehit,AMI3 and 3 or 2,"")
			fask.delay(0.5,function()
				StartP:Stop()
			end)
		end
	end
end)

function CheckStun()
	if game:GetService('Players').LocalPlayer.Character:FindFirstChild("Stun") then
		return game:GetService('Players').LocalPlayer.Character.Stun.Value ~= 0
	end
	return false
end

NeedAttacking = false
UsefastattackPlayers = false
Fast_Attack = false
LPH_JIT_MAX(function()
	spawn(function()
		while game:GetService("RunService").Stepped:Wait() do
			local ac = CombatFrameworkR.activeController
			if ac and ac.equipped and not CheckStun() then
				if NeedAttacking and Fast_Attack then
					fask.spawn(function()
						pcall(fask.spawn,AttackFunction,1)
					end)
				elseif FastRoyx then
					fask.spawn(function()
						pcall(fask.spawn,AttackFunction,3)
					end)
				elseif UsefastattackPlayers and Fast_Attack then
					fask.spawn(function()
						pcall(fask.spawn,AttackFunction,2)
					end)
				elseif NeedAttacking and Fast_Attack == false then
					if ac.hitboxMagnitude ~= 55 then
						ac.hitboxMagnitude = 55
					end
					pcall(fask.spawn,ac.attack,ac)
				end
			end
		end
	end)
end)()

local kkii = require(game.ReplicatedStorage.Util.CameraShaker)
kkii:Stop()

local Windows = Library:MakeWindow({
	Name = "Sitink Hub", 
	Description = "- Blox Fruit", 
	LogoInfo = "rbxassetid://18448428761",
	NameInfo = "Owner Info",
    NamePlayers = "! Nightx",
    InfoColor = Color3.fromRGB(255, 38, 42),
    LogoPlayers = "rbxassetid://18448428761",
	InfoDesc = "discord.gg/JURvkuHr28"
})

local ShopTab = Windows:MakeTab({Name = "Shop"})
local StatusServerTab = Windows:MakeTab({Name = "Status & Server"})
local SettingsFarmTab = Windows:MakeTab({Name = "Settings Farm"})
local MainFarmTab = Windows:MakeTab({Name = "Main Farm"})
local GetItemTab = Windows:MakeTab({Name = "Get Item"})
local FruitandRaidTab = Windows:MakeTab({Name = "Fruits & Raid"})
local UpgradedRaceTab = Windows:MakeTab({Name = "Upgraded Race"})

local SH = ShopTab:MakeSection({
    Title = "World Teleporter",
    Content = "Old World, New World, Third World"
})

SH:MakeButton({
    Name = "Teleport To Old World",
    Description = "",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelMain")
    end
})

SH:MakeButton({
    Name = "Teleport To New Wold",
    Description = "",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelDressrosa")
    end
})

SH:MakeButton({
    Name = "Teleport To Third World",
    Description = "",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelZou")
    end
})

local Muado = ShopTab:MakeSection({
    Title = "Shop",
    Content = ""
})

local ToggleRandomBone = Muado:MakeToggle({
    Name = "Auto Random Suprise",
    Description = "",
    Default = Settings["Auto Random Suprise"],
    Callback = function(Value)
        SaveSettings("Auto Random Suprise", Value)
    end
})

Muado:MakeButton(
    {
        Name = "Buy Buso Haki",
        Description = "",
        Callback = function()
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyHaki", "Buso")
        end
    }
)

Muado:MakeButton(
    {
        Name = "Buy Geppo Haki",
        Description = "",
        Callback = function()
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyHaki", "Geppo")
        end
    }
)

Muado:MakeButton(
    {
        Name = "Buy Flash Step(Soru)",
        Description = "",
        Callback = function()
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyHaki", "Soru")
        end
    }
)

Muado:MakeButton(
    {
        Name = "Buy Observation(Ken) Haki",
        Description = "",
        Callback = function()
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("KenTalk", "Buy")
        end
    }
)

spawn(function()
    while wait() do
        if Settings["Auto Random Suprise"] then
            Rc.Remotes.CommF_:InvokeServer("Bones", "Buy", 1, 1)
        end
    end
end)

local SttSv = StatusServerTab:MakeSection({
    Title = "Status Server",
    Content = "Status Client Time, Elite Spawn, Nigga"
})

local SttFarm = SttSv:MakeParagraph({
    Title = "Status Farm : not",
    Content = ""
})

function SetDescStatus(c)
    SttFarm:Set({Content = c})
end

function SetTitleStatus(c)
    SttFarm:Set({Title = c})
end

local EliteStt = SttSv:MakeParagraph({
    Title = "Elite Status : Not Spawned",
    Content = ""
})

local MirageStt = SttSv:MakeParagraph({
    Title = "Mirage Status : Not Found",
    Content = ""
})

function DetectMirage()
    if WS.Map:FindFirstChild("MysticIsland") then
        return true
    else
        return false
    end
end

spawn(function()
    while wait() do
        if DetectElite() then
            EliteStt:Set({Title = "Elite Status : Spawned"})
        else
            EliteStt:Set({Title = "Elite Status : Not Spawned"})
        end
        if DetectMirage() then
            MirageStt:Set({Title = "Mirage Status : Spawned"})
        else
            MirageStt:Set({Title = "Mirage Status : Not Found"})
        end
    end
end)

local SttCakePrince = SttSv:MakeParagraph({
    Title = "Cake Prince Status : Killing 500 Memaybeo",
    Content = ""
})

local TableCakePrince = {
    "Dough King",
    "Cake Prince"
}

spawn(function()
    while task.wait() do
        if not DetectMob2(TableCakePrince) then
            SttCakePrince:Set({Title = "Cake Prince Status : Killing " ..string.gsub(game.ReplicatedStorage.Remotes.CommF_:InvokeServer("CakePrinceSpawner", true),"%D","") .. " Mob"})
        elseif DetectMob2(TableCakePrince) then
            local v = DetectMob2(TableCakePrince)
            SttCakePrince:Set({Title = "Cake Prince Status : " .. v.Name .. " Spawned!!!"})
        end
    end
end)

local Sv = StatusServerTab:MakeSection({
    Title = "Server",
    Content = "Copy Job Id, Join Job Id, Put Job Id,..."
})

Sv:Section("Server")

Sv:MakeTextBox({
    Name = "Put Job Id Here",
    Default = "...",
    Callback = function(Value)
        JobId = Value
    end
})

Sv:MakeButton({
    Name = "Copy Job Id",
    Description = "",
    Callback = function()
        setclipboard(game.JobId)
    end
})

Sv:MakeButton({
    Name = "Join Job Id",
    Description = "",
    Callback = function()
        game:GetService("TeleportService"):TeleportToPlaceInstance(game.placeId, JobId, plr)
    end
})

Sv:MakeButton({
    Name = "Hop Server",
    Description = "",
    Callback = function()
        HopServer()
    end
})

Sv:MakeButton({
    Name = "Hop Server Low Players",
    Description = "",
    Callback = function()
        HopLowPlayers()
    end
})

Sv:MakeButton({
    Name = "Rejoin",
    Description = "",
    Callback = function()
        game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, plr)
    end
})

local StFarm = SettingsFarmTab:MakeSection({
    Title = "Dropdown Selected",
    Content = "Select Fast Delay, Weapons"
})

local DropdownSelectWP = StFarm:MakeDropdown({
    Name = "Select Weapon",
    Description = "",
    Options = {"Melee", "Sword"},
    Default = Settings["Select WP"],
    Callback = function(Value)
        SaveSettings("Select WP", Value)
    end
})

local DropdownSelectDelay = StFarm:MakeDropdown({
    Name = "Select FastAttack Delay",
    Description = "",
    Options = {"0.1", "0.2", "0.3"},
    Default = Settings["DelayAttack"],
    Callback = function(Value)
        SaveSettings("DelayAttack", Value)
    end
})

local Delay = 0
spawn(function()
    while wait() do
        if Settings["DelayAttack"] then
            if Delay == 0 or Settings["DelayAttack"] == nil or Settings["DelayAttack"] == "" then
                Delay = 0.1
            elseif Settings["DelayAttack"] == "0.3" then
                Delay = 0.1
            elseif Settings["DelayAttack"] == "0.2" then
                Delay = 0.07
            elseif Settings['DelayAttack'] == "0.1" then
                Delay = 0.05
            end
        end
    end
end)

spawn(function()
    while wait() do
        if FireAttack >= 70 then
            TickEndAttack = tick()
            repeat wait()
            until tick() - TickEndAttack >= 3
            FireAttack = 0
        end
    end
end)

spawn(function()
    while task.wait(0.01) do
        if Settings["FastAttack"] then
            repeat task.wait()
                Attack2()
            until Settings["FastAttack"] == false
        end
    end
end)

local DropdownSelectSpeed = StFarm:MakeDropdown({
    Name = "Tween Speed",
    Description = "",
    Options = {"350", "325", "300", "270", "180"},
    Default = Settings["Tween Speed"],
    Callback = function(Value)
        SaveSettings("Tween Speed", Value)
    end
})

local StToggle = SettingsFarmTab:MakeSection({
    Title = "Toggle Selected",
    Content = "Toggle Auto Buso, Observation, ..."
})

local ToggleAntiFlagReset = StToggle:MakeToggle({
    Name = "Anti Flags Reset",
    Description = "Hop Server Per 30 Minutes If Farm",
    Default = Settings["Anti Flag Reset"],
    Callback = function(Value)
        SaveSettings("Anti Flag Reset", Value)
    end
})

local ToggleAntiLow = StToggle:MakeToggle({
    Name = "Same Y Low Health",
    Description = "",
    Default = Settings["Same Y Low Health"],
    Callback = function(Value)
        SaveSettings("Same Y Low Health", Value)
    end
})

local ToggleFastAttack = StToggle:MakeToggle({
    Name = "Enable FastAttack",
    Description = "bucaccho",
    Default = Settings["FastAttack"],
    Callback = function(Value)
        SaveSettings("FastAttack", Value)
    end
})

local ToggleAutoBuso = StToggle:MakeToggle({
    Name = "Auto Buso",
    Description = "Auto Turn On Buso",
    Default = true,
    Callback = function(Value)
        AutoBuso = Value
    end
})

local ToggleAutoObservation = StToggle:MakeToggle({
    Name = "Auto Observation",
    Description = "",
    Default = Settings['Auto Observation'],
    Callback = function(Value)
        SaveSettings("Auto Observation", Value)
    end
})

local ToggleAutoV4 = StToggle:MakeToggle({
    Name = "Auto Awakening Race",
    Description = "",
    Default = Settings["Auto Awakening Race"],
    Callback = function(Value)
        SaveSettings("Auto Awakening Race", Value)
    end
})

spawn(function()
    while wait() do
        if AutoBuso then
            if not plr.Character:FindFirstChild("HasBuso") then
                local args = {[1] = "Buso"}
                Rc.Remotes.CommF_:InvokeServer(unpack(args))
            end
        end
    end
end)

spawn(function()
    while wait() do
        if Settings['Auto Observation'] then
            if plr:FindFirstChild("PlayerGui") and plr.PlayerGui:FindFirstChild("ScreenGui") and plr.PlayerGui.ScreenGui:FindFirstChild("ImageLabel") then
            else
                wait(1)
                game:service("VirtualUser"):CaptureController()
                game:service("VirtualUser"):SetKeyDown("0x65")
                wait(2)
                game:service("VirtualUser"):SetKeyUp("0x65")
            end
        end
    end
end)

spawn(function()
    while wait() do
        if Settings["Auto Awakening Race"] then
            if plr.Character:FindFirstChild("RaceEnergy") and plr.Character.RaceEnergy.Value >= 1 and not plr.Character.RaceTransformed.Value then
                SendKey("Y")
            end
        end
    end
end)

StatsOptions = {"Melee", "Defense", "Sword", "Gun", "Demon Fruit"}
local DropdownSelectStats = StToggle:MakeDropdown({
    Name = "Select Stats",
    Description = "Select Stats To Add",
    Options = StatsOptions,
    Default = Settings["SelectStats"],
    Callback = function(Value)
        SaveSettings("SelectStats", Value)
    end
})

local ToggleStats = StToggle:MakeToggle({
    Name = "Auto Add Stats",
    Description = "",
    Default = Settings["Auto Add Stats"],
    Callback = function(Value)
        SaveSettings("Auto Add Stats", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["Auto Add Stats"] then
            if Settings["SelectStats"] ~= nil and Settings["SelectStats"] ~= "" then
                if game:GetService("Players").LocalPlayer.Data.Stats[Settings["SelectStats"]].Level.Value <= 2549 then
                    local args = {
                        [1] = "AddPoint",
                        [2] = Settings["SelectStats"],
                        [3] = 9999
                    }
                    Rc.Remotes.CommF_:InvokeServer(unpack(args))
                end
            end
        end
    end
end)

StToggle:Section("Use Skill")

local ToggleUseDF = StToggle:MakeToggle({
    Name = "Use Devil Fruit",
    Description = "",
    Default = Settings["Use Devil Fruit"],
    Callback = function(Value)
        SaveSettings("Use Devil Fruit", Value)
    end
})

local ToggleUseMelee = StToggle:MakeToggle({
    Name = "Use Melee",
    Description = "",
    Default = Settings["Use Melee"],
    Callback = function(Value)
        SaveSettings("Use Melee", Value)
    end
})

local ToggleUseSword = StToggle:MakeToggle({
    Name = "Use Sword",
    Description = "",
    Default = Settings["Use Sword"],
    Callback = function(Value)
        SaveSettings("Use Sword", Value)
    end
})

local ToggleUseGun = StToggle:MakeToggle({
    Name = "Use Gun",
    Description = "",
    Default = Settings["Use Gun"],
    Callback = function(Value)
        SaveSettings("Use Gun", Value)
    end
})

StToggle:Section("Use Skill Trial")

local ToggleUseSkillZ = StToggle:MakeToggle({
    Name = "Use Skill Z",
    Description = "",
    Default = Settings["Skill Z"],
    Callback = function(Value)
        
    end
})

local ToggleUseSkillX = StToggle:MakeToggle({
    Name = "Use Skill X",
    Description = "",
    Default = Settings["Skill X"],
    Callback = function(Value)
        SaveSettings("Skill X", Value)
    end
})

local ToggleUseSkillC = StToggle:MakeToggle({
    Name = "Use Skill C",
    Description = "",
    Default = Settings["Skill C"],
    Callback = function(Value)
        SaveSettings("Skill C", Value)
    end
})

local MFarm = MainFarmTab:MakeSection({
    Title = "Main Farm",
    Content = "Auto Farm Bosses, Level, Cake Prince, Bones, ..."
})

local tablecodes = {
    "CODESLIDE",
    "NOEXPLOIT",
    "NOOB2ADMIN",
    "ADMINHACKED",
    "fruitconcepts",
    "krazydares",
    "kittgaming",
    "TRIPLEABUSE",
    "KITT_RESET",
    "Fudd10",
    "fudd10_v2",
    "Bignews",
    "Sub2CaptainMaui",
    "Sub2Fer999",
    "Enyu_is_Pro",
    "Magicbus",
    "JCWK",
    "Starcodeheo",
    "Bluxxy",
    "SUB2GAMERROBOT_EXP1",
    "Sub2NoobMaster123",
    "Sub2UncleKizaru",
    "Sub2Daigrock",
    "Axiore",
    "TantaiGaming",
    "StrawHatMaine",
    "Sub2OfficialNoobie",
    "TheGreatAce",
    "SEATROLLING",
    "TRIPLEABUSE",
    "24NOADMIN",
    "ADMIN_TROLL",
    "Axiore",
    "Bignews",
    "Bluxxy",
    "CHANDLER",
    "Enyu_is_Pro",
    "Fudd10",
    "fudd10_v2",
    "JCWK",
    "kittgaming",
    "KITT_RESET",
    "Magicbus",
    "NEWTROLL",
    "SECRET_ADMIN",
    "KITT_RESET",
    "JULYUPDATE_RESET",
    "staffbattle",
    "Sub2CaptainMaui",
    "SUB2GAMERROBOT_RESET1",
    "KittGaming",
    "Sub2Fer999",
    "Enyu_is_Pro",
    "Magicbus",
    "JCWK",
    "StarcodeHEO",
    "Bluxxy",
    "fudd10_v2",
    "FUDD10",
    "BIGNEWS",
    "THEGREATACE",
    "SUB2GAMERROBOT_EXP1",
    "Sub2OfficialNoobie",
    "StrawHatMaine",
    "SUB2NOOBMASTER123",
    "Sub2UncleKizaru",
    "SUB2DAIGROCK",
    "Axiore",
    "TantaiGaming"
}

MFarm:MakeButton({
    Name = "Redeem All Codes",
    Callback = function()
        for i, v in pairs(tablecodes) do
            Rc.Remotes.Redeem:InvokeServer(v)
        end
    end
})

local DropMethodFarm = MFarm:MakeDropdown({
    Name = "Select Method Farm",
    Description = "",
    Options = {"Level Farm", "Bones Farm", "Cake Prince"},
    Default = Settings["Select Method Farm"],
    Callback = function(Value)
        SaveSettings("Select Method Farm", Value)
    end
})

local ToggleAutoFarm = MFarm:MakeToggle({
    Name = "Auto Farm",
    Description = "Start Auto Farm Method Farm plr Selected",
    Default = Settings["Auto Farm"],
    Callback = function(Value)
        SaveSettings("Auto Farm", Value)
    end
})

local ToggleFarmNearest = MFarm:MakeToggle({
    Name = "Kill Aura",
    Description = "",
    Default = Settings["FarmNearest"],
    Callback = function(Value)
        SaveSettings("FarmNearest", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["FarmNearest"] then
            for i, v in pairs(WS.Enemies:GetChildren()) do
                if v:FindFirstChild("HumanoidRootPart") and v.Parent and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and GetDistance(v.HumanoidRootPart.Position) <= 3000 then
                    repeat wait()
                        SetTitleStatus("Status : Farm Nearest Mob")
                        KillMob(v.Name, not Settings["FarmNearest"])
                    until Settings["FarmNearest"] == false or not v.Parent or not v:FindFirstChild("Humanoid") or v:FindFirstChild("Humanoid").Health <= 0 or not v:FindFirstChild("HumanoidRootPart")
                end
            end
        end
    end
end)

local ToggleDoubleQuest = MFarm:MakeToggle({
	Name = "Double Quest",
	Default = Settings["Double Quest"],
	Callback = function(Value)
		SaveSettings("Double Quest", Value)
	end
})

local ToggleSummonKatakuri = MFarm:MakeToggle({
	Name = "Auto Summon Cake Prince",
	Default = Settings['Auto Summon Cake Prince'],
	Callback = function(Value)
		SaveSettings("Auto Summon Cake Prince", Value)
	end
})

spawn(function()
    while wait() do
        if Settings['Auto Summon Cake Prince'] then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CakePrinceSpawner")
        end
    end
end)

local ToggleAcceptQuest = MFarm:MakeToggle({
	Name = "Accept Quest",
	Default = Settings['Accept Quest'],
	Callback = function(Value)
		SaveSettings("Accept Quest", Value)
	end
})

local IsStackFarm = false
local Killshanda = false
spawn(function()
    while wait() do
        if Killshanda then
            if DetectMob("Shanda") then
                repeat wait()
                    KillMob("Shanda",not Settings["Auto Farm"] or KillDone == false or IsStackFarm or plr.Data.Level.Value < 300)
                until Settings["Auto Farm"] == false or IsStackFarm or  plr.Data.Level.Value >= 300 or not DetectMob("Shanda")
            else
                for i, v in pairs(GetMobNameList(GetMobName("Shanda"))) do
                    NoClip = true
                    Tween(v.CFrame * CFrame.new(0, 15, 0))
                end
            end
        end
    end
end)

local TableMobBones = {
    "Reborn Skeleton",
    "Posessed Mummy",
    "Living Zombie",
    "Demonic Soul",
}

local TableMobCakes = {
    "Baking Staff",
    "Cookie Crafter",
    "Cake Guard",
    "Head Baker"
}

RandomPos = CFrame.new(0, 30, 0)
dodge = 1
spawn(function()
    while task.wait() do
        if dodge == 1 then
            RandomPos = CFrame.new(0, 30, 0)
            dodge = 2
            wait(.1)
        elseif dodge == 2 then
            RandomPos = CFrame.new(0, -30, 0)
            dodge = 3
        elseif dodge == 3 then
            
            RandomPos = CFrame.new(30, 30, 0)
            dodge = 4
            wait(.1)
        elseif dodge == 4 then
            dodge = 5
            RandomPos = CFrame.new(0, 30, 30)
            wait(.1)
        elseif dodge == 5 then
            dodge = 1
        end
    end
end)

spawn(function()
    while wait() do
        if Settings["Auto Farm"] then
            if Settings["Select Method Farm"] == "Bones Farm" then
                SetTitleStatus("Status : Bones Farm")
                if DetectMob(TableMobBones) then
                    for i, v in pairs(WS.Enemies:GetChildren()) do
                        if table.find(TableMobBones, v.Name) then
                            if v:FindFirstChild("HumanoidRootPart") and v.Parent and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                                repeat wait()
                                    SetDescStatus("Killing Mob ".. v.Name)
                                    KillMob(v.Name, Settings["Select Method Farm"] ~= "Bones Farm" or Settings["Auto Farm"] == false)
                                until Settings["Select Method Farm"] ~= "Bones Farm" or Settings["Auto Farm"] == false or IsStackFarm or not v.Parent or not v:FindFirstChild("Humanoid") or v:FindFirstChild("Humanoid").Health <= 0 or not v:FindFirstChild("HumanoidRootPart") or IsStackFarm
                            end
                        end
                    end
                else
                    for i, v in pairs(WS.MobSpawns:GetChildren()) do
                        if table.find(TableMobBones, v.Name) then
                            if not DetectMob(TableMobBones) then
                                NoClip = true
                                SetDescStatus("Waitting Mob "..v.Name)
                                ToBypass(v.CFrame * CFrame.new(0, 15, 0))
                            end
                        end
                    end
                end
            elseif Settings["Select Method Farm"] == "Cake Prince" then
                SetTitleStatus("Status : Cake Prince Farm")
                local v = DetectMob2(TableCakePrince)
                if not CheckGlassCake() and v then
                    repeat task.wait()
                        Buso()
                        EquipWeapon()
                        Tween(v.HumanoidRootPart.CFrame * RandomPos)
                        FastRoyx = true
                    until CheckGlassCake() or not DetectMob2(TableCakePrince) or Settings["Select Method Farm"] ~= "Cake Prince" or Settings["Auto Farm"] == false or IsStackFarm or IsStackFarm
                    FastRoyx = false
                elseif CheckGlassCake() and not DetectMob2(TableCakePrince) then
                    if DetectMob(TableMobCakes) then
                        for i, v in pairs(WS.Enemies:GetChildren()) do
                            if table.find(TableMobCakes, v.Name) then
                                if v:FindFirstChild("HumanoidRootPart") and v.Parent and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                                    repeat wait()
                                        SetDescStatus("Killing Mob ".. v.Name)
                                        KillMob(v.Name, Settings["Select Method Farm"] ~= "Cake Prince" or Settings["Auto Farm"] == false)
                                    until Settings["Select Method Farm"] ~= "Cake Prince" or Settings["Auto Farm"] == false or IsStackFarm or not v.Parent or not v:FindFirstChild("Humanoid") or v:FindFirstChild("Humanoid").Health <= 0 or not v:FindFirstChild("HumanoidRootPart") or IsStackFarm
                                end
                            end
                        end
                    else
                        for i, v in pairs(WS.MobSpawns:GetChildren()) do
                            if table.find(TableMobCakes, v.Name) then
                                if not DetectMob(TableMobCakes) then
                                    NoClip = true
                                    SetDescStatus("Waitting Mob "..v.Name)
                                    ToBypass(v.CFrame * CFrame.new(0, 15, 0))
                                end
                            end
                        end
                    end
                end
            elseif Settings["Select Method Farm"] == "Level Farm" then
                if plr.Data.Level.Value < 300 then
                    SkipLevel()
                elseif plr.Data.Level.Value >= 300 then
                    killshanda = false
                    SetTitleStatus("Status : Farm Level")
                    if plr.PlayerGui.Main:FindFirstChild("Quest").Visible and not string.find(plr.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "(0/1)") then
                        if MobLevel1OrMobLevel2() then
                            for r, v in pairs(game.Workspace.Enemies:GetChildren()) do
                                if v.Name == MobLevel1OrMobLevel2() then
                                    if v:FindFirstChild("HumanoidRootPart") and v.Parent and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                                        repeat wait()
                                            SetDescStatus("Killing Mob ".. v.Name)
                                            KillMob(v.Name, Settings["Select Method Farm"] ~= "Level Farm" or 
                                                Settings["Auto Farm"] == false or IsStackFarm or 
                                                not plr.PlayerGui.Main:FindFirstChild("Quest").Visible 
                                            )                                    
                                        until Settings["Select Method Farm"] ~= "Level Farm" or Settings["Auto Farm"] == false or IsStackFarm or not plr.PlayerGui.Main:FindFirstChild("Quest").Visible or not v.Parent or not v:FindFirstChild("Humanoid") or v:FindFirstChild("Humanoid").Health <= 0 or not v:FindFirstChild("HumanoidRootPart") or IsStackFarm
                                    end
                                end
                            end
                        elseif not MobLevel1OrMobLevel2() then
                            for i, v in pairs(GetMobNameList(GetMob())) do
                                if not MobLevel1OrMobLevel2() then
                                    SetDescStatus("Waitting Mob ".. CheckMobDataQuest() .. "")
                                    NoClip = true
                                    ToBypass(v.CFrame * CFrame.new(0, 15, 0))
                                end
                            end
                        end
                    elseif not plr.PlayerGui.Main:FindFirstChild("Quest").Visible or string.find(plr.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "(0/1)") then
                        SetDescStatus("Claim Quest Level Farm")
                        GetQuest()
                    end
                end
            end
        end
    end
end)

MFarm:Section("Others Farmming")

local ToggleElite = MFarm:MakeToggle({
    Name = "Auto Elite",
    Description = "",
    Default = Settings["Auto Elite"],
    Callback = function(Value)
        SaveSettings("Auto Elite", Value)
    end
})

local ToggleEliteHop = MFarm:MakeToggle({
    Name = "Auto Elite Hop",
    Description = "",
    Default = Settings["Auto Elite Hop"],
    Callback = function(Value)
        SaveSettings("Auto Elite Hop", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["Auto Elite"] and Third_World then
            local v = DetectElite()
            if v then
                SetTitleStatus("Status : Farm Elite")
                local nahidwin = plr.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text
                if plr.PlayerGui.Main.Quest.Visible == false or not string.find(nahidwin, "Diablo") and not string.find(nahidwin, "Deandre") and not string.find(nahidwin, "Urban") then
                    Rc.Remotes.CommF_:InvokeServer("EliteHunter")
                elseif plr.PlayerGui.Main.Quest.Visible == true and string.find(nahidwin, "Diablo") or string.find(nahidwin, "Deandre") or string.find(nahidwin, "Urban") then
                    repeat wait()
                        SetDescStatus("Killing Mob Elite")
                        KillMob(v.Name, Settings["Auto Elite"] == false)
                    until not DetectElite() or Settings["Auto Elite"] == false
                end
            else
                if Settings["Auto Elite Hop"] == true then
                    HopServer()
                    Library:MakeNotify({
                        Title = "Sitink Hub",
                        Content = "Hop Server Find Elite",
                        Description = "Auto Elite",
                        Time = 5 
                    })
                    wait(6)
                end
            end
        end
    end
end)

local ToggleFactory = MFarm:MakeToggle({
    Name = "Auto Factory",
    Description = "",
    Default = Settings["Auto Factory"],
    Callback = function(Value)
        SaveSettings("Auto Factory", Value)
    end
})

MFarm:MakeToggle({
    Name = "Hop Server Find Factoy",
    Default = Settings["Auto Factory Hop"],
    Callback = function(Value)
        SaveSettings("Auto Factory Hop", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["Auto Factory"] and New_World then
            local v = DetectMob2("Core")
            if v then
                SetTitleStatus("Farmming Factory")
                repeat wait()
                    SetDescStatus("Killing Factory")
                    KillMob(v.Name, Settings["Auto Factory"] == false)
                until not DetectMob2("Core") or Settings["Auto Factory"]
            else
                if Settings["Auto Factory Hop"] == true then
                    SetDescStatus("Hop Server Find Factory")
                    HopServer()
                end
            end
        end
    end
end)

local ToggleRaidCastle = MFarm:MakeToggle({
    Name = "Auto Castle Raid",
    Description = "",
    Default = Settings["Auto Castle Raid"],
    Callback = function(Value)
        SaveSettings("Auto Castle Raid", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["Auto Castle Raid"] and Third_World then
            if DetectCastleRaiding() then
                IsCastleRaid = true
                local TimeRaid = tick()
                repeat task.wait()
                    if DetectCastleRaiding() then
                        TimeRaid = tick()
                    end
                until tick() - TimeRaid >= 20 or Settings["Auto Castle Raid"] == false or GetNotification("Good job!")
                IsCastleRaid = false
            end
        end
    end
end)

spawn(function()
    while wait() do
        if Settings["Auto Castle Raid"] and Third_World then
            local v = DetectCastleRaiding()
            if v then
                SetTitleStatus("Status : Farm Castle Raid")
                repeat wait()
                    SetDescStatus("Killing Mob ".. v.Name)
                    KillMob(v.Name, Settings["Auto Castle Raid"] == false)
                until Settings["Auto Castle Raid"] == false or not v.Parent
            end
        end
    end
end)

MFarm:Section("Bosses")

if Old_World then
    TableBoss  = {
        "The Gorilla King",
        "Bobby",
        "Yeti",
        "Mob Leader",
        "Vice Admiral",
        "Warden",
        "Chief Warden",
        "Swan",
        "Magma Admiral",
        "Fishman Lord",
        "Wysper",
        "Thunder God",
        "Cyborg",
        "Saber Expert"
    }
elseif New_World then
    TableBoss  = {
        "Diamond",
        "Jeremy",
        "Fajita",
        "Don Swan",
        "Smoke Admiral",
        "Cursed Captain",
        "Darkbeard",
        "Order",
        "Awakened Ice Admiral",
        "Tide Keeper"
    }
elseif Third_World then
    TableBoss  = {
        "Stone",
        "Island Empress",
        "Kilo Admiral",
        "Captain Elephant",
        "Beautiful Pirate",
        "rip_indra True Form",
        "Longma",
        "Soul Reaper",
        "Cake Queen"
    }
end

local StatusBoss  = MFarm:MakeParagraph({Title = "Status Bosses : Not Spawned", Content = ""})

spawn(function()
    while wait() do
        if Settings["Select Bosses"] then
            if DetectMob2(Settings["Select Bosses"]) then
                StatusBoss:Set({Title = "Status Bosses : Spawned"})
            else
                StatusBoss:Set({Title = "Status Bosses : Not Spawned"})
            end
        end
    end
end)

local DropDownBosses = MFarm:MakeDropdown({
    Name = "Boss List",
    Description = "",
    Options = TableBoss,
    Default = Settings["Select Bosses"],
    Callback = function(Value)
        SaveSettings("Select Bosses", Value)
    end
})

local ToggleAutoBoss  = MFarm:MakeToggle({
    Name = "Auto Boss",
    Description = "",
    Default = Settings['Auto Bosses'],
    Callback = function(Value)
        SaveSettings("Auto Bosses", Value)
    end
})

MFarm:MakeToggle({
    Name = "Claim Quest",
    Default = Settings["Claim Quest Bosses"],
    Callback = function(Value)
        SaveSettings("Claim Quest Bosses", Value)
    end
})

MFarm:MakeToggle({
    Name = "Hop Find Boss",
    Default = Settings["Hop Find Boss"],
    Callback = function(Value)
        SaveSettings("Hop Find Boss", Value)
    end
})

spawn(function()
    while wait() do
        if Settings['Auto Bosses'] then
            SetTitleStatus("Status : Auto Bosses")
            if DetectMob2(Settings["Select Bosses"]) then
                if Settings["Claim Quest Bosses"] and plr.PlayerGui.Main.Quest.Visible == false then
                    if GetDistance(GetBoss()["PosQuest"].Position) <= 10 then
                        Rc.Remotes["CommF_"]:InvokeServer("StartQuest", tostring(GetBoss()["Boss2"]), GetBoss()["ID"])
                    else
                        SetDescStatus("Claim Quest")
                        NoClip = true
                        Tween(GetBoss()["PosQuest"])
                    end
                elseif Settings["Claim Quest Bosses"] and plr.PlayerGui.Main.Quest.Visible == true then
                    repeat wait()
                        SetDescStatus("Killing Bosses ".. Settings["Select Bosses"] .. "")
                        KillMob(Settings["Select Bosses"], plr.PlayerGui.Main.Quest.Visible == false or Settings['Auto Bosses'] == false)
                    until plr.PlayerGui.Main.Quest.Visible == false or not Settings['Auto Bosses'] == false or not DetectMob2(Settings["Select Bosses"])
                elseif not Settings["Claim Quest Bosses"] then
                    repeat wait()
                        SetDescStatus("Killing Bosses ".. Settings["Select Bosses"] .. "")
                        KillMob(Settings["Select Bosses"], Settings['Auto Bosses'] == false)
                    until not Settings['Auto Bosses'] == false or not DetectMob2(Settings["Select Bosses"])
                end
            else
                if Settings["Hop Find Boss"] == true then
                    SetDescStatus("Hop Server Find Boss " .. Settings["Select Bosses"] .. "")
                    HopServer()
                end
            end
        end
    end
end)

local GItem = GetItemTab:MakeSection({
    Title = "Sword",
    Content = "Auto Farm Sword, Get Sword"
})

local ToggleAutoSaber = GItem:MakeToggle({
    Name = "Auto Saber",
    Description = "",
    Default = Settings["AUTO SABER"],
    Callback = function(Value)
        SaveSettings("AUTO SABER", Value)
    end
})

GItem:MakeToggle({
    Name = "Hop Find Boss",
    Default = Settings["Auto Saber Hop"],
    Callback = function(Value)
        SaveSettings("Auto Saber Hop", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["AUTO SABER"] and Old_World and not GetInventory("Saber") then
            if plr.Data.Level.Value >= 200 then
                SetTitleStatus("Status : Auto Saber")
                if not CheckSaberDoor() then
                    if WS.Map.Jungle.QuestPlates.Door.CanCollide then
                        pcall(function()
                            SetDescStatus("Tween To Button In Jungle")
                            NoClip = true
                            ToBypass(CheckButtonJungle().Button.CFrame)
                        end)
                    else
                        if game.Workspace.Map.Desert.Burn.Part.CanCollide == true then
                            if not GetBackpack("Torch") then
                                SetDescStatus("Get Torch")
                                NoClip = true
                                Tween(WS.Map.Jungle.Torch.CFrame)
                            elseif GetBackpack("Torch") then
                                SetDescStatus("Tween To Desert Door")
                                EquipTool("Torch")
                                NoClip = true
                                Tween(
                                    CFrame.new(
                                        1114.61475,
                                        5.04679728,
                                        4350.22803,
                                        -0.648466587,
                                        -1.28799094e-09,
                                        0.761243105,
                                        -5.70652914e-10,
                                        1,
                                        1.20584542e-09,
                                        -0.761243105,
                                        3.47544882e-10,
                                        -0.648466587
                                    )
                                )
                            end
                        elseif game.Workspace.Map.Desert.Burn.Part.CanCollide == false then
                            if not GetBackpack("Cup") then
                                SetDescStatus("Get Cup")
                                if Rc.Remotes.CommF_:InvokeServer("ProQuestProgress", "RichSon") ~= 0 and Rc.Remotes.CommF_:InvokeServer("ProQuestProgress", "RichSon") ~= 1 then
                                    Rc.Remotes.CommF_:InvokeServer("ProQuestProgress", "GetCup")
                                else
                                    SetDescStatus("Claim Quest RichSon")
                                    if Rc.Remotes.CommF_:InvokeServer("ProQuestProgress", "RichSon") == nil then
                                        Rc.Remotes.CommF_:InvokeServer("ProQuestProgress", "RichSon")
                                    elseif Rc.Remotes.CommF_:InvokeServer("ProQuestProgress", "RichSon") == 0 then
                                        if DetectMob2("Mob Leader") then
                                            repeat wait()
                                                SetDescStatus("Killing Mob Leader")
                                                KillMob("Mob Leader", Settings["AUTO SABER"] == false)
                                            until Settings["AUTO SABER"] == false or not DetectMob2("Mob Leader")
                                            Rc.Remotes.CommF_:InvokeServer("ProQuestProgress", "RichSon")
                                        else
                                            SetDescStatus("Teleport To Mob Leader Spawn")
                                            NoClip = true
                                            Tween(CFrame.new(-2967.59521, -4.91089821, 5328.70703))
                                        end
                                    elseif Rc.Remotes.CommF_:InvokeServer("ProQuestProgress", "RichSon") == 1 then
                                        Rc.Remotes.CommF_:InvokeServer("ProQuestProgress", "RichSon")
                                        SetDescStatus("Get Relic")
                                        wait(0.3)
                                        EquipTool("Relic")
                                        wait(0.1)
                                        ToBypass(
                                            CFrame.new(
                                                -1404.91504,
                                                29.9773273,
                                                3.80598116,
                                                0.876514494,
                                                5.66906877e-09,
                                                0.481375456,
                                                2.53851997e-08,
                                                1,
                                                -5.79995607e-08,
                                                -0.481375456,
                                                6.30572643e-08,
                                                0.876514494
                                            )
                                        )
                                    end
                                end                        
                            elseif GetBackpack("Cup") then
                                SetDescStatus("Give Cup for SickMan")
                                EquipTool("Cup")
                                wait(0.1)
                                Rc.Remotes.CommF_:InvokeServer("ProQuestProgress", "FillCup", plr.Character.Cup)
                                wait(0.3)
                                Rc.Remotes.CommF_:InvokeServer("ProQuestProgress", "SickMan")
                            end
                        end
                    end
                else
                    if DetectMob2('Saber Expert') then
                        repeat wait()
                            MultiFarm = false
                            SetDescStatus("Killing Saber Expert")
                            KillMob("Saber Expert", Settings["AUTO SABER"] == false)
                        until Settings["AUTO SABER"]
                    else
                        if Settings["Auto Saber Hop"] == true then
                            SetDescStatus("Hop Server Find Saber Expert")
                            HopServer()
                        end
                    end
                end
            end
        end
    end
end)

local ToggleAutoSaber = GItem:MakeToggle({
    Name = "Auto Pole",
    Description = "Auto Pole (1st from)",
    Default = Settings["AUTO POLE"],
    Callback = function(Value)
        SaveSettings("AUTO POLE", Value)
    end
})

GItem:MakeToggle({
    Name = "Hop Find Boss",
    Default = Settings["Auto Pole Hop"],
    Callback = function(Value)
        SaveSettings("Auto Pole Hop", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["AUTO POLE"] and Old_World and not GetInventory("Pole (1st Form)") then
            if not GetInventory("Pole (1st Form)") then
                if DetectMob2("Thunder God") then
                    SetTitleStatus("Status : Auto Pole")
                    repeat wait()
                        SetDescStatus("Killing Thunder God")
                        KillMob("Thunder God", Settings["AUTO POLE"] == false)
                    until not DetectMob2("Thunder God") or Settings["AUTO POLE"] == false or GetInventory("Pole (1st Form)")
                else
                    if Settings["Auto Pole Hop"] == true then
                        SetDescStatus("Hop Server Find Boss")
                        HopServer()
                    end
                end
            end
        end
    end
end)

local ToggleAutoRengoku = GItem:MakeToggle({
    Name = "Auto Rengoku",
    Description = "",
    Default = Settings["Auto Rengoku"],
    Callback = function(Value)
        SaveSettings("Auto Rengoku", Value)
    end
})

local TableMobRengoku = {
    "Arctic Warrior",
    "Snow Lurker"
}
spawn(function()
    while wait() do
        if Settings["Auto Rengoku"] and New_World then
            if not GetInventory("Rengoku") then
                SetTitleStatus("Status : Auto Rengoku")
                if not GetBackpack("Hidden Key") then
                    if DetectMob2("Awakened Ice Admiral") then
                        repeat wait()
                            SetDescStatus("Killing Bosses : Awakened Ice Admiral")
                            KillMob("Awakened Ice Admiral", GetInventory("Rengoku") or Settings["Auto Rengoku"] == false)
                        until Settings["Auto Rengoku"] == false or GetInventory("Rengoku") or not DetectMob2("Awakened Ice Admiral")
                    else
                        local v = DetectMob2(TableMobRengoku)
                        if v then
                            repeat wait()
                                SetDescStatus("Killing Mob : "..v.Name)
                                KillMob(v.Name,GetInventory("Rengoku") or Settings["Auto Rengoku"] == false)
                            until Settings["Auto Rengoku"] == false or GetInventory("Rengoku") or DetectMob2("Awakened Ice Admiral") or not DetectMob2(TableMobRengoku)
                        else
                            for i, v in pairs(WS.MobSpawns:GetChildren()) do
                                if table.find(TableMobRengoku, v.Name) then
                                    NoClip = true
                                    SetDescStatus("Waitting Mob "..v.Name)
                                    ToBypass(v.CFrame * CFrame.new(0, 15, 0))
                                end
                            end
                        end
                    end
                elseif GetBackpack("Hidden Key") then
                    SetDescStatus("Equip Hidden Key And Teleport To Pos Rengoku Box")
                    EquipTool("Hidden Key")
                    NoClip = true
                    Tween(CFrame.new(6571.1201171875, 299.23028564453, -6967.841796875))
                end
            end
        end
    end
end)

local AutoGhoulToggle = GItem:MakeToggle({
    Name = "Auto Ghoul Race",
    Description = "",
    Default = Settings["Auto Ghoul Race"],
    Callback = function(Value)
        SaveSettings("Auto Ghoul Race", Value)
    end
})

local AutoGhoulHopToggle = GItem:MakeToggle({
    Name = "Auto Ghoul Race [ Hop ]",
    Description = "",
    Default = Settings["Auto Ghoul Race [ Hop ]"],
    Callback = function(Value)
        SaveSettings("Auto Ghoul Race [ Hop ]", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["Auto Ghoul Race"] and New_World then
            if plr.Data.Race ~= "Ghoul" then
                SetTitleStatus("Status : Auto Ghoul Race")
                if not GetBackpack("Hellfire Torch") then
                    if DetectMob2("Cursed Captain") then
                        repeat wait()
                            SetDescStatus("Killing Mob : Cursed Captain")
                            KillMob("Cursed Captain", Settings["Auto Ghoul Race"] == false or GetBackpack("Hellfire Torch") or plr.Data.Race == "Ghoul")
                        until Settings["Auto Ghoul Race"] == false or GetBackpack("Hellfire Torch") or plr.Data.Race == "Ghoul"
                    else
                        if Settings["Auto Ghoul Race [ Hop ]"] == true then
                            SetDescStatus("Hop Find Boss : Cursed Captain")
                            HopServer()
                        end
                    end
                else
                    SetDescStatus("Change Race To Ghoul")
                    local args = {
                        [1] = "Ectoplasm",
                        [2] = "BuyCheck",
                        [3] = 4
                    }
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                    Rc.Remotes.CommF_:InvokeServer("Ectoplasm", "Buy", 4)
                end
            end
        end
    end
end)

local ToggleAutoDarkCoat = GItem:MakeToggle({
    Name = "Auto Dark Coat",
    Description = "",
    Default = Settings["Auto Dark Coat"],
    Callback = function(Value)
        SaveSettings("Auto Dark Coat", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["Auto Dark Coat"] and New_World then
            SetTitleStatus("Stats : Auto Dark Coat")
            if not DetectMob2("Darkbeard") then
                if not GetBackpack("Fist Of Darkness") then
                    local v = DetectChest()
                    repeat task.wait()
                        SetDescStatus("Auto Chest Find Fist Of Darkness | Chest Distance : " .. math.floor(GetDistance(v.Position)))
                        ToBypass(v.CFrame)
                        NoClip = true
                        if GetDistance(v.Position) <= 2 then
                            firetouchinterest(v, plr.Character.HumanoidRootPart, 0)
                            firetouchinterest(v, plr.Character.HumanoidRootPart, 1)
                        end
                        if GetDistance(v.Position) <= 30 then
                            SendKey("W")
                        end
                    until GetBackpack("Fist Of Darkness") or not v.Parent or Settings["Auto Dark Coat"] == false or DetectMob2("Darkbeard")
                elseif GetBackpack("Fist Of Darkness") then
                    repeat wait()
                        SetDescStatus("Summon Darkbeard")
                        if GetDistance(WS.Map.DarkbeardArena.Summoner.Detection.Position) > 10 then
                            NoClip = true
                            Tween(WS.Map.DarkbeardArena.Summoner.Detection.CFrame)
                        elseif GetDistance(WS.Map.DarkbeardArena.Summoner.Detection.Position) <= 10 then
                            EquipTool("Fist Of Darkness")
                            task.wait()
                            firetouchinterest(plr.Character["Fist of Darkness"].Handle, WS.Map.DarkbeardArena.Summoner.Detection, 0)
                            firetouchinterest(plr.Character["Fist of Darkness"].Handle, WS.Map.DarkbeardArena.Summoner.Detection, 1)
                            firetouchinterest(plr.Character.HumanoidRootPart, WS.Map.DarkbeardArena.Summoner.Detection, 0)
                            firetouchinterest(plr.Character.HumanoidRootPart, WS.Map.DarkbeardArena.Summoner.Detection, 1)
                        end
                    until DetectMob2("Darkbeard") or not GetBackpack("Fist Of Darkness") or Settings["Auto Dark Coat"]
                end
            else
                repeat wait()
                    SetDescStatus("Killing Bosses : Darkbeard")
                    KillMob("Darkbeard", Settings["Auto Dark Coat"] == false)
                until not DetectMob2("Darkbeard") or Settings["Auto Dark Coat"] 
            end
        end
    end
end)

local ToggleAutoLegendSword = GItem:MakeToggle({
    Name = "Auto Sword Legend",
    Description = "",
    Default = Settings["Auto Sword Legend"],
    Callback = function(Value)
        SaveSettings("Auto Sword Legend", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["Auto Sword Legend"] then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LegendarySwordDealer", "2")
        end
    end
end)

GItem:Section(" -- Chest -- ")

local ToggleAutoChest = GItem:MakeToggle({
    Name = "Auto Chest",
    Description = "",
    Default = Settings["Auto Chest"],
    Callback = function(Value)
        SaveSettings("Auto Chest", Value)
    end
})

local ToggleStopItem = GItem:MakeToggle({
    Name = "Stop After Legendery Item",
    Description = "",
    Default = Settings["Stop After Legendery Item"],
    Callback = function(Value)
        SaveSettings("Stop After Legendery Item", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["Stop After Legendery Item"] then
            if GetBackpack("God's Chalice") or GetBackpack("Fist Of Darkness") and Settings["Stop After Legendery Item"] then
                hophopcaidaubuoi = true
            elseif not GetBackpack("God's Chalice") and not GetBackpack("Fist Of Darkness") and Settings["Stop After Legendery Item"] then
                hophopcaidaubuoi = false
            end
        end
    end
end)

local DropdownSelectChest = GItem:MakeDropdown({
    Name = "Select Chest To Hop",
    Description = "x",
    Options = {"30", "40", "60", "70"},
    Default = Settings["Select Chest To Hop"],
    PlaceHolderText = "x",
    Callback = function(Value)
        SaveSettings("Select Chest To Hop", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["Auto Chest Hop"] then
            if Settings["Select Chest To Hop"] == "" or Settings["Select Chest To Hop"] == nil then
                ChestLock = 30
            end
            if Settings["Select Chest To Hop"] == "30" then
                ChestLock = 30
            elseif Settings["Select Chest To Hop"] == "40" then
                ChestLock = 40
            elseif Settings["Select Chest To Hop"] == "60" then
                ChestLock = 60
            elseif Settings["Select Chest To Hop"] == "70" then
                ChestLock = 70
            end
        end
    end
end)

local ToggleChestHop = GItem:MakeToggle({
    Name = "Auto Chest Hop",
    Description = "",
    Default = Settings["Auto Chest Hop"],
    Callback = function(Value)
        SaveSettings("Auto Chest Hop", Value)
    end
})

ChestCount = 0
spawn(function()
    while wait() do
        if Settings["Auto Chest"] then
            if Settings["Stop After Legendery Item"] and GetBackpack("God's Chalice") or GetBackpack("Fist Of Darkness") then Settings["Auto Chest"] = false end
            pcall(function()
                SetTitleStatus("Status : Auto Chest")
                local v = DetectChest()
                repeat task.wait()
                    SetDescStatus("Auto Chest | Chest Distance : " .. math.floor(GetDistance(v.Position)))
                    ToBypass(v.CFrame)
                    NoClip = true
                    if GetDistance(v.Position) <= 2 then
                        firetouchinterest(v, plr.Character.HumanoidRootPart, 0)
                        firetouchinterest(v, plr.Character.HumanoidRootPart, 1)
                    end
                    if GetDistance(v.Position) <= 30 then
                        SendKey("W")
                    end
                until not v.Parent or Settings["Auto Chest"] == false
                ChestCount = ChestCount + 1
            end)
        end
    end
end)

local ToggleAutoDarkDagger = GItem:MakeToggle({
    Name = "Auto DarkDagger",
    Description = "",
    Default = Settings["Auto DarkDagger"],
    Callback = function(Value)
        SaveSettings("Auto DarkDagger", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["Auto DarkDagger"] then
            if not GetInventory("Dark Dagger") then
                local v = DetectMob2(TableDauBuoiAcMin)
                if v then
                    repeat wait()
                        SetDescStatus("Killing Mob : " .. v.Name)
                        KillMob(v.Name, Settings["Auto DarkDagger"] == false, true)
                    until Settings["Auto DarkDagger"] == false
                end
            end
        end
    end
end)

local ToggleAutoSummonripindra = GItem:MakeToggle({
    Name = "Auto Summon rip_indra",
    Description = "",
    Default = Settings["Auto Summon rip_indra"],
    Callback = function(Value)
        SaveSettings("Auto Summon rip_indra", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["Auto Summon rip_indra"] and Third_World then
            SetTitleStatus("Status : Auto Summon Admin")
            if DetectMob2(TableDauBuoiAcMin) then
                SetTitleStatus("Status : Auto Admin")
            local v = DetectMob2(TableDauBuoiAcMin)
            if v then
                repeat wait()
                    SetDescStatus("Killing Mob : " .. v.Name)
                    KillMob(v.Name, Settings["Auto Admin"] == false, true)
                until Settings["Auto Admin"] == false
            end
            else
                if GetBackpack("God's Chalice") then
                    if not DetectHakiColorPart() then
                        SetDescStatus("Equip God's Chalice And Teleport To Part Color Pick")
                        EquipTool("God's Chalice")
                        wait(.1)
                        NoClip = true
                        Tween(WS.Map["Boat Castle"].Summoner.Detection.CFrame)
                    else
                        if DetectHakiColorPart().BrickColor.Name == "Hot pink"  then
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("activateColor","Winter Sky")
                            NoClip = true
                            Tween(DetectHakiColorPart().CFrame)
                        elseif DetectHakiColorPart().BrickColor.Name == "Really red"  then
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("activateColor","Pure Red")
                            NoClip = true
                            Tween(DetectHakiColorPart().CFrame)
                        elseif DetectHakiColorPart().BrickColor.Name == "Oyster"  then
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("activateColor","Snow White")
                            NoClip = true
                            Tween(DetectHakiColorPart().CFrame)
                        end
                    end 
                elseif not GetBackpack("God's Chalice") then
                    SetDescStatus("Dit me may summon admin di")
                    Library:MakeNotify({
                        Title = "Sitink Hub",
                        Content = "Please Get God's Chalice",
                        Description = "Auto Summon rip_indra",
                        Time = 5 
                    })
                    wait(6)
                end
            end
        end
    end
end)

local ToggleAutoAdmin = GItem:MakeToggle({
    Name = "Auto Admin",
    Description = "Auto rip_indra or rip_indra True Form",
    Default = Settings["Auto Admin"],
    Callback = function(Value)
        SaveSettings("Auto Admin", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["Auto Admin"] then
            SetTitleStatus("Status : Auto Admin")
            local v = DetectMob2(TableDauBuoiAcMin)
            if v then
                repeat wait()
                    SetDescStatus("Killing Mob : " .. v.Name)
                    KillMob(v.Name, Settings["Auto Admin"] == false, true)
                until Settings["Auto Admin"] == false
            end
        end
    end
end)

local ToggleAutoDoughKing = GItem:MakeToggle({
    Name = "Auto Dough King",
    Description = "",
    Default = Settings["Auto Dough King"],
    Callback = function(Value)
        SaveSettings("Auto Dough King", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["Auto Dough King"] and Third_World then
            if not DetectMob2("Dough King") then
                SetTitleStatus("Status : Auto Dough King")
                if not GetBackpack("Sweet Chalice") then
                    if GetBackpack("God's Chalice") then
                        SetDescStatus("Get Sweet Chalice")
                        Rc.Remotes.CommF_:InvokeServer("SweetChaliceNpc")
                    end
                elseif GetBackpack("Sweet Chalice") then
                    if not DetectMob2("Dough King") then
                        if CheckGlassCake() and not DetectMob2("Dough King") then
                            if DetectMob(TableMobCakes) then
                                for i, v in pairs(WS.Enemies:GetChildren()) do
                                    if table.find(TableMobCakes, v.Name) then
                                        if v:FindFirstChild("HumanoidRootPart") and v.Parent and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                                            repeat wait()
                                                SetDescStatus("Killing Mob ".. v.Name)
                                                KillMob(v.Name, Settings["Auto Dough King"] == false, true)
                                            until Settings["Auto Dough King"] == false or not v.Parent or not v:FindFirstChild("Humanoid") or v:FindFirstChild("Humanoid").Health <= 0 or not v:FindFirstChild("HumanoidRootPart") or IsStackFarm
                                        end
                                    end
                                end
                            else
                                for i, v in pairs(WS.MobSpawns:GetChildren()) do
                                    if table.find(TableMobCakes, v.Name) then
                                        NoClip = true
                                        SetDescStatus("Waitting Mob "..v.Name)
                                        Tween(v.CFrame * CFrame.new(0, 15, 0))
                                    end
                                end
                            end
                        end
                    end
                end
            elseif DetectMob2("Dough King") then
                SetTitleStatus("Status : Auto Dough King")
                repeat wait()
                    SetDescStatus("Killing Mob : Dough King")
                    KillMob("Dough King", Settings["Auto Dough King"] == false)     
                until Settings["Auto Dough King"] == false or not DetectMob2("Dough King")
            end
        end
    end
end)

local ToggleAutoYama = GItem:MakeToggle({
    Name = "Auto Yama",
    Description = "",
    Default = Settings["Auto Yama"],
    Callback = function(Value)
        SaveSettings("Auto Yama", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["Auto Yama"] and Third_World then
            if EliteProgess >= 30 then
                if not GetInventory("Yama") then
                    SetTitleStatus("Status : Auto Yama")
                    if GetDistance(game.Workspace.Map.Waterfall.SealedKatana.Handle.Position) > 10 then
                        SetDescStatus("Tween to Yama Pos")
                        NoClip = true
                        Tween(game.Workspace.Map.Waterfall.SealedKatana.Handle.CFrame * CFrame.new(2, 15, 2))
                    else
                        if DetectMob("Ghosh") then
                            KillAura()
                        else
                            SetDescStatus("Huaw!!!!, dit me thanh kiem nang wuaaaaaaaaaaa!!!")
                            fireclickdetector(game.Workspace.Map.Waterfall.SealedKatana.Handle.ClickDetector)
                        end
                    end
                elseif EliteProgess < 30 then
                    if Settings["Auto Elite"] then
                        SetDescStatus("Dit me may kill elite di!!!")
                        Library:MakeNotify({
                            Title = "Sitink Hub",
                            Content = "Turn On Auto Elite Hunter and need to farm " .. 30 - tonumber(EliteProgess) .. " Elite more to get Yama!!!",
                            Description = "Auto Yama",
                            Time = 5 
                        })
                        wait(6)
                    end
                end
            end
        end
    end
end)

local ToggleAutoTushita = GItem:MakeToggle({
    Name = "Auto Tushita",
    Description = "",
    Default = Settings["Auto Tushita"],
    Callback = function(Value)
        SaveSettings("Auto Tushita", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["Auto Tushita"] and Third_World then
            if plr.Data.Level.Value >= 2000 and not GetInventory("Tushita") then
                if not WS.Map.Turtle:FindFirstChild("TushitaGate") then
                    SetTitleStatus("Status : Auto Tushita")
                    if DetectMob2("Longma") then
                        repeat wait()
                            SetDescStatus("Killing Bosses : Long ma bắc giang")
                            KillMob("Longma", Settings["Auto Tushita"] == false or GetInventory("Tushita") == false, true)
                        until Settings["Auto Tushita"] == false or GetInventory("Tushita")
                    end
                else
                    SetTitleStatus("Status : Auto Tushita")
                    if not GetBackpack("Holy Torch") then
                        if DetectMob2(TableDauBuoiAcMin) then
                            SetDescStatus("Teleport To Door Get Holy Torch")
                            NoClip = true
                            Tween(WS.Map.Waterfall.SecretRoom.Room.Door.Door.Hitbox.CFrame)
                        end
                    elseif GetBackpack("Holy Torch") then
                        EquipTool("Holy Torch")
                        SetDescStatus("Di thap duoc di thang ngu")
                        NoClip = true
                        Tween(GetTorch().CFrame)
                    end
                end
            end
        end
    end
end)

local ToggleAutoSoulGuitar = GItem:MakeToggle({
    Name = "Auto Soul Guitar",
    Description = "",
    Default = Settings["Auto Soul Guitar"],
    Callback = function(Value)
        SaveSettings("Auto Soul Guitar", Value)
    end
})

local BlankTablets = {
    "Segment6",
    "Segment2",
    "Segment8",
    "Segment9",
    "Segment5"
}
local Trophy = {
    ["Segment1"] = "Trophy1",
    ["Segment3"] = "Trophy2",
    ["Segment4"] = "Trophy3",
    ["Segment7"] = "Trophy4",
    ["Segment10"] = "Trophy5",
}
local Pipes = {
    ["Part1"] = "Really black",
    ["Part2"] = "Really black",
    ["Part3"] = "Dusty Rose",
    ["Part4"] = "Storm blue",
    ["Part5"] = "Really black",
    ["Part6"] = "Parsley green",
    ["Part7"] = "Really black",
    ["Part8"] = "Dusty Rose",
    ["Part9"] = "Really black",
    ["Part10"] = "Storm blue",
}

spawn(function()
    while wait() do
        if Settings["Auto Soul Guitar"] and Third_World then
            pcall(function()
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("soulGuitarBuy",true)
                if not GetInventory("Soul Guitar") then
                    if not game.ReplicatedStorage.Remotes["CommF_"]:InvokeServer("GuitarPuzzleProgress", "Check") then
                        if game.Lighting.Sky.MoonTextureId == "http://www.roblox.com/asset/?id=9709149431" and (game.Lighting.ClockTime > 15 or game.Lighting.ClockTime < 5) then
                            if (game.Lighting.ClockTime > 18 or game.Lighting.ClockTime < 5) then 
                                if GetDistance(CFrame.new(-8654.314453125, 140.9499053955078, 6167.5283203125)) > 10 then
                                    NoClip = true
                                    Tween(CFrame.new(-8654.314453125, 140.9499053955078, 6167.5283203125))
                                else
                                    game.ReplicatedStorage.Remotes["CommF_"]:InvokeServer("gravestoneEvent", 2)
                                    game.ReplicatedStorage.Remotes["CommF_"]:InvokeServer("gravestoneEvent", 2, true)
                                    task.wait(1)
                                end
                            else
                                Library:MakeNotify({
                                    Title = "Sitink Hub",
                                    Content = "Waitting Fullmoon!!!",
                                    Description = "Auto Soul Guitar",
                                    Time = 5 
                                })
                                wait(6)
                            end
                        end
                    else
                        if plr.PlayerGui.Main.Dialogue.Visible then
                            game:GetService("VirtualUser"):Button1Down(Vector2.new(0, 0))
                            game:GetService("VirtualUser"):Button1Down(Vector2.new(0, 0))
                        end 
                        if not game.ReplicatedStorage.Remotes["CommF_"]:InvokeServer("GuitarPuzzleProgress", "Check").Swamp then
                            if GetDistance(CFrame.new(-10171.7607421875, 138.62667846679688, 6008.0654296875)) > 100 then
                                NoClip = true
                                ToBypass(CFrame.new(-10171.7607421875, 138.62667846679688, 6008.0654296875))
                            else
                                if GetPlayersInThisCFrame(CFrame.new(-10171.7607421875, 138.62667846679688, 6008.0654296875), 750) then
                                    Library:MakeNotify({
                                        Title = "Sitink Hub",
                                        Content = "Players Farming There, Can't not Farming Zombie!!!",
                                        Description = "Auto Soul Guitar",
                                        Time = 5 
                                    })
                                    wait(6)
                                else
                                    if GetZombie() >= 6 then
                                        for i, v in next, WS.Enemies:GetChildren() do
                                            if v.Name == "Living Zombie" then
                                                if v.Humanoid.Health > 0 and v.Parent and v:FindFirstChild("HumanoidRootPart") then
                                                    repeat task.wait()
                                                        BringZombie()
                                                        Buso()
                                                        EquipWeapon()
                                                        Tween(v.HumanoidRootPart.CFrame * CFrame.new(0, 15, 0))
                                                        BringMob(v.Name)
                                                        NoClip = true
                                                    until Settings["Auto Soul Guitar"] == false or v.Humanoid.Health <= 0 or not v.Parent
                                                    NoClip = false
                                                end
                                            end
                                        end
                                    else
                                        if GetZombieNotBring() >= 6 then
                                            BringZombie()
                                        end
                                    end
                                end
                            end
                        elseif not game.ReplicatedStorage.Remotes["CommF_"]:InvokeServer("GuitarPuzzleProgress", "Check").Gravestones then
                            if GetDistance(CFrame.new(-8761.4765625, 142.10487365722656, 6086.07861328125)) > 50 then
                                NoClip = true
                                Tween(CFrame.new(-8761.4765625, 142.10487365722656, 6086.07861328125))
                            else
                                local ClickSigns = {
                                    game.workspace.Map["Haunted Castle"].Placard1.Right.ClickDetector,
                                    game.workspace.Map["Haunted Castle"].Placard2.Right.ClickDetector,
                                    game.workspace.Map["Haunted Castle"].Placard3.Left.ClickDetector,
                                    game.workspace.Map["Haunted Castle"].Placard4.Right.ClickDetector,
                                    game.workspace.Map["Haunted Castle"].Placard5.Left.ClickDetector,
                                    game.workspace.Map["Haunted Castle"].Placard6.Left.ClickDetector,
                                    game.workspace.Map["Haunted Castle"].Placard7.Left.ClickDetector
                                }
                                for i, v in pairs(ClickSigns) do
                                    fireclickdetector(v)
                                end
                            end
                        elseif not game.ReplicatedStorage.Remotes["CommF_"]:InvokeServer("GuitarPuzzleProgress", "Check").Ghost then
                            if GetDistance(CFrame.new(-9755.6591796875, 271.0661315917969, 6290.61474609375)) > 30 then
                                NoClip = true
                                Tween(CFrame.new(-9755.6591796875, 271.0661315917969, 6290.61474609375))
                            else
                                game.ReplicatedStorage.Remotes["CommF_"]:InvokeServer("GuitarPuzzleProgress", "Ghost")
                            end
                        elseif not game.ReplicatedStorage.Remotes["CommF_"]:InvokeServer("GuitarPuzzleProgress", "Check").Trophies then
                            if GetDistance(CFrame.new(-9530.0126953125, 6.104853630065918, 6054.83349609375)) > 30 then
                                NoClip = true
                                Tween(CFrame.new(-9530.0126953125, 6.104853630065918, 6054.83349609375))
                            else
                                local SkidTsuo = game.workspace.Map["Haunted Castle"].Tablet
                                for i, v in pairs(BlankTablets) do
                                    local x = SkidTsuo[v]
                                    if x.Line.Position.X ~= 0 then
                                        repeat
                                            wait()
                                            fireclickdetector(x.ClickDetector)
                                        until x.Line.Position.X == 0
                                    end
                                end
                                for i, v in pairs(Trophy) do
                                    local x = game.workspace.Map["Haunted Castle"].Trophies.Quest[v].Handle.CFrame
                                    x = tostring(x)
                                    x = x:split(", ")[4]
                                    local c = "180"
                                    if x == "1" or x == "-1" then
                                        c = "90"
                                    end
                                    if not string.find(tostring(SkidTsuo[i].Line.Rotation.Z), c) then
                                        repeat
                                            wait()
                                            fireclickdetector(SkidTsuo[i].ClickDetector)
                                        until string.find(tostring(SkidTsuo[i].Line.Rotation.Z), c)
                                        print(i, c)
                                    end
                                end
                            end
                        elseif not game.ReplicatedStorage.Remotes["CommF_"]:InvokeServer("GuitarPuzzleProgress", "Check").Pipes then
                            for i, v in pairs(Pipes) do
                                local x = game.workspace.Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model[i]
                                if x.BrickColor.Name ~= v then
                                    repeat task.wait()
                                        fireclickdetector(x.ClickDetector)
                                    until x.BrickColor.Name == v
                                end
                            end
                        else
                            game.ReplicatedStorage.Remotes["CommF_"]:InvokeServer("soulGuitarBuy", true)
                        end
                    end
                end
            end)
        end
    end
end)

local ToggleAutoSoulGuitarMaterials = GItem:MakeToggle({
    Name = "Auto Soul Guitar < Materials >",
    Description = "",
    Default = Settings["Auto Soul Guitar < Materials >"],
    Callback = function(Value)
        SaveSettings("Auto Soul Guitar < Materials >", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["Auto Soul Guitar < Materials >"] then
            if GetItemCount("Dark Fragment") >= 1 and GetItemCount("Ectoplasm") >= 250 and GetItemCount("Bones") >= 500 then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("soulGuitarBuy",true)
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("soulGuitarBuy")
            elseif GetItemCount("Dark Fragment") < 1 then
                Library:MakeNotify({
                    Title = "Sitink Hub",
                    Content = "Turn On Toggle Auto Darkbeard!!!",
                    Description = "Auto Soul Guitar < Materials >",
                    Time = 5 
                })
                ToggleAutoDarkCoat:Set(true)
                wait(6)
            elseif GetItemCount("Ectoplasm") < 250 then
                Library:MakeNotify({
                    Title = "Sitink Hub",
                    Content = "Please Need Get ".. 250 - tonumber(GetItemCount("Ectoplasm")) .. " Ectoplasm | Wait I Update Auto Ectoplasm!!!",
                    Description = "Auto Soul Guitar < Materials >",
                    Time = 5 
                })
                wait(6)
            elseif GetItemCount("Bones") < 500 then
                Library:MakeNotify({
                    Title = "Sitink Hub",
                    Content = "Please Farm Bone | Set Dropdown Method Farm to Bones Farm and Turn Toggle Auto Farm",
                    Description = "Auto Soul Guitar < Materials >",
                    Time = 5 
                })
                DropMethodFarm:Set("Bones Farm")
                ToggleAutoFarm:Set(true)
                wait(6)
            end
        end
    end
end)

local ToggleAutoCDK = GItem:MakeToggle({
    Name = "Auto CDK < Test >",
    Description = "",
    Default = Settings["Auto CDK"],
    Callback = function(Value)
        SaveSettings("Auto CDK", Value)
    end
})

IsCastleRaidc = false
spawn(function()
    while wait() do
        if Settings["Auto CDK"] and Third_World then
            if DetectCastleRaiding() then
                IsCastleRaidc = true
                local TimeRaid = tick()
                repeat task.wait()
                    if DetectCastleRaiding() then
                        TimeRaid = tick()
                    end
                until tick() - TimeRaid >= 20 or Settings["Auto CDK"] == false or GetNotification("Good job!")
                IsCastleRaidc = false
            end
        end
    end
end)

StartGood = true
spawn(function()
    while wait() do
        if Settings["Auto CDK"] and not GetInventory("Dual Cursed Katana") and Third_World then
            pcall(function()
                if GetInventory("Yama") and GetInventory("Tushita") then
                    if plr.Data.Level.Value >= 2200 then
                        if GetToolMastery("Yama", 350) and GetToolMastery("Tushita", 350) then
                            if not GetBackpack("Yama") and not GetBackpack("Tushita") then
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadItem","Tushita")
                            end
                            GoodQuest = game.ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest", "Progress", "Good").Good
                            EvilQuest = game.ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest", "Progress", "Good").Evil
            
                            if StartGood then 
                                game.ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest", "StartTrial", "Good")
                            else
                                game.ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest", "StartTrial", "Evil")
                            end
                            if GoodQuest == 4 then
                                StartGood =  false
                            end
                            local Dismension
                            if GoodQuest == 4 and EvilQuest == 3 then
                                Dismension = "Pedestal2"
                            elseif GoodQuest == 3 and  EvilQuest == 4 then
                                Dismension = "Pedestal1"
                            end
                            if Dismension  then
                                if (WS.Map.Turtle.Cursed[Dismension].Position-plr.Character.HumanoidRootPart.Position).Magnitude < 10 then
                                    fireproximityprompt(WS.Map.Turtle.Cursed[Dismension].ProximityPrompt)
                                else
                                    NoClip = true
                                    Tween(WS.Map.Turtle.Cursed[Dismension].CFrame)
                                end
                            end
                            if plr.PlayerGui.Main.Dialogue.Visible then
                                game.VirtualUser:Button1Down(Vector2.new(0, 0))
                                game.VirtualUser:Button1Down(Vector2.new(0, 0))
                            end
                            if GoodQuest == 4 and EvilQuest == 4 then
                                if GetDistance(WS.Map.Turtle.Cursed.Pedestal3.Position) > 10 then
                                    NoClip = true
                                    Tween(WS.Map.Turtle.Cursed.Pedestal3.CFrame)
                                else
                                    if WS.Map.Turtle.Cursed.PlacedGem.Transparency == 0 then
                                        if not DetectMob2("Cursed Skeleton Boss [Lv. 2025] [Boss]") then
                                            NoClip = true
                                            Tween(CFrame.new(-12341.66796875, 603.3455810546875, -6550.6064453125))
                                        else
                                            if DetectMob2("Cursed Skeleton Boss [Lv. 2025] [Boss]") then
                                                repeat wait()
                                                    KillMob("Cursed Skeleton Boss [Lv. 2025] [Boss]", Settings["Auto CDK"] == false or GetInventory("Dual Cursed Katana"))
                                                until Settings["Auto CDK"] == false or GetInventory("Dual Cursed Katana")
                                            end
                                        end
                                    end
                                end
                            end
                            if StartGood then
                                if GoodQuest == -3 then
                                    game.ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest", "StartTrial", "Good")
                                    Good3()
                                elseif GoodQuest == -4 then
                                    game.ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest", "StartTrial", "Good")
                                    Good4()
                                elseif GoodQuest == -5 then
                                    game.ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest", "StartTrial", "Good")
                                    if GetDistance(game:GetService("Workspace")["_WorldOrigin"].Locations["Heavenly Dimension"].Position) > 2000 then
                                        if DetectMob2("Cake Queen") then
                                            repeat wait()
                                                KillMob("Cake Queen", Settings["Auto CDK"] == false or GetInventory("Dual Cursed Katana"))
                                            until Settings["Auto CDK"] == false or GetInventory("Dual Cursed Katana")
                                        else
                                            if GetDistance(PosCake) > 1500 then
                                                NoClip = true
                                                ToBypass(PosCake)
                                            elseif GetDistance(PosCake) < 1500 then
                                                NoClip = true
                                                Tween(PosCake)
                                                HopServer()
                                            end
                                        end
                                    elseif GetDistance(game:GetService("Workspace")["_WorldOrigin"].Locations["Heavenly Dimension"].Position) < 2000 then
                                        if game:GetService("Workspace").Map.HeavenlyDimension.Exit.BrickColor == BrickColor.new("Cloudy grey") then 
                                            plr.Character.HumanoidRootPart.CFrame = WS.Map.HeavenlyDimension.Exit.CFrame
                                            NoClip = true
                                            Tween(WS.Map.HeavenlyDimension.Exit.CFrame)
                                        else
                                            local v = GetSomeMobs()
                                            if v then			
                                                repeat wait()
                                                    KillMob(v.Name, Settings["Auto CDK"] == false or not GetSomeMobs())
                                                until not GetSomeMobs() or Settings["Auto CDK"] == false
                                            else
                                                if GetTorchTushita()  then 
                                                    TorchTushita = GetTorchTushita() 
                                                    plr.Character.HumanoidRootPart.CFrame = TorchTushita.CFrame
                                                    if GetDistance(TorchTushita.Position) <= 10 then
                                                        fireproximityprompt(TorchTushita.ProximityPrompt)
                                                        task.wait(.1)
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            else
                                if EvilQuest == -3 then
                                    Evil1()
                                    game.ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest", "StartTrial", "Evil")
                                elseif EvilQuest == -4 then
                                    Evil2()
                                    game.ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest", "StartTrial", "Evil")
                                elseif EvilQuest == -5 then
                                    game.ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest", "StartTrial", "Evil")
                                    if GetDistance(game:GetService("Workspace")["_WorldOrigin"].Locations["Hell Dimension"].Position) > 2000 then
                                        local v = DetectMob2("Soul Reaper")
                                        if not v then
                                            if not GetBackpack("Hallow Essence") then
                                                Rc.Remotes.CommF_:InvokeServer("Bones", "Buy", 1, 1)
                                            elseif GetBackpack("Hallow Essence") then
                                                if GetDistance(WS.Map["Haunted Castle"].Summoner.Detection.Position) > 30 then
                                                    Tween(WS.Map["Haunted Castle"].Summoner.Detection.CFrame)
                                                    NoClip = true
                                                else
                                                    EquipTool("Hallow Essence")
                                                end
                                            end
                                        else
                                            repeat wait()
                                                NoClip = true
                                                ToBypass(v.HumanoidRootPart.CFrame)
                                            until Settings["Auto CDK"] == false or GetInventory("Dual Cursed Katana") or WS["_WorldOrigin"].Locations:FindFirstChild("Hell Dimension") 
                                        end
                                    elseif GetDistance(game:GetService("Workspace")["_WorldOrigin"].Locations["Hell Dimension"].Position) < 2000 then
                                        if WS.Map.HellDimension.Exit.BrickColor == BrickColor.new("Olivine") then
                                            plr.Character.HumanoidRootPart.CFrame = WS.Map.HellDimension.Exit.CFrame
                                            NoClip = true
                                            Tween(WS.Map.HellDimension.Exit.CFrame)
                                        else
                                            local v = GetSomeMobs()
                                            if v then			
                                                repeat wait()
                                                    KillMob(v.Name, Settings["Auto CDK"] == false or not GetSomeMobs())
                                                until not GetSomeMobs() or Settings["Auto CDK"] == false
                                            else
                                                if GetTorchYama() then 
                                                    TorchYama = GetTorchYama()
                                                    plr.Character.HumanoidRootPart.CFrame = TorchYama.CFrame 
                                                    if GetDistance(TorchYama.Position) <= 10 then
                                                        fireproximityprompt(TorchYama.ProximityPrompt)
                                                        task.wait(.1)
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end)
        end
    end
end)

local GMelee = GetItemTab:MakeSection({
    Title = "Melee",
    Content = "Auto Superhuman, Death Step, Electric Claw, Sharkman, ..."
})

local ToggleAutoSuperhuman = GMelee:MakeToggle({
    Name = "Auto Superhuman",
    Description = "Taken Melee Superhuman",
    Default = Settings["Auto Superhuman"],
    Callback = function(Value)
        SaveSettings("Auto Superhuman", Value)
    end
})

local TableMeleeSuperhuman = {
    "Black Leg",
    "Electro",
    "Fishman Karate",
    "Dragon Claw"
}

spawn(function()
    while wait() do
        if Settings["Auto Superhuman"] then
            BuyMelee("BuySuperhuman")
            if not GetBackpack("Superhuman") then
                if not GetBackpack(TableMeleeSuperhuman) then
                    BuyMelee("BuyBlackLeg")
                end
                if DetectMeleeMastery("Black Leg", 300) then
                    wait(0.3)
                    BuyMelee("BuyElectro")
                end
                if DetectMeleeMastery("Electro", 300) then
                    wait(0.3)
                    BuyMelee("BuyFishmanKarate")
                end
                if DetectMeleeMastery("Fishman Karate", 300) then
                    wait(0.3)
                    BuyMelee("Mua Dragon Claw :))")
                end
                if DetectMeleeMastery("Dragon Claw", 300) then
                    wait(0.3)
                    BuyMelee("BuyBlackLeg")
                end
            end
        end
    end
end)

local ToggleAutoElectricClaw = GMelee:MakeToggle({
    Name = "Auto Electric Claw",
    Description = "Work 100%",
    Default = Settings["Auto Electric Claw"],
    Callback = function(Value)
        SaveSettings("Auto Electric Claw", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["Auto Electric Claw"] and Third_World then
            if Rc.Remotes.CommF_:InvokeServer("BuyElectricClaw", true) ~= 1 then
                SetTitleStatus("Status : Auto Electric Claw")
                if not GetBackpack("Electro") then
                    BuyMelee("BuyElectro")
                elseif GetBackpack("Electro") then
                    if DetectMeleeMastery("Electro", 400) then
                        Rc.Remotes.CommF_:InvokeServer("BuyElectricClaw","Start")
                        wait(0.3)
                        Rc.Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(-12549.7236, 337.511505, -7470.36328))
                        wait(0.3)
                        Rc.Remotes.CommF_:InvokeServer("BuyElectricClaw")     
                    elseif DetectMeleeMastery("Electro", 399) then
                        ToggleAutoFarm:Set(true)                     
                    end
                end
            elseif Rc.Remotes.CommF_:InvokeServer("BuyElectricClaw", true) == 1 then
                BuyMelee("BuyElectricClaw")
            end
        end
    end
end)

local ToggleAutoDeathStep = GMelee:MakeToggle({
    Name = "Auto Death Step",
    Description = "",
    Default = Settings["Auto Death Step"],
    Callback = function(Value)
        SaveSettings("Auto Death Step", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["Auto Death Step"] and New_World then
            if Rc.Remotes.CommF_:InvokeServer("BuyDeathStep", true) ~= 1 then
                SetTitleStatus("Auto Death Step")
                if GetDeathStepDoor() then
                    if not GetBackpack("Library Key") then
                        if not GetBackpack("Black Leg") then
                            BuyMelee("BuyBlackLeg")
                        elseif GetBackpack("Black Leg") then
                            if DetectMeleeMastery("Black Leg", 400) then
                                if DetectMob2("Awakened Ice Admiral") then
                                    repeat wait()
                                        SetDescStatus("Killing Bosses : Awakened Ice Admiral")
                                        KillMob("Awakened Ice Admiral", Settings["Auto Death Step"] == false
                                        )
                                    until Settings["Auto Death Step"]
                                else
                                    HopServer()
                                end
                            elseif DetectMeleeMastery("Black Leg", 399) then
                                ToggleAutoFarm:Set(true)                          
                            end
                        end
                    elseif GetBackpack("Library Key") then
                        EquipTool("Library Key")
                        NoClip = true
                        Tween(CFrame.new(6375.9126, 296.634583, -6843.14062, -0.849467814, 1.5493983e-08, -0.527640462, 3.70608895e-08, 1, -3.0301031e-08, 0.527640462, -4.5294577e-08, -0.849467814))
                    end
                else
                    BuyMelee("BuyDeathStep")
                end
            end
        end
    end
end)

local SFarm = GetItemTab:MakeSection({
    Title = "Stack Farm",
    Content = "Auto New World, Bartilo Quest, ..."
})

local ToggleAutoSecondSea = SFarm:MakeToggle({
    Name = "Auto New World",
    Description = "",
    Default = Settings["Auto New World"],
    Callback = function(Value)
        SaveSettings("Auto New World", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["Auto New World"] and CanGoNewWorld() then
            if CanGoNewWorld() then
                SetTitleStatus("Status : Auto New Wold")
                if game.Workspace.Map.Ice.Door.CanCollide then
                    if not GetBackpack("Key") then
                        if GetDistance(CFrame.new(4852.2895507813, 5.651451587677, 718.53070068359)) <= 10 then
                            Rc.Remotes["CommF_"]:InvokeServer("DressrosaQuestProgress","Detective")      
                        else
                            NoClip = true
                            Tween(CFrame.new(4852.2895507813, 5.651451587677, 718.53070068359))
                        end
                    elseif GetBackpack("Key") then
                        NoClip = true
                        Tween(game.Workspace.Map.Ice.Door.CFrame)
                        EquipTool("Key")
                    end
                elseif not game.Workspace.Map.Ice.Door.CanCollide then
                    if DetectMob2("Ice Admiral") then
                        repeat wait()
                            SetDescStatus("Killing Bosses : Ice Admiral")
                            KillMob("Ice Admiral", Settings["Auto New World"] == false or 
                                Rc.Remotes.CommF_:InvokeServer("DressrosaQuestProgress", "Dressrosa") == 0)                  
                        until Settings["Auto New World"] == false or Rc.Remotes.CommF_:InvokeServer("DressrosaQuestProgress", "Dressrosa") == 0 or not DetectMob2("Ice Admiral") or DetectMob2("Ice Admiral"):FindFirstChild("Humanoid").Health <= 0
                        Rc.Remotes.CommF_:InvokeServer("TravelDressrosa")
                    end
                end
            elseif Rc.Remotes.CommF_:InvokeServer("DressrosaQuestProgress", "Dressrosa") == 0 then
                Rc.Remotes.CommF_:InvokeServer("TravelDressrosa")
            end
        end
    end
end)

local ToggleAutoBartilo = SFarm:MakeToggle({
    Name = "Auto Bartilo Quest",
    Description = "",
    Default = Settings["Auto Bartilo Quest"],
    Callback = function(Value)
        SaveSettings("Auto Bartilo Quest", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["Auto Bartilo Quest"] and New_World then
            if BartiloProgess ~= 3 then
                SetTitleStatus("Auto Bartilo Quest")
                if DetectFruit() and Settings["Auto Find DF"] then end
                if BartiloProgess == 0 then
                    if not plr.PlayerGui.Main.Quest.Visible or not string.find(plr.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "50") or not string.find(plr.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "Swan Pirate") then
                        if GetDistance(CFrame.new(-456.28952, 73.0200958, 299.895966)) <= 10 then
                            SetDescStatus("Claim Quest Bartilo")
                            Rc.Remotes.CommF_:InvokeServer("StartQuest", "BartiloQuest", 1)
                        else
                            SetDescStatus("Teleport To NPC Bartilo")
                            NoClip = true
                            Tween(CFrame.new(-456.28952, 73.0200958, 299.895966))
                        end
                    elseif plr.PlayerGui.Main.Quest.Visible and string.find(plr.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "50") and string.find(plr.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "Swan Pirate") then
                        if DetectMob2("Swan Pirate") then
                            repeat wait()
                                SetDescStatus("Killing Mob : Swan Pirate")
                                KillMob("Swan Pirate", Settings["Auto Bartilo Quest"] == false or BartiloProgess == 1)
                            until BartiloProgess == 1 or Settings["Auto Bartilo Quest"] 
                        else
                            for i, v in pairs(WS.MobSpawns:GetChildren()) do
                                if string.find(v.Name, "Swan Pirate") then
                                    NoClip = true
                                    SetDescStatus("Waitting Mob "..v.Name)
                                    NoClip = true
                                    Tween(v.CFrame * CFrame.new(0, 15, 0))
                                end
                            end
                        end
                    end 
                elseif BartiloProgess == 1 then
                    if DetectMob2("Jeremy") then
                        repeat wait()
                            SetDescStatus("Killing Bosses : Jeremy")
                            KillMob("Jeremy", Settings["Auto Bartilo Quest"] == false or BartiloProgess == 2)
                        until BartiloProgess == 2 or Settings["Auto Bartilo Quest"] 
                    else
                        SetDescStatus("Change Server Find Jeremy")
                        HopServer()
                    end
                else
                    if BartiloProgess == 2 then
                        if GetDistance(Vector3.new(-1835.65, 10.4325, 1679.75)) > 100 then
                            SetDescStatus("Tween to Pos -1835.65, 10.4325, 1679.75")
                            NoClip = true
                            Tween(CFrame.new(-1835.65, 10.4325, 1679.75))
                        else
                            repeat wait()
                                SetDescStatus("deo biet noi gi")
                                plr.Character.HumanoidRootPart.CFrame = WS.Map.Dressrosa.BartiloPlates[GetPartProgess2()].CFrame
                                task.wait()
                                firetouchinterest(WS.Map.Dressrosa.BartiloPlates[GetPartProgess2()], plr.Character.HumanoidRootPart, 0)
                                firetouchinterest(WS.Map.Dressrosa.BartiloPlates[GetPartProgess2()], plr.Character.HumanoidRootPart, 1)
                            until BartiloProgess == 3 or Settings["Auto Bartilo Quest"] 
                        end
                    end
                end
            end
        end
    end
end)

local ToggleAutoRaceV1V2V3 = SFarm:MakeToggle({
    Name = "Auto Race (V1 - V2 - V3)",
    Description = "",
    Default = Settings["Auto Race (V1 - V2 - V3)"],
    Callback = function(Value)
        SaveSettings("Auto Race (V1 - V2 - V3)", Value)
    end
})

local TableCursedShipMob = {
    "Ship Officer",
    "Ship Steward",
    "Ship Engineer",
    "Ship Deckhand"
}

local TableMobHumanV2 = {
    "Jeremy",
    "Diamond",
    "Fajita"
}

spawn(function()
    while wait() do
        if Settings["Auto Race (V1 - V2 - V3)"] and New_World then
            if string.find(DetectRace(), "V1") then
                SetTitleStatus("Status : Auto Race (V2)")
                if not plr.Data.Race:FindFirstChild("Evolved") then
                    if Rc.Remotes.CommF_:InvokeServer("Alchemist", "1") == 0 then
                        SetDescStatus("Claim Quest Race V2")
                        Rc.Remotes.CommF_:InvokeServer("Alchemist", "2")
                    elseif Rc.Remotes.CommF_:InvokeServer("Alchemist", "1") == 1 then
                        if not GetBackpack("Flower 1") then
                            if GetDistance(WS.Flower1.Position) > 10 then
                                SetDescStatus("Tween to Flower 1")
                                Tween(WS.Flower1.CFrame)
                                NoClip = true
                            elseif GetDistance(WS.Flower1.Position) <= 10 then
                                firetouchinterest(WS.Flower1, plr.Character.HumanoidRootPart, 0)
                                firetouchinterest(WS.Flower1, plr.Character.HumanoidRootPart, 1)
                            end
                        elseif not GetBackpack("Flower 2") then
                            if GetDistance(WS.Flower1.Position) > 10 then
                                SetDescStatus("Tween to Flower 2")
                                Tween(WS.Flower2.CFrame)
                                NoClip = true
                            elseif GetDistance(WS.Flower2.Position) <= 10 then
                                firetouchinterest(WS.Flower2, plr.Character.HumanoidRootPart, 0)
                                firetouchinterest(WS.Flower2, plr.Character.HumanoidRootPart, 1)
                            end
                        elseif not GetBackpack("Flower 3") then
                            if DetectMob(TableCursedShipMob) then
                                for i, v in pairs(WS.Enemies:GetChildren()) do
                                    if table.find(TableCursedShipMob, v.Name) then
                                        if v:FindFirstChild("HumanoidRootPart") and v.Parent and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                                            repeat wait()
                                                SetDescStatus("Killing Mob : ".. v.Name)
                                                KillMob(v.Name, Settings["Auto Race (V1 - V2 - V3)"] == false or GetBackpack("Flower 3")
                                                )
                                            until Settings["Auto Race (V1 - V2 - V3)"] == false or GetBackpack("Flower 3")
                                        end
                                    end
                                end
                            else
                                for i, v in pairs(WS.MobSpawns:GetChildren()) do
                                    if table.find(TableCursedShipMob, v.Name) then
                                        NoClip = true
                                        SetDescStatus("Waitting Mob "..v.Name)
                                        Tween(v.CFrame * CFrame.new(0, 15, 0))
                                    end
                                end
                            end
                        end
                    elseif Rc.Remotes.CommF_:InvokeServer("Alchemist", "1") == 2 then
                        SetDescStatus("Up Race To V2")
                        Rc.Remotes.CommF_:InvokeServer("Alchemist", "3")
                    end
                end
            elseif string.find(DetectRace(), "V2") then
                SetTitleStatus("Status : Auto Race (V3)")
                pcall(function()
                    local v113 = game.ReplicatedStorage.Remotes.CommF_:InvokeServer("Wenlocktoad", "1")
                    if v113 == 0 then
                        game.ReplicatedStorage.Remotes.CommF_:InvokeServer("Wenlocktoad", "2")
                        return
                    elseif v113 == 2 then 
                        game.ReplicatedStorage.Remotes.CommF_:InvokeServer("Wenlocktoad", "3")
                        return
                    elseif v113 == -1 then 
                        Library:MakeNotify({
                            Title = "Sitink Hub",
                            Content = "Please Farm plr Beli To 2m!!!",
                            Description = "Auto Race (V1 - V2 - V3)",
                            Time = 5 
                        })
                        wait(6)
                        return 
                    end
                    plrace = DetectRace()
                    if plrace == "Human V2" then
                        Bucaccho = 0
                        if DetectMob2("Jeremy") and DetectMob2("Fajita") and DetectMob2("Diamond") then
                            repeat wait()
                                Bucaccho = Bucaccho + 1
                                SetDescStatus("Killing Bosses : Jeremy")
                                KillMob("Jeremy", plrace ~= "Human V2" or Settings["Auto Race (V1 - V2 - V3)"] == false)
                                SetDescStatus("Killing Bosses : Fajita")
                                KillMob("Fajita", plrace ~= "Human V2" or Settings["Auto Race (V1 - V2 - V3)"] == false)
                                SetDescStatus("Killing Bosses : Diamond")
                                KillMob("Diamond", plrace ~= "Human V2" or Settings["Auto Race (V1 - V2 - V3)"] == false)
                            until plrace ~= "Human V2" or Settings["Auto Race (V1 - V2 - V3)"]
                        elseif not DetectMob2("Jeremy") or not DetectMob2("Fajita") or not DetectMob2("Diamond") then 
                            SetDescStatus("Change Server Find Bosses")
                            HopServer()
                        end
                    elseif plrace == "Skypiea V2" then
                        TableSkyPlayers = {}
                        for i, v in pairs(game.Players:GetPlayers()) do
                            if v:FindFirstChild("Data") and v.Character:FindFirstChild("Humanoid").Health > 0 and v.Parent and v.Data.Race.Value == "Skypiea" then
                                table.insert(v.Name, TableSkyPlayers)
                            end
                        end
                        for i, v in pairs(TableSkyPlayers) do
                            for r, s in pairs(WS.Characters:GetChildren()) do
                                if s:IsA("Model") and s.Parent and s:FindFirstChild("Humanoid") and s.Humanoid.Health > 0 and s.Name == v then
                                    repeat wait()
                                        SetDescStatus("Killing Players : ".. v.Name)
                                        Tween(v.HumanoidRootPart.CFrame * CFrame.new(0 ,0, 2))
                                        NoClip = true
                                        EquipWeapon()
                                        Buso()
                                        Click()
                                    until CheckSafeZone(s) or GetNotification("Die") or GetNotification("player") or not s.Parent or not s:FindFirstChild("Humanoid") or s:FindFirstChild("Humanoid").Health <= 0 or not s:FindFirstChild("HumanoidRootPart") or Settings["Auto Race (V1 - V2 - V3)"]
                                end
                            end
                        end
                    end
                end)
            end
        end
    end
end)

local ToggleAutoThirdSea = SFarm:MakeToggle({
    Name = "Auto Third Sea",
    Description = "",
    Default = Settings["Auto Third Sea"],
    Callback = function(Value)
        SaveSettings("Auto Third Sea", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["Auto Third Sea"] and New_World then
            if BartiloProgess == 3 then
                if plr.Data.Level.Value >= 1500 then
                    SetTitleStatus("Status : Auto Third Sea")
                    if Rc.Remotes.CommF_:InvokeServer("TalkTrevor", "1") ~= 0 then
                        Library:MakeNotify({
                            Title = "Sitink Hub",
                            Content = "Please give Trevor 1 devil fruit per 1 meter beli!!!",
                            Description = "Auto Third Sea",
                            Time = 5 
                        })
                        wait(6)
                    elseif Rc.Remotes.CommF_:InvokeServer("TalkTrevor", "1") == 0 and Rc.Remotes.CommF_:InvokeServer("ZQuestProgress", "Check") == 1 and Rc.Remotes.CommF_:InvokeServer("ZQuestProgress", "Zou") == 0 then 
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelZou")
                        SetDescStatus("Go Third Sea")
                    elseif not Rc.Remotes.CommF_:InvokeServer("ZQuestProgress", "Check") then 
                        repeat wait()
                            SetDescStatus("Killing Don Swan")
                            KillMob("Don Swan", Settings["Auto Third Sea"] == false)
                        until Settings["Auto Third Sea"] == false or DetectMob2("Don Swan"):FindFirstChild("Humanoid").Health <= 0
                    elseif Rc.Remotes.CommF_:InvokeServer("ZQuestProgress", "Check") == 0 then
                        if not DetectMob("rip_indra") then
                            if GetDistance(CFrame.new(-1926.78772, 12.1678171, 1739.80884, 0.956294656, -0, -0.292404652, 0, 1, -0, 0.292404652, 0, 0.956294656)) > 10 then
                                SetDescStatus("Tween to Thang red head nung cac")
                                NoClip = true
                                Tween(CFrame.new(-1926.78772, 12.1678171, 1739.80884, 0.956294656, -0, -0.292404652, 0, 1, -0, 0.292404652, 0, 0.956294656))
                            else
                                SetDescStatus("Go to rip_indra")
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ZQuestProgress","Begin")
                            end
                        else
                            repeat wait()
                                SetDescStatus("Killing Bosses : rip_indra")
                                KillMob("rip_indra", Settings["Auto Third Sea"] == false)
                            until Settings["Auto Third Sea"] == false or DetectMob2("rip_indra"):FindFirstChild("Humanoid").Health <= 0
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelZou")
                        end
                    end
                end
            end
        end
    end
end)

local DFruit = FruitandRaidTab:MakeSection({
    Title = "Devil Fruit",
    Content = "Nigga"
})

DFruit:MakeButton({
    Name = "Random DF",
    Description = "",
    Callback = function()
        Rc.Remotes.CommF_:InvokeServer("Cousin", "Buy")
    end
})

local ToggleRandomDF = DFruit:MakeToggle({
    Name = "Auto Random DF",
    Description = "",
    Default = Settings["Auto Random DF"],
    Callback = function(Value)
        SaveSettings("Auto Random DF", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["Auto Random DF"] then
            Rc.Remotes.CommF_:InvokeServer("Cousin", "Buy")
        end
    end
end)

local ToggleFindDF = DFruit:MakeToggle({
    Name = "Auto Find DF",
    Description = "",
    Default = Settings["Auto Find DF"],
    Callback = function(Value)
        SaveSettings("Auto Find DF", Value)
    end
})

DFruit:MakeToggle({
    Name = "Hop Find DF",
    Default = Settings["Hop Find DF"],
    Callback = function(Value)
        SaveSettings("Hop Find DF", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["Auto Find DF"] then
            if DetectFruit() then
                NoClip = true
                ToBypass(DetectFruit().Handle.CFrame)
                SetTitleStatus("Status : Teleport To Fruit")
            else
                if Settings["Hop Find DF"] == true then
                    SetTitleStatus("Status : Hop Server Find DF")
                    HopServer()
                end
            end
        end
    end
end)

local ToggleStoreDF = DFruit:MakeToggle({
    Name = "Store DF",
    Description = "",
    Default = Settings["Store DF"],
    Callback = function(Value)
        SaveSettings("Store DF", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["Store DF"] then
            for i,v in pairs(plr.PlayerGui.Notifications:GetDescendants()) do
                if v:IsA("TextLabel") then
                    if string.find(v.Text, "You can only")  then
                        v:Destroy()
                    end
                end
            end
        end
    end
end)

spawn(function()
    while wait() do
        if Settings["Store DF"] then
            for i, v in pairs(plr.Backpack:GetChildren()) do
                if string.find(v.Name, "Fruit") then
                    local args = {
                        [1] = "StoreFruit",
                        [2] = v:GetAttribute("OriginalName"),
                        [3] = v
                    }
                    Rc:WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer(unpack(args))
                end
            end
            for i, v in pairs(plr.Character:GetChildren()) do
                if string.find(v.Name, "Fruit") then
                    local args = {
                        [1] = "StoreFruit",
                        [2] = v:GetAttribute("OriginalName"),
                        [3] = v
                    }
                    Rc:WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer(unpack(args))
                end
            end
        end
    end
end)

local RaidT = FruitandRaidTab:MakeSection({
    Title = "Raid",
    Content = ""
})

TableChip = {}
for r, v in pairs(require(Rc.Raids).raids) do
    if v.Name ~= " " then
        table.insert(TableChip, v)
    end
end
for r, v in pairs(require(Rc.Raids).advancedRaids) do
    if v.Name ~= " " then
        table.insert(TableChip, v)
    end
end

local DropdownChip = RaidT:MakeDropdown({
    Name = "Chip List",
    Description = "",
    Options = TableChip,
    Default = Settings["Select Chips"],
    Callback = function(Value)
        SaveSettings("Select Chips", Value)
    end
})

RaidT:MakeButton({
    Name = "Buy Chip",
    Description = "",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("RaidsNpc", "Select", Settings["Select Chips"])
    end
})

local ToggleAutoBuyChip = RaidT:MakeToggle({
    Name = "Auto Buy Chip",
    Description = "",
    Default = Settings["Auto Buy Chip"],
    Callback = function(Value)
        SaveSettings("Auto Buy Chip", Value)
    end
})

spawn(function() while wait() do if Settings["Auto Buy Chip"] then if not GetBackpack("Special Microchip") and plr.PlayerGui.Main.Timer.Visible == false then game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("RaidsNpc", "Select", Settings["Select Chips"]) end end end end) 

local ToggleAutoStartRaid = RaidT:MakeToggle({
    Name = "Auto Start Raid",
    Description = "",
    Default = Settings["Auto Start Raid"],
    Callback = function(Value)
        SaveSettings("Auto Start Raid", Value)
    end
})

spawn(function() while wait() do if Settings["Auto Start Raid"] then if GetBackpack("Special Microchip") and plr.PlayerGui.Main.Timer.Visible == false then StartRaid() end end end end)

local PullC = UpgradedRaceTab:MakeSection({
    Title = "Mirage Lever Pull",
    Content = ""
})

PullC:MakeButton({
    Name = "Tween to Blue Gear",
    Description = "",
    Callback = function()
        TweenBlueGear()
    end
})

PullC:MakeButton({
    Name = "Tween to Highest Point",
    Description = "",
    Callback = function()
        TeleHighPoint()
    end
})

local ToggleLockMoon = PullC:MakeToggle({
    Name = "Move Cam To Moon",
    Description = "",
    Default = Settings["Move Cam To Moon"],
    Callback = function(Value)
        SaveSettings("Move Cam To Moon", Value)
    end
})

spawn(function()
    while wait() do
        if Settings["Move Cam To Moon"] then
            game.Workspace.CurrentCamera.CFrame = CFrame.lookAt(game.Workspace.CurrentCamera.CFrame.p, game.Workspace.CurrentCamera.CFrame.p + game.Lighting:GetMoonDirection() * 100)
        end
    end
end)

local Rce = UpgradedRaceTab:MakeSection({
    Title = "Upgraded Race",
    Content = "Teleport To Door Race, ..."
})

Rce:Section("Trials")

Rce:MakeButton({
    Name = "Tween to Current Race Door",
    Description = "",
    Callback = function()
        repeat task.wait()
            NoClip = true
            Tween(WS.Map["Temple of Time"][plr.Data.Race.Value.."Corridor"].Door.Door.RightDoor.Union.CFrame)
        until (WS.Map["Temple of Time"][plr.Data.Race.Value.."Corridor"].Door.Door.RightDoor.Union.CFrame.Position - plr.Character.HumanoidRootPart.Position).Magnitude < 8
        NoClip = false
    end
})

Rce:MakeButton({
    Name = "Tween to Lever Pull",
    Description = "",
    Callback = function()
        repeat task.wait()
            NoClip = true
            PullLever()
        until (WS.Map["Temple of Time"].Lever.Part.Position - plr.Character.HumanoidRootPart.Position).Magnitude < 8
        NoClip = false
        Library:MakeNotify({
            Title = "Sitink Hub",
            Content = "Pull Lever Complete!!!",
            Description = "Pull Lever",
            Time = 5 
        })
    end
})

Rce:MakeButton({
    Name = "Tween to Acient One",
    Description = "",
    Callback = function()
        repeat task.wait()
            TweenTemple()
            NoClip = true
            Tween(CFrame.new(28973.0879, 14889.9756, -120.298691))
        until (CFrame.new(28973.0879, 14889.9756, -120.298691).Position - plr.Character.HumanoidRootPart.Position).Magnitude < 8
        NoClip = false
    end
})

Rce:MakeButton({
    Name = "Tween to Clock",
    Description = "",
    Callback = function()
        repeat task.wait()
            TweenTemple()
            NoClip = true
            Tween(CFrame.new(29551.9941, 15069.002, -85.5179291))
        until (CFrame.new(29551.9941, 15069.002, -85.5179291).Position - plr.Character.HumanoidRootPart.Position).Magnitude < 8
        NoClip = false
    end
})

local ToggleAutoKillTrial = Rce:MakeToggle({
    Name = "Auto Kill Players When Complete Trial",
    Description = "",
    Default = Settings["Auto Kill Players When Complete Trial"],
    Callback = function(Value)
        SaveSettings("Auto Kill Players When Complete Trial", Value)
        if Value then
            Library:MakeNotify({
                Title = "Sitink Hub",
                Content = "Pick Weapons Skill In Settings Farm!!!",
                Description = "Auto Kill Players When Complete Trial",
                Time = 5 
            })
        end
    end
})

Fastbeo = loadstring(game:HttpGet("https://raw.githubusercontent.com/SourceFullNightHub/ewihwg/main/8847hfgg"))()
function AttackFunction()
    Fastbeo:Attack()
end
function Click()
    local bc = game:GetService("VirtualUser")
    bc:CaptureController()
    bc:ClickButton1(Vector2.new(851, 158), WS.Camera.CFrame)
end
spawn(
    function()
        while wait() do
            if AttackTrial then
                Fastbeo:InputSetting(Settings)
                Fastbeo:InputValue(100, 0)
                Fastbeo:Attack(true)
            else
                Fastbeo:Attack(false)
            end
        end
    end
)

spawn(function()
    while wait() do
        if Settings["Auto Kill Players When Complete Trial"] then
            pcall(function()
                if plr.PlayerGui.Main.Timer.Visible == true then
                    if GetDistance(CFrame.new(28718.88671875, 14907.6630859375, -56.46955871582031)) <= 300 then
                        for i, v in pairs(WS.Characters:GetChildren()) do
                            if v.Name ~= plr.Name then
                                if v.Humanoid.Health > 0 and v.Parent and v:FindFirstChild("HumanoidRootPart") then
                                    if (v.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).Magnitude <= 275 then
                                        if plr.PlayerGui.Main.Timer.Visible == true then
                                            if (v.HumanoidRootPart.Position - Vector3.new(28718.068359375, 14887.5625, -60.5482177734375)).Magnitude <= 150 then 
                                                repeat task.wait()
                                                    v.HumanoidRootPart.Size = Vector3.new(30, 30, 30)
                                                    Tween(v.HumanoidRootPart.CFrame * CFrame.new(0, 5, 2))
                                                    Click()
                                                    DoAttack()
                                                    EquipWeapon()
                                                    Buso()
                                                    if Settings["Z"] then
                                                        SendKey("Z")
                                                    end
                                                    if Settings["X"] then
                                                        SendKey("X")
                                                    end
                                                    if Settings["C"] then
                                                        SendKey("C")
                                                    end
                                                    NoClip = true
                                                    AttackTrial = true
                                                until v:FindFirstChild("Humanoid").Health <= 0 or not v.Parent or Settings["Auto Kill Players When Complete Trial"]
                                                NoClip = false
                                                AttackTrial = false
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end)
        end
    end
end)

local HttpService = game:GetService("HttpService")
local Data =
{
    ["embeds"] = {
        {
            ["title"] = "Logger Users",
            ["color"] = tonumber(0x7269da),
            ["fields"] = {
                {
                    ["name"] = "Name",
                    ["value"] = "```"..plr.Name.. "```",
                    ["inline"] = true
                },
                {
                    ["name"] = "Job Id",
                    ["value"] = "```" .. game.JobId .. "```",
                    ["inline"] = true
                },
                {
                    ["name"] = "Script Job Id",
                    ["value"] = '```game:GetService("TeleportService"):TeleportToPlaceInstance(' .. game.PlaceId .. ', "' .. game.JobId .. '", plr)```',
                    ["inline"] = true
                },
            }
        }
    }
}
local Headers = { ["Content-Type"] = "application/json" }
local Encoded = HttpService:JSONEncode(Data)

Request = http_request or request or HttpPost or syn.request
local Final1 = { Url = 'https://discord.com/api/webhooks/1266372992590549042/8f04OCtJ2XO-Dmj_zDwEAnk4gOp9GjvRJH8tbkPp_hBK1wWcaAau9HhJE-XVy3XcPc6i', Body = Encoded, Method = "POST", Headers = Headers }

Request(Final1)

spawn(function()
    while wait() do   
        if DetectElite() then
            local HttpService = game:GetService("HttpService")
            local Data =
            {
                ["embeds"] = {
                    {
                        ["title"] = "Elite Findder",
                        ["color"] = tonumber(0x7269da),
                        ["fields"] = {
                            {
                                ["name"] = "Status",
                                ["value"] = "Elite Spawned",
                                ["inline"] = true
                            },
                            {
                                ["name"] = "Job Id",
                                ["value"] = "```" .. game.JobId .. "```",
                                ["inline"] = true
                            },
                            {
                                ["name"] = "Script Job Id",
                                ["value"] = '```game:GetService("TeleportService"):TeleportToPlaceInstance(' .. game.PlaceId .. ', "' .. game.JobId .. '", plr)```',
                                ["inline"] = true
                            },
                        }
                    }
                }
            }
            local Headers = { ["Content-Type"] = "application/json" }
            local Encoded = HttpService:JSONEncode(Data)

            Request = http_request or request or HttpPost or syn.request
            local Final2 = { Url = 'https://discord.com/api/webhooks/1266372978585899130/GkgkAbo_VIujZs3e2DbvG0pzrh6F8jeZJwTPxaN3EbxJpahma6yQL_lez9We12JuLmb3', Body = Encoded, Method = "POST", Headers = Headers }

            Request(Final2)
        end
        wait(60)
    end
end)
spawn(function()
    while wait() do   
        if IsCastleRaid or DetectCastleRaiding() then
            local HttpService = game:GetService("HttpService")
            local Data =
            {
                ["embeds"] = {
                    {
                        ["title"] = "Pirates Raid",
                        ["color"] = tonumber(0x7269da),
                        ["fields"] = {
                            {
                                ["name"] = "Status",
                                ["value"] = "Is Raiding",
                                ["inline"] = true
                            },
                            {
                                ["name"] = "Job Id",
                                ["value"] = "```" .. game.JobId .. "```",
                                ["inline"] = true
                            },
                            {
                                ["name"] = "Script Job Id",
                                ["value"] = '```game:GetService("TeleportService"):TeleportToPlaceInstance(' .. game.PlaceId .. ', "' .. game.JobId .. '", plr)```',
                                ["inline"] = true
                            },
                        }
                    }
                }
            }
            local Headers = { ["Content-Type"] = "application/json" }
            local Encoded = HttpService:JSONEncode(Data)

            Request = http_request or request or HttpPost or syn.request
            local Final3 = { Url = 'https://discord.com/api/webhooks/1266372985883725854/j21MJMZRBQKD3Rlv1lyxCtbd6eGK5BSpjQigpoWgpqPkOTxZe6jAL0efHZhKVaCR8A6-', Body = Encoded, Method = "POST", Headers = Headers }

            Request(Final3)
        end
        wait(10)
    end
end)

game:GetService("CorePackages").Packages["_Index"].Utils.Utils.executor:Destroy()
game:GetService("CorePackages").Packages["_Index"].Utils.Utils:Destroy()

game:GetService("ReplicatedStorage").Assets.GUI.DamageCounter.Enabled = false

for i,v in pairs(getconnections(game:GetService("Players").LocalPlayer.Idled)) do 
	v:Disable()
end

game:GetService("StarterGui"):SetCore("SendNotification", {Title = "sitink hub", Text = "Loading complete", Duration = 5})
isloadedui =  true
