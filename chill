Configs = {
    ["Team"] = "Pirates", -- // Pirates or Marines \\ --
    ["Weapons"] = {
        ["Melee"] = {
            ["Enable"] = true,
            ["Z"] = {["Enable"] = true, ["Hold"] = 1.0},
            ["X"] = {["Enable"] = true, ["Hold"] = 0.1},
            ["C"] = {["Enable"] = true, ["Hold"] = 0.1}
        },
        ["Sword"] = {
            ["Enable"] = true,
            ["Z"] = {["Enable"] = true, ["Hold"] = 0.1},
            ["X"] = {["Enable"] = true, ["Hold"] = 0.1},
        },
        ["Gun"] = {
            ["Enable"] = true,
            ["Z"] = {["Enable"] = false, ["Hold"] = 0.1},
            ["X"] = {["Enable"] = false, ["Hold"] = 0.1},
        },
        ["DF"] = {
            ["Enable"] = true,
            ["Z"] = {["Enable"] = true, ["Hold"] = 0.1},
            ["X"] = {["Enable"] = false, ["Hold"] = 0.1},
            ["C"] = {["Enable"] = false, ["Hold"] = 0.1},
            ["V"] = {["Enable"] = false, ["Hold"] = 0.1},
            ["F"] = {["Enable"] = false, ["Hold"] = 0.1}
        },
    },
}

local PlaceId = game.PlaceId
local plr = game.Players.LocalPlayer
local WS = game.Workspace
local Rc = game.ReplicatedStorage
local CommF = Rc.Remotes["CommF_"]
if plr.PlayerGui.Main:FindFirstChild("ChooseTeam") then
    repeat
        wait()
        if plr.PlayerGui:WaitForChild("Main").ChooseTeam.Visible == true then
            for i, v in pairs(
                getconnections(
                    plr.PlayerGui.Main.ChooseTeam.Container[Configs.Team].Frame.TextButton.Activated
                )
            ) do
                for a, b in pairs(getconnections(game:GetService("UserInputService").TouchTapInWorld)) do
                    b:Fire()
                end
                v.Function()
            end
        end
    until plr.Team ~= nil and game:IsLoaded()
end

function DetectTeleporter(vcs)
    vcspos = vcs.Position
    min = math.huge
    min2 = math.huge
    local y = game.PlaceId
    if y == 2753915549 then
        OldWorld = true
    elseif y == 4442272183 then
        NewWorld = true
    elseif y == 7449423635 then
        ThreeWorld = true
    end
    if ThreeWorld then
        TableLocations = {
            ["Caslte On The Sea"] = Vector3.new(-5058.77490234375, 314.5155029296875, -3155.88330078125),
            ["Hydra"] = Vector3.new(5756.83740234375, 610.4240112304688, -253.9253692626953),
            ["Mansion"] = Vector3.new(-12463.8740234375, 374.9144592285156, -7523.77392578125),
            ["Great Tree"] = Vector3.new(28282.5703125, 14896.8505859375, 105.1042709350586),
            ["Ngu1"] = Vector3.new(-11993.580078125, 334.7812805175781, -8844.1826171875),
            ["ngu2"] = Vector3.new(5314.58203125, 25.419387817382812, -125.94227600097656)
        }
    elseif NewWorld then
        TableLocations = {
            ["Mansion"] = Vector3.new(-288.46246337890625, 306.130615234375, 597.9988403320312),
            ["Flamingo"] = Vector3.new(2284.912109375, 15.152046203613281, 905.48291015625),
            ["122"] = Vector3.new(923.21252441406, 126.9760055542, 32852.83203125),
            ["3032"] = Vector3.new(-6508.5581054688, 89.034996032715, -132.83953857422)
        }
    elseif OldWorld then
        TableLocations = {
            ["1"] = Vector3.new(-7894.6201171875, 5545.49169921875, -380.2467346191406),
            ["2"] = Vector3.new(-4607.82275390625, 872.5422973632812, -1667.556884765625),
            ["3"] = Vector3.new(61163.8515625, 11.759522438049316, 1819.7841796875),
            ["4"] = Vector3.new(3876.280517578125, 35.10614013671875, -1939.3201904296875)
        }
    end
    TableLocations2 = {}
    for r, v in pairs(TableLocations) do
        TableLocations2[r] = (v - vcspos).Magnitude
    end
    for r, v in pairs(TableLocations2) do
        if v < min then
            min = v
            min2 = v
        end
    end
    for r, v in pairs(TableLocations2) do
        if v < min then
            min = v
            min2 = v
        end
    end
    for r, v in pairs(TableLocations2) do
        if v <= min then
            choose = TableLocations[r]
        end
    end
    min3 = (vcspos - plr.Character.HumanoidRootPart.Position).Magnitude
    if min2 + 32 <= min3 and GetDistance(vcspos) > 5000 then
        return choose
    end
end

function requestEntrance(ac)
    args = {
        "requestEntrance",
        ac
    }
    Rc.Remotes.CommF_:InvokeServer(unpack(args))
    oldcframe = plr.Character.HumanoidRootPart.CFrame
    char = plr.Character.HumanoidRootPart
    char.CFrame = CFrame.new(oldcframe.X, oldcframe.Y + 50, oldcframe.Z)
    if plr.Character:FindFirstChild("PartTele") then
        plr.Character:FindFirstChild("PartTele").CFrame = plr.Character.HumanoidRootPart.CFrame
    end
end
function WaitHRP(q0) 
    if not q0 then return end
    return q0.Character:WaitForChild("HumanoidRootPart", 9) 
end 
function GetBackback(Item)
    for i, v in pairs(plr.Backpack:GetChildren()) do
        if ((typeof(Item) == "table" and table.find(Item, v.Name)) or (typeof(Item) == "string" and v.Name == Item)) then
            return v
        end
    end
    for i, v in pairs(plr.Character:GetChildren()) do
        if ((typeof(Item) == "table" and table.find(Item, v.Name)) or (typeof(Item) == "string" and v.Name == Item)) then
            return v
        end
    end
end
function Tween(Pos)
    pcall(function()
        if plr.Character:FindFirstChild("Humanoid").Health > 0 and plr.Character:FindFirstChild("HumanoidRootPart") then
            Distance = (Pos.Position - plr.Character.HumanoidRootPart.Position).Magnitude
            plr.Character:WaitForChild("HumanoidRootPart", 9)
            plr.Character:WaitForChild("Head", 9)
            if not Pos then return end
            if not plr.Character:FindFirstChild("PartTele") then
                local PartTele = Instance.new("Part", plr.Character) -- Create part
                PartTele.Size = Vector3.new(10,1,10)
                PartTele.Name = "PartTele"
                PartTele.Anchored = true
                PartTele.Transparency = 1
                PartTele.CanCollide = false
                PartTele.CFrame = WaitHRP(plr).CFrame 
                PartTele:GetPropertyChangedSignal("CFrame"):Connect(function()
                    task.wait(0.01)
                    WaitHRP(plr).CFrame = PartTele.CFrame
                end)
            end
            tween = game:GetService("TweenService"):Create(plr.Character.PartTele, TweenInfo.new(Distance / Bulon["Tween Speed"], Enum.EasingStyle.Linear) , {CFrame = Pos})
            local NearestEntraceFunction = DetectTeleporter(Pos)
            if NearestEntraceFunction then
                try = 0
                repeat wait()
                    pcall(function()
                        tween:Cancel()
                    end)
                    requestEntrance(NearestEntraceFunction)
                    try = try + 1
                until not DetectTeleporter(Pos) or try >= 10
                if try >= 10 then
                    if not GetBackback("God's Chalice") and not GetBackback("Fist Of Darkness") then
                        plr.Character.Humanoid.Health = 0
                    end
                end
            end
            if Distance <= 250 then
                tween:Cancel()
                plr.Character.PartTele.CFrame = Pos
            end
            if plr.Character.Humanoid.Sit == true then
                plr.Character.Humanoid.Sit = false
                plr.Character.PartTele.CFrame = CFrame.new(plr.Character.PartTele.CFrame.X, plr.Character.PartTele.CFrame.Y + 30, plr.Character.PartTele.CFrame.Z)
            end
            tween:Play()
        end
    end)
end

function GetPosBypass(c)
    for i, v in pairs(WS["_WorldOrigin"].PlayerSpawns.Pirates:GetChildren()) do
        if v:IsA("Model") then
            if (v.Part.Position - c.Position).Magnitude < 1500 then
                return v
            end
        end
    end
end
function DetectFruitBackback()
    for i, v in pairs(plr.Backpack:GetChildren()) do
        if string.find(v.Name, "Fruit") then
            if not v:FindFirstChild("Level") then
                return true
            end
        end
    end
    for i, v in pairs(plr.Character:GetChildren()) do
        if string.find(v.Name, "Fruit") then
            if not v:FindFirstChild("Level") then
                return true
            end
        end
    end
    return false
end
function BypassTo(TeruIsNigga)
    pcall(function()
        if not DetectFruitBackback() then
            local Nigga = DetectTeleporter(TeruIsNigga)
            if Nigga then
                requestEntrance(Nigga)
            end
            if GetDistance(TeruIsNigga.Position) > 4500 then
                repeat wait()
                    if plr.Character:FindFirstChild("PartTele") then
                        plr.Character:FindFirstChild("PartTele").CFrame = GetPosBypass(TeruIsNigga).Part.CFrame
                    end
                    plr.Character:FindFirstChild("Head"):Destroy()
                    plr.Character.HumanoidRootPart.CFrame = GetPosBypass(TeruIsNigga).Part.CFrame
                    plr.Character:WaitForChild("Humanoid"):ChangeState(15)
                    wait(2)
                    plr.Character.PrimaryPart.CFrame = GetPosBypass(TeruIsNigga).Part.CFrame
                    wait(3)
                until GetDistance(TeruIsNigga.Position) <= 4500 or not plr.Character:FindFirstChild("Humanoid") or plr.Character:FindFirstChild("Humanoid").Health <= 0
            end
        elseif DetectFruitBackback() then
            Tween(TeruIsNigga)
        end
    end)
end

function ToBypass(gay)
    if GetDistance(gay.Position) > 4500 then
        repeat wait()
            BypassTo(gay)
        until GetDistance(gay.Position) <= 4500 or not plr.Character:FindFirstChild("Humanoid") or plr.Character:FindFirstChild("Humanoid").Health <= 0
    elseif GetDistance(gay.Position) < 4500 then
        Tween(gay)
    end
end

spawn(function()
    while wait() do
        if plr.Character:FindFirstChild("Humanoid").Health <= 0 or not plr.Character:FindFirstChild("HumanoidRootPart") then
            if plr.Character:FindFirstChild("PartTele") then
                plr.Character:FindFirstChild("PartTele"):Destroy()
            end
        end
    end
end)
spawn(function()
    while wait() do
        if plr.Character:FindFirstChild("PartTele") then
            if (plr.Character.HumanoidRootPart.Position - plr.Character:FindFirstChild("PartTele").Position).Magnitude >= 100 then
                plr.Character:FindFirstChild("PartTele"):Destroy()
            end
        end
    end
end)

function SendSkill(c, hold)
    game:GetService("VirtualInputManager"):SendKeyEvent(true,c,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
    task.wait(hold)
    game:GetService("VirtualInputManager"):SendKeyEvent(false,c,false,game.Players.LocalPlayer.Character.HumanoidRootPart)
end

function equip(c)
    local a = plr.Backpack:FindFirstChild(c)
    if a then
        plr.Character.Humanoid:EquipTool(a)
    end
end

function GetSkills()
    local V = game.Players.LocalPlayer.PlayerGui.Main.Skills
    local Cache = {}
    for i, v in pairs(plr.Character:GetChildren()) do 
        if v:IsA("Tool") then 
            table.insert(Cache, v)
        end 
    end 
    for i, v in pairs(plr.Backpack:GetChildren()) do 
        if v:IsA("Tool") then 
            table.insert(Cache, v)
        end 
    end 
    for i, v in pairs(Cache) do 
        if v.ToolTip and Setting.Item[v.ToolTip] and Setting.Item[v.ToolTip].Enable then
            for i2, v2 in pairs(Setting.Item[v.ToolTip]) do
                if i2 ~= "Enable" and v2.Enable then 
                    if V:FindFirstChild(v.Name) and V[v.Name]:FindFirstChild(i2) then 
                        local GuiData = V[v.Name][i2]
                        if GuiData.Cooldown.AbsoluteSize.X <= 0 then
                            return {i2, v2, v.ToolTip}
                        end
                    else
                        equip(v.ToolTip)
                    end
                end
            end 
        end 
    end
    return false
end

aim = true
spawn(function()
    local gg = getrawmetatable(game)
    local old = gg.__namecall
    setreadonly(gg,false)
    gg.__namecall = newcclosure(function(...)
        local method = getnamecallmethod()
        local args = {...}
        if tostring(method) == "FireServer" then
            if tostring(args[1]) == "RemoteEvent" then
                if tostring(args[2]) ~= "true" and tostring(args[2]) ~= "false" then
                    if aim and CFrameHunt ~= nil then
                        args[2] = CFrameHunt.Position
                        return old(unpack(args))
                    end
                end
            end
        end
        return old(...)
    end)
end)

function GetDistance(a)
    if typeof(a) == "CFrame" then
        return (a.Position - plr.Character.HumanoidRootPart.Position).Magnitude
    elseif typeof(a) == "Vector3" then
        return (a - plr.Character.HumanoidRootPart.Position).Magnitude
    end
end

enemyc = {}
table.insert(enemyc, plr)
function GetTarget()
    EnemyTable = {}
    for i, v in pairs(game.Players:GetPlayers()) do
        if v.Name ~= plr.Name then
            if v and v.Team and v.Character and v.Character:FindFirstChild("Head") and string.find(string.lower(tostring(v.Team)), "es") then
                if (plr.Team == "Marines" and v.Team ~= "Marines") then
                    if not table.find(enemyc, v) and not table.find(EnemyTable, v) then
                        table.insert(EnemyTable, v)
                    end
                end
            end
        end
    end
    return EnemyTable
end

function FindTarget()
    Target = nil
    dist = math.huge
    for i, v in pairs(GetTarget()) do
        if v.Parent and v.Character and v.Character:FindFirstChild("Head") and string.find(string.lower(tostring(v.Team)), "es") then
            if v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                if GetDistance(v.HumanoidRootPart.Position) < dist then
                    Target = v
                    dist = GetDistance(v.HumanoidRootPart.Position)
                end
            end
        end
    end
    if Target ~= nil then
        table.insert(enemyc, Target)
        enemy = Target
    else
        istimetoHop = true
    end
end

function GetSafeZone()
    for i,v in pairs(WS["_WorldOrigin"].SafeZones:GetChildren()) do
        if v:IsA("Part") then
            return v
        end
    end
end

function CheckSafeZone(v)
    if v:FindFirstChild("HumanoidRootPart") then
        if v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
            if (v.HumanoidRootPart.Position - GetSafeZone().Position).Magnitude <= 400 then
                return true
            end
        end
    end
    return false
end

function GetNotification(ccacc)
    for i,v in pairs(plr.PlayerGui.Notifications:GetDescendants()) do
        if v:IsA("TextLabel") then 
            if string.find(v.Text,ccacc) then 
                return true
            end
        end
    end
    return false
end

function CheckInComBat()
    return plr.PlayerGui.Main.InCombat.Visible and plr.PlayerGui.Main.InCombat.Text and (string.find(string.lower(plr.PlayerGui.Main.InCombat.Text),"risk"))
end

function timtarget()
    if not enemy then
        return FindTarget()
    end
    if not enemy.Parent then
        return FindTarget()
    end
    if not enemy.HumanoidRootPart or not enemy.Humanoid then
        return FindTarget()
    end
    if GetDistance(enemy:WaitForChild("Head").Position) < 300 then
        timekill = tick()
        if tick() - timekill >= 10 then
            if not CheckInComBat() then
                return FindTarget()
            end
        end
    end
    return true
end

spawn(function()
    while task.wait() do
        if timtarget() then
            if GetDistance(v.HumanoidRootPart.Position) <= 100 then
                local skills = getAvailableSkills(Configs)
                if skills then
                    equip(skills[3])
                    SendSkill(skills[1], skills[2]["Hold Time"])
                end
            end
        end
    end
end)

function HopServer(bO)
    if not bO then
        bO = 10
    end
    ticklon = tick()
    repeat
        wait()
    until tick() - ticklon >= 1
    local function Hop()
        for r = 1, math.huge do
            if ChooseRegion == nil or ChooseRegion == "" then
                ChooseRegion = "Singapore"
            else
                plr.PlayerGui.ServerBrowser.Frame.Filters.SearchRegion.TextBox.Text = ChooseRegion
            end
            local bP = Rc.__ServerBrowser:InvokeServer(r)
            for k, v in pairs(bP) do
                if k ~= game.JobId and v["Count"] < bO then
                    SvJob = k
                    Rc.__ServerBrowser:InvokeServer("teleport", SvJob)
                    wait(6)
                end
            end
        end
        return false
    end
    if not getgenv().Loaded then
        local function bQ(v)
            if v.Name == "ErrorPrompt" then
                if v.Visible then
                    if v.TitleFrame.ErrorTitle.Text == "Teleport Failed" then
                        HopServer()
                        v.Visible = false
                    end
                end
                v:GetPropertyChangedSignal("Visible"):Connect(
                    function()
                        if v.Visible then
                            if v.TitleFrame.ErrorTitle.Text == "Teleport Failed" then
                                HopServer()
                                v.Visible = false
                            end
                        end
                    end
                )
            end
        end
        for k, v in pairs(game.CoreGui.RobloxPromptGui.promptOverlay:GetChildren()) do
            bQ(v)
        end
        game.CoreGui.RobloxPromptGui.promptOverlay.ChildAdded:Connect(bQ)
        getgenv().Loaded = true
    end
    while not Hop() do
        wait()
    end
end

while task.wait() do
    if istimetoHop then
        HopServer()
    else
        if enemy and enemy.Character and enemy.Character:FindFirstChild("Humanoid") and enemy.Character.Humanoid.Health > 4 then
            if game:GetService("Players").LocalPlayer.PlayerGui.Main.PvpDisabled.Visible == true then
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("EnablePvp")
            end
            if not game.Players.LocalPlayer.Character:FindFirstChild("HasBuso") then
                game.ReplicatedStorage.Remotes.CommF_:InvokeServer("Buso")
            end
            if game:GetService("Players").LocalPlayer:FindFirstChild("PlayerGui") and game.Players.LocalPlayer.PlayerGui:FindFirstChild("ScreenGui") and game.Players.LocalPlayer.PlayerGui.ScreenGui:FindFirstChild("ImageLabel") then
                -- nil
            else
                game:service("VirtualUser"):CaptureController()
                game:service("VirtualUser"):SetKeyDown("0x65")
                game:service("VirtualUser"):SetKeyUp("0x65")
            end 
            CFrameHunt = enemy.HumanoidRootPart.Position
            Tween(enemy.HumanoidRootPart.CFrame * CFrame.new(math.random(0, 12), math.random(0, 12), math.random(0, 12)))
        end
    end
end
