--[[
 ██████╗ ██╗████████╗████████╗██╗███╗   ██╗██╗  ██╗   ██╗  ██╗ ██╗ ██╗ ██████╗   ██╗  ██╗ █████╗ ██╗████████╗██╗  ██╗███╗   ██╗
██╔════╝ ██║╚══██╔══╝╚══██╔══╝██║████╗  ██║██║ ██╔╝   ██║  ██║ ██║ ██║ ██╔══██╗  ██║ ██╔╝██╔══██╗██║╚══██╔══╝██║  ██║████╗  ██║
███████╗ ██║   ██║      ██║   ██║██╔██╗ ██║████╔╝     ███████║ ██║ ██║ ██████╔╝  █████╔╝ ███████║██║   ██║   ██║  ██║██╔██╗ ██║
╚════██║ ██║   ██║      ██║   ██║██║╚██╗██║██╔═██╗    ██╔══██║ ██║ ██║ ██╔══██╗  ██╔═██╗ ██╔══██║██║   ██║   ██║  ██║██║╚██╗██║
██████╔╝ ██║   ██║      ██║   ██║██║ ╚████║██║  ██╗   ██║  ██║ ╚█████╝ ██████╔╝  ██║  ██╗██║  ██║██║   ██║   ╚██████╝██║ ╚████
╚═════╝  ╚═╝   ╚═╝      ╚═╝   ╚═╝╚═╝  ╚═══╝╚═╝  ╚═╝   ╚═╝  ╚═╝  ╚═══╝   ╚═════╝  ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝   ╚═╝    ╚════╝ ╚═╝  ╚═══╝
]]--

local PlaceId = game.PlaceId
local plr = game.Players.LocalPlayer
local WS = game.Workspace
local Rc = game.ReplicatedStorage
local CommF = Rc.Remotes["CommF_"]
if plr.PlayerGui.Main:FindFirstChild("ChooseTeam") then
    repeat
        wait()
        if plr.PlayerGui:WaitForChild("Main").ChooseTeam.Visible == true then
            if getgenv().Team == "Pirates" then
                for i, v in pairs(
                    getconnections(
                        plr.PlayerGui.Main.ChooseTeam.Container["Pirates"].Frame.TextButton.Activated
                    )
                ) do
                    for a, b in pairs(getconnections(game:GetService("UserInputService").TouchTapInWorld)) do
                        b:Fire()
                    end
                    v.Function()
                end
            else
                for i, v in pairs(
                    getconnections(
                        plr.PlayerGui.Main.ChooseTeam.Container["Marines"].Frame.TextButton.Activated
                    )
                ) do
                    for a, b in pairs(getconnections(game:GetService("UserInputService").TouchTapInWorld)) do
                        b:Fire()
                    end
                    v.Function()
                end
            end
        end
    until plr.Team ~= nil and game:IsLoaded()
end
repeat wait()
until game:GetService("Players").LocalPlayer:FindFirstChild("WeaponAssetCache")
game:GetService("StarterGui"):SetCore("SendNotification", {Title = "sitink hub", Text = "Loading...", Duration = 5})
game:GetService("Players").LocalPlayer.Idled:connect(function()
    game:GetService("VirtualUser"):Button2Down(Vector2.new(0,0),WS.CurrentCamera.CFrame)
    wait(1)
    game:GetService("VirtualUser"):Button2Up(Vector2.new(0,0),WS.CurrentCamera.CFrame)
end)

---------------------------------------------// Anti Htpp Spy \\ ---------------------------------------------------------------------------------------------------------------------------------------------

local oldwrite
oldwrite = hookfunction(writefile, function(file, content)
    if(string.find(string.lower(content), 'https://') or string.find(string.lower(content), '//')) then
        return
    end

    return oldwrite(file, content)
end)

local oldappend
oldappend = hookfunction(appendfile, function(file, content)
    if(string.find(string.lower(content), 'https://') or string.find(string.lower(content), '//')) then
        return
    end

    return oldappend(file, content)
end)

game.DescendantAdded:Connect(function(c)
    if c and c:IsA('TextLabel') or c:IsA('TextButton') or c:IsA('Message') then
        if string.find(string.lower(c.Text), 'https://') then
            c:Destroy()
        end
    end
end)

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/MinhNghia2k11/Ui-Library/main/Kaitun-UI.lua"))()
local Library1 = loadstring(game:HttpGet("https://raw.githubusercontent.com/MinhNghia2k11/Ui-Library/main/Source"))()
local Window = Library:MakeKaitunUI()

function HopServer(bO)
    if not bO then
        bO = 10
    end
    ticklon = tick()
    repeat
        wait()
    until tick() - ticklon >= 1
    local function Hop()
        for r = 1, math.huge do
            if ChooseRegion == nil or ChooseRegion == "" then
                ChooseRegion = "Singapore"
            else
                plr.PlayerGui.ServerBrowser.Frame.Filters.SearchRegion.TextBox.Text = ChooseRegion
            end
            local bP = Rc.__ServerBrowser:InvokeServer(r)
            for k, v in pairs(bP) do
                if k ~= game.JobId and v["Count"] < bO then
                    SvJob = k
                    Library1:MakeNotify({
                        Title = "Sitink Hub",
                        Content = "Join Server Job Id : ".. SvJob .. "!!!",
                        Description = "Hop Server",
                        Time = 5 
                    })
                    Rc.__ServerBrowser:InvokeServer("teleport", SvJob)
                    wait(6)
                end
            end
        end
        return false
    end
    if not getgenv().Loaded then
        local function bQ(v)
            if v.Name == "ErrorPrompt" then
                if v.Visible then
                    if v.TitleFrame.ErrorTitle.Text == "Teleport Failed" then
                        HopServer()
                        v.Visible = false
                    end
                end
                v:GetPropertyChangedSignal("Visible"):Connect(
                    function()
                        if v.Visible then
                            if v.TitleFrame.ErrorTitle.Text == "Teleport Failed" then
                                HopServer()
                                v.Visible = false
                            end
                        end
                    end
                )
            end
        end
        for k, v in pairs(game.CoreGui.RobloxPromptGui.promptOverlay:GetChildren()) do
            bQ(v)
        end
        game.CoreGui.RobloxPromptGui.promptOverlay.ChildAdded:Connect(bQ)
        getgenv().Loaded = true
    end
    while not Hop() do
        wait()
    end
end

function DetectTeleporter(vcs)
    vcspos = vcs.Position
    min = math.huge
    min2 = math.huge
    local y = game.PlaceId
    if y == 2753915549 then
        OldWorld = true
    elseif y == 4442272183 then
        NewWorld = true
    elseif y == 7449423635 then
        ThreeWorld = true
    end
    if ThreeWorld then
        TableLocations = {
            ["Caslte On The Sea"] = Vector3.new(-5058.77490234375, 314.5155029296875, -3155.88330078125),
            ["Hydra"] = Vector3.new(5756.83740234375, 610.4240112304688, -253.9253692626953),
            ["Mansion"] = Vector3.new(-12463.8740234375, 374.9144592285156, -7523.77392578125),
            ["Great Tree"] = Vector3.new(28282.5703125, 14896.8505859375, 105.1042709350586),
            ["Ngu1"] = Vector3.new(-11993.580078125, 334.7812805175781, -8844.1826171875),
            ["ngu2"] = Vector3.new(5314.58203125, 25.419387817382812, -125.94227600097656)
        }
    elseif NewWorld then
        TableLocations = {
            ["Mansion"] = Vector3.new(-288.46246337890625, 306.130615234375, 597.9988403320312),
            ["Flamingo"] = Vector3.new(2284.912109375, 15.152046203613281, 905.48291015625),
            ["122"] = Vector3.new(923.21252441406, 126.9760055542, 32852.83203125),
            ["3032"] = Vector3.new(-6508.5581054688, 89.034996032715, -132.83953857422)
        }
    elseif OldWorld then
        TableLocations = {
            ["1"] = Vector3.new(-7894.6201171875, 5545.49169921875, -380.2467346191406),
            ["2"] = Vector3.new(-4607.82275390625, 872.5422973632812, -1667.556884765625),
            ["3"] = Vector3.new(61163.8515625, 11.759522438049316, 1819.7841796875),
            ["4"] = Vector3.new(3876.280517578125, 35.10614013671875, -1939.3201904296875)
        }
    end
    TableLocations2 = {}
    for r, v in pairs(TableLocations) do
        TableLocations2[r] = (v - vcspos).Magnitude
    end
    for r, v in pairs(TableLocations2) do
        if v < min then
            min = v
            min2 = v
        end
    end
    for r, v in pairs(TableLocations2) do
        if v < min then
            min = v
            min2 = v
        end
    end
    for r, v in pairs(TableLocations2) do
        if v <= min then
            choose = TableLocations[r]
        end
    end
    min3 = (vcspos - plr.Character.HumanoidRootPart.Position).Magnitude
    if min2 + 32 <= min3 and GetDistance(vcspos) > 5000 then
        return choose
    end
end

function requestEntrance(ac)
    args = {
        "requestEntrance",
        ac
    }
    Rc.Remotes.CommF_:InvokeServer(unpack(args))
    oldcframe = plr.Character.HumanoidRootPart.CFrame
    char = plr.Character.HumanoidRootPart
    char.CFrame = CFrame.new(oldcframe.X, oldcframe.Y + 50, oldcframe.Z)
    if plr.Character:FindFirstChild("PartTele") then
        plr.Character:FindFirstChild("PartTele").CFrame = plr.Character.HumanoidRootPart.CFrame
    end
end
function WaitHRP(q0) 
    if not q0 then return end
    return q0.Character:WaitForChild("HumanoidRootPart", 9) 
end 
function GetBackback(Item)
    for i, v in pairs(plr.Backpack:GetChildren()) do
        if ((typeof(Item) == "table" and table.find(Item, v.Name)) or (typeof(Item) == "string" and v.Name == Item)) then
            return v
        end
    end
    for i, v in pairs(plr.Character:GetChildren()) do
        if ((typeof(Item) == "table" and table.find(Item, v.Name)) or (typeof(Item) == "string" and v.Name == Item)) then
            return v
        end
    end
end
function Tween(Pos)
    pcall(function()
        if plr.Character:FindFirstChild("Humanoid").Health > 0 and plr.Character:FindFirstChild("HumanoidRootPart") then
            Distance = (Pos.Position - plr.Character.HumanoidRootPart.Position).Magnitude
            plr.Character:WaitForChild("HumanoidRootPart", 9)
            plr.Character:WaitForChild("Head", 9)
            if not Pos then return end
            if not plr.Character:FindFirstChild("PartTele") then
                local PartTele = Instance.new("Part", plr.Character) -- Create part
                PartTele.Size = Vector3.new(10,1,10)
                PartTele.Name = "PartTele"
                PartTele.Anchored = true
                PartTele.Transparency = 1
                PartTele.CanCollide = false
                PartTele.CFrame = WaitHRP(plr).CFrame 
                PartTele:GetPropertyChangedSignal("CFrame"):Connect(function()
                    task.wait(0.01)
                    WaitHRP(plr).CFrame = PartTele.CFrame
                end)
            end
            tween = game:GetService("TweenService"):Create(plr.Character.PartTele, TweenInfo.new(Distance / 325, Enum.EasingStyle.Linear) , {CFrame = Pos})
            local NearestEntraceFunction = DetectTeleporter(Pos)
            if NearestEntraceFunction then
                try = 0
                repeat wait()
                    pcall(function()
                        tween:Cancel()
                    end)
                    requestEntrance(NearestEntraceFunction)
                    try = try + 1
                until not DetectTeleporter(Pos) or try >= 10
                if try >= 10 then
                    if not GetBackback("God's Chalice") and not GetBackback("Fist Of Darkness") then
                        plr.Character.Humanoid.Health = 0
                    end
                end
            end
            if Distance <= 250 then
                tween:Cancel()
                plr.Character.PartTele.CFrame = Pos
            end
            if plr.Character.Humanoid.Sit == true then
                plr.Character.Humanoid.Sit = false
                plr.Character.PartTele.CFrame = CFrame.new(plr.Character.PartTele.CFrame.X, plr.Character.PartTele.CFrame.Y + 30, plr.Character.PartTele.CFrame.Z)
            end
            tween:Play()
        end
    end)
end

function GetPosBypass(c)
    for i, v in pairs(WS["_WorldOrigin"].PlayerSpawns.Pirates:GetChildren()) do
        if v:IsA("Model") then
            if (v.Part.Position - c.Position).Magnitude < 1500 then
                return v
            end
        end
    end
end
function DetectFruitBackback()
    for i, v in pairs(plr.Backpack:GetChildren()) do
        if string.find(v.Name, "Fruit") then
            if not v:FindFirstChild("Level") then
                return true
            end
        end
    end
    for i, v in pairs(plr.Character:GetChildren()) do
        if string.find(v.Name, "Fruit") then
            if not v:FindFirstChild("Level") then
                return true
            end
        end
    end
    return false
end
function BypassTo(TeruIsNigga)
    pcall(function()
        if not DetectFruitBackback() then
            local Nigga = DetectTeleporter(TeruIsNigga)
            if Nigga then
                requestEntrance(Nigga)
            end
            if GetDistance(TeruIsNigga.Position) > 4500 then
                repeat wait()
                    if plr.Character:FindFirstChild("PartTele") then
                        plr.Character:FindFirstChild("PartTele").CFrame = GetPosBypass(TeruIsNigga).Part.CFrame
                    end
                    plr.Character:FindFirstChild("Head"):Destroy()
                    plr.Character.HumanoidRootPart.CFrame = GetPosBypass(TeruIsNigga).Part.CFrame
                    plr.Character:WaitForChild("Humanoid"):ChangeState(15)
                    wait(2)
                    plr.Character.PrimaryPart.CFrame = GetPosBypass(TeruIsNigga).Part.CFrame
                    wait(3)
                until GetDistance(TeruIsNigga.Position) <= 4500 or not plr.Character:FindFirstChild("Humanoid") or plr.Character:FindFirstChild("Humanoid").Health <= 0
            end
        elseif DetectFruitBackback() then
            Tween(TeruIsNigga)
        end
    end)
end

function ToBypass(gay)
    if GetDistance(gay.Position) > 4500 then
        repeat wait()
            BypassTo(gay)
        until GetDistance(gay.Position) <= 4500 or not plr.Character:FindFirstChild("Humanoid") or plr.Character:FindFirstChild("Humanoid").Health <= 0
    elseif GetDistance(gay.Position) < 4500 then
        Tween(gay)
    end
end

spawn(function()
    while task.wait() do
        if plr.Character:FindFirstChild("Humanoid").Health <= 0 or not plr.Character:FindFirstChild("HumanoidRootPart") then
            if plr.Character:FindFirstChild("PartTele") then
                plr.Character:FindFirstChild("PartTele"):Destroy()
            end
        end
    end
end)
spawn(function()
    while task.wait() do
        if plr.Character:FindFirstChild("PartTele") then
            if (plr.Character.HumanoidRootPart.Position - plr.Character:FindFirstChild("PartTele").Position).Magnitude >= 100 then
                plr.Character:FindFirstChild("PartTele"):Destroy()
            end
        end
    end
end)

function DetectMob(MobName)
    for i, v in pairs(WS.Enemies:GetChildren()) do
        local stringgsub = v.Name:gsub(" %pLv. %d+%p", "")
        if ((typeof(MobName) == "table" and (table.find(MobName, v.Name) or table.find(MobName, stringgsub))) or (v.Name == MobName or MobName == stringgsub and v.Name ~= "FishBoat" and not string.find(v.Name, "Brigade"))) and v:IsA('Model') and v:FindFirstChild('Humanoid') and v.Humanoid.Health > 0 and v:FindFirstChild('HumanoidRootPart') then
            return v
        end
    end
end

function DetectMob2(MobName2)
    for i, v in pairs(WS.Enemies:GetChildren()) do
        local stringgsub = v.Name:gsub(" %pLv. %d+%p", "")
        if ((typeof(MobName2) == "table" and (table.find(MobName2, v.Name) or table.find(MobName2, stringgsub))) or (v.Name == MobName2 or MobName2 == stringgsub and v.Name ~= "FishBoat" and not string.find(v.Name, "Brigade"))) and v:IsA('Model') and v:FindFirstChild('Humanoid') and v.Humanoid.Health > 0 and v:FindFirstChild('HumanoidRootPart') then
            return v
        end
    end
    for i, v in pairs(Rc:GetChildren()) do
        local stringgsub = v.Name:gsub(" %pLv. %d+%p", "")
        if ((typeof(MobName2) == "table" and (table.find(MobName2, v.Name) or table.find(MobName2, stringgsub))) or (v.Name == MobName2 or MobName2 == stringgsub and v.Name ~= "FishBoat" and not string.find(v.Name, "Brigade"))) and v:IsA('Model') and v:FindFirstChild('Humanoid') and v.Humanoid.Health > 0 and v:FindFirstChild('HumanoidRootPart') then
            return v
        end
    end
end

function GetWP(MeleeorSword)
    Nahfck = ""
    for i, v in pairs(plr.Backpack:GetChildren()) do
        if v:IsA("Tool") and v.ToolTip == MeleeorSword then
            Nahfck = v.Name
        end
    end
    for i, v in pairs(plr.Character:GetChildren()) do
        if v:IsA("Tool") and v.ToolTip == MeleeorSword then
            Nahfck = v.Name
        end
    end
    return Nahfck
end

function EquipWeapon(Giet)
    Giet = GetWP("Melee")
    local bucac = plr.Backpack:FindFirstChild(Giet)
    if bucac then
        plr.Character.Humanoid:EquipTool(bucac)
    end
end

function UnEquipWeapon(Giet)
    if Bulon["Select WP"] == "" or Bulon["Select WP"] == nil then
        Bulon["Select WP"] = "Melee"
    end
    Giet = GetWP(Bulon["Select WP"])
    if plr.Character:FindFirstChild(Giet) then
        plr.Character:FindFirstChild(Giet).Parent = plr.Backpack
    end
end

function Buso()
    if not plr.Character:FindFirstChild("HasBuso") then
        local args = {[1] = "Buso"}
        Rc.Remotes.CommF_:InvokeServer(unpack(args))
    end
end

function BringMob(huh)
    for i, v in pairs(WS.Enemies:GetChildren()) do
        if v.Name == huh and v.Parent and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and (v.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).Magnitude <= 350 then
            v.HumanoidRootPart.CFrame = BringPos
            v.Humanoid.JumpPower = 0
            v.Humanoid.WalkSpeed = 0
            v.HumanoidRootPart.Transparency = 1
            v.HumanoidRootPart.CanCollide = false
            v.Head.CanCollide = false
            if v.Humanoid:FindFirstChild("Animator") then
                v.Humanoid.Animator:Destroy()
            end
            if not v.HumanoidRootPart:FindFirstChild("Lock") then
                local lock = Instance.new("BodyVelocity")
                lock.Parent = v.HumanoidRootPart
                lock.Name = "Lock"
                lock.MaxForce = Vector3.new(100000, 100000, 100000)
                lock.Velocity = Vector3.new(0, 0, 0)
            end
            sethiddenproperty(plr, "SimulationRadius", math.huge)
            v.Humanoid:ChangeState(11)
        end
    end
end

function CancelTween()
    if plr.Character.Head:FindFirstChild("BodyVelocity") then
        plr.Character.Head:FindFirstChild("BodyVelocity"):Destroy()
    end
    if plr.Character:FindFirstChild("PartTele") then
        plr.Character:FindFirstChild("PartTele"):Destroy()
    end
    NoClip = false
    return Tween(plr.Character.HumanoidRootPart.CFrame)
end

function KillMob(V1, StopFunction)
        thismob = DetectMob2(V1)
        if thismob:FindFirstChild("HumanoidRootPart") and thismob.Parent and thismob:FindFirstChild("Humanoid") and thismob.Humanoid.Health > 0 then
            repeat task.wait()
                Buso()
                EquipWeapon()
                Tween(thismob.HumanoidRootPart.CFrame * CFrame.new(0, 15, 0))
                BringPos = thismob.HumanoidRootPart.CFrame
                BringMob(V1)
                NoClip = true
            until not thismob.Parent or not thismob:FindFirstChild("Humanoid") or thismob:FindFirstChild("Humanoid").Health <= 0 or not thismob:FindFirstChild("HumanoidRootPart") or StopFunction()
            NoClip = false
            CancelTween()
        end
end

spawn(function()
    while wait() do
        pcall(function()
            if NoClip == true then
                if not plr.Character.Head:FindFirstChild("Nigga") then
                    local Bucaccho = Instance.new("BodyVelocity", plr.Character.Head)
                    Bucaccho.P = 1500
                    Bucaccho.Name = "Nigga"
                    Bucaccho.MaxForce = Vector3.new(0, 100000, 0)
                    Bucaccho.Velocity = Vector3.new(0, 0, 0)
                end
                for i, v in pairs(plr.Character:GetDescendants()) do
                    if v:IsA("BasePart") then
                        v.CanCollide = false
                    end
                end
            else
                if plr.Character.Head:FindFirstChild("Nigga") then
                    plr.Character.Head:FindFirstChild("Nigga"):Destroy()
                end
            end
        end)
    end
end)

function DisableTween(nigga)
    if not nigga then
        NoClip = false
        if plr.Character.Head:FindFirstChild("BodyVelocity") then
            plr.Character.Head:FindFirstChild("BodyVelocity"):Destroy()
        end
        if plr.Character:FindFirstChild("PartTele") then
            plr.Character:FindFirstChild("PartTele"):Destroy()
        end
        NoClip = false
        return Tween(plr.Character.HumanoidRootPart.CFrame)
    end
end

local QuestKhac = {"BartiloQuest", "CitizenQuest"}
local function S()
    local Lvl = plr.Data.Level.Value
    local T = Lvl
    local min = 0
    if Lvl >= 1 and Lvl <= 9 then
        if tostring(plr.Team) == "Marines" then
            Mob1 = "Trainee"
            Mob2 = "MarineQuest"
            Mob3 = 1
        elseif tostring(plr.Team) == "Pirates" then
            Mob1 = "Bandit"
            Mob2 = "BanditQuest1"
            Mob3 = 1
        end
    end
    local GuideModule = require(Rc.GuideModule)
    local Quests = require(Rc.Quests)
    for i, v in pairs(GuideModule["Data"]["NPCList"]) do
        for i1, v1 in pairs(v["Levels"]) do
            if Lvl >= v1 then
                if not levelreq then
                    levelreq = 0
                end
                if v1 > levelreq then
                    npcpos = i["CFrame"]
                    Mob3 = i1
                    levelreq = v1
                end
                if #v["Levels"] == 3 and Mob3 == 3 then
                    npcpos = i["CFrame"]
                    Mob3 = 2
                    levelreq = v["Levels"][2]
                end
            end
        end
    end
    for i, v in pairs(Quests) do
        for i1, v1 in pairs(v) do
            for O, P in pairs(v1.Task) do
                if v1["LevelReq"] == levelreq and v1.Task[O] > 1 and not table.find(QuestKhac, tostring(i)) then
                    Mob2 = i
                    for i2, v2 in pairs(v1["Task"]) do
                        Mob1 = i2
                    end
                end
            end
        end
    end
    if Mob2 == "MarineQuest2" then
        Mob2 = "MarineQuest2"
        Mob3 = 1
        Mob1 = "Chief Petty Officer"
        levelreq = 120
    elseif Mob2 == "ImpeMob3" then
        Mob2 = "PrisonerQuest"
        Mob3 = 2
        Mob1 = "Dangerous Prisoner"
        levelreq = 210
    elseif Mob2 == "SkyExp1Quest" then
        if Mob3 == 1 then
        elseif Mob3 == 2 then
        end
    elseif Mob2 == "Area2Quest" and Mob3 == 2 then
        Mob2 = "Area2Quest"
        Mob3 = 1
        Mob1 = "Swan Pirate"
        levelreq = 775
    end
end

local Q = require(Rc.Quests)
local a3 = require(Rc:WaitForChild("GuideModule"))
function CheckDataQuest()
    for r, v in next, a3.Data do
        if r == "QuestData" then
            return true
        end
    end
    return false
end
function CheckNameMobDoubleQuest()
    local a
    if CheckDataQuest() then
        for r, v in next, a3.Data.QuestData.Task do
            a = r
        end
    end
    return a
end
function KillAura()
    for i, v in pairs(WS.Enemies:GetChildren()) do
        if v.Name ~= "FishBoat" and not string.find(v.Name, "Brigade") then
            if v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                repeat wait()
                    v.Humanoid.Health = 0
                    sethiddenproperty(plr, "SimulationRadius", math.huge)
                until not v:FindFirstChild("Humanoid") or v:FindFirstChild("Humanoid").Health <= 0 or not v.Parent 
            end
        end
    end
end
function CheckDoubleQuestSkidcuaYMF()
    S()
    local a5 = {}
    if
        plr.Data.Level.Value >= 10 and Bulon["Double Quest"] and CheckDataQuest() and
            CheckNameMobDoubleQuest() == Mob1 and
            #CheckNameMobDoubleQuest() > 2
     then
        for r, v in pairs(Q) do
            for M, N in pairs(v) do
                for O, P in pairs(N.Task) do
                    if tostring(O) == Mob1 then
                        for a6, a7 in next, v do
                            for a8, a9 in next, a7.Task do
                                if a8 ~= Mob1 and a9 > 1 then
                                    if a7.LevelReq <= plr.Data.Level.Value then
                                        a5["Name"] = tostring(a8)
                                        a5["Mob2"] = r
                                        a5["ID"] = a6
                                    else
                                        a5["Name"] = Mob1
                                        a5["Mob2"] = Mob2
                                        a5["ID"] = Mob3
                                    end
                                    return a5
                                end
                            end
                        end
                    end
                end
            end
        end
    else
        a5["Name"] = Mob1
        a5["Mob2"] = Mob2
        a5["ID"] = Mob3
        return a5
    end
    a5["Name"] = Mob1
    a5["Mob2"] = Mob2
    a5["ID"] = Mob3
    return a5
end
function MobLevel1OrMobLevel2()
    local aa = {}
    for r, v in pairs(game.Workspace.Enemies:GetChildren()) do
        if
            not table.find(aa, v.Name) and v:IsA("Model") and v.Name ~= "PirateBasic" and
                v.Name ~= "FishBoat" and
                not string.find(v.Name, "Brigade") and
                v:FindFirstChild("Humanoid") and
                v.Humanoid.Health > 0 and
                v:FindFirstChild("HumanoidRootPart")
         then
            table.insert(aa, v.Name)
        end
    end
    for r, v in pairs(aa) do
        local ab = v
        v = tostring(v:gsub(" %pLv. %d+%p", ""))
        if tostring(v) == CheckNameMobDoubleQuest() then
            return tostring(ab)
        end
    end
    return false
end

local GuideModule = require(Rc.GuideModule)
function NpcPos()
    for i,v in pairs(GuideModule["Data"]["NPCList"]) do
        if v["NPCName"] == GuideModule["Data"]["LastClosestNPC"] then
            return i["CFrame"]
        end
    end
end

Mob = ""
Mob1 = ""
if game.Workspace:FindFirstChild("MobSpawns") then
    for i, v in pairs(game.Workspace:GetChildren()) do
        if v.Name == "MobSpawns" then
            v:Destroy()
        end
    end
end
local CreateFoldermmb = Instance.new("Folder")
CreateFoldermmb.Parent = game.Workspace
CreateFoldermmb.Name = "MobSpawns"

function RemoveLevelTitle(v)
    return tostring(tostring(v):gsub(" %pLv. %d+%p", ""):gsub(" %pRaid Boss%p", ""):gsub(" %pBoss%p", ""))
end 
spawn(
    function()
        while wait() do 
            for i,v in pairs(game.workspace.MobSpawns:GetChildren()) do  
                v.Name = RemoveLevelTitle(v.Name)
            end
        end
    end
)
function MobDepTrai()
    MobDepTraiTable = {}
    for i, v in pairs(WS["_WorldOrigin"].EnemySpawns:GetChildren()) do
        table.insert(MobDepTraiTable, v)
    end
    local tablefoldermmb = {}
    for i, v in next, require(Rc.Quests) do
        for i1, v1 in next, v do
            for i2, v2 in next, v1.Task do
                if v2 > 1 then
                    table.insert(tablefoldermmb, i2)
                end
            end
        end
    end
    for i, v in pairs(getnilinstances()) do
        if table.find(tablefoldermmb, RemoveLevelTitle(v.Name)) then
            table.insert(MobDepTraiTable, v)
        end
    end
    return MobDepTraiTable
end
local MobSpawnList = MobDepTrai()
function ReloadFolderMob()
    for i, v in next, game.Workspace.MobSpawns:GetChildren() do
        v:Destroy()
    end
    for i, v in pairs(MobSpawnList) do
        if v then
            if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then
                MobNew = Instance.new("Part")
                MobNew.CFrame = v.HumanoidRootPart.CFrame
                MobNew.Name = v.Name
                MobNew.Anchored = true
                MobNew.Transparency = 1
                MobNew.CanCollide = false
                MobNew.Parent = game.Workspace.MobSpawns
            elseif v:IsA("Part") then
                MobNew = v:Clone()
                MobNew.Parent = game.Workspace.MobSpawns
            end
        end
    end
end
ReloadFolderMob()
function GetMobSpawnList(a)
    a = RemoveLevelTitle(a)
    k = {}
    for i, v in pairs(game.Workspace.MobSpawns:GetChildren()) do
        if v.Name == a then
            table.insert(k, v)
        end
    end
    return k
end
function EquipTool(c)
    local tool = plr.Backpack:FindFirstChild(c)
    if tool then
        wait(0.5)
        plr.Character.Humanoid:EquipTool(tool)
    end
end
function GetMob()
    local tablegetmob = {}
    for i, v in pairs(game.Workspace.MobSpawns:GetChildren()) do
        if not table.find(tablegetmob, v.Name) then
            table.insert(tablegetmob, v.Name)
        end
    end
    if string.find(WS["_WorldOrigin"].EnemySpawns:GetChildren()[1].Name, "Lv.") then
        for i, v in pairs(tablegetmob) do
            local b = v
            v = tostring(v:gsub(" %pLv. %d+%p", ""))
            if v == CheckNameMobDoubleQuest() then
                return b
            end
        end
    else
        return CheckNameMobDoubleQuest()
    end
end
function DetectFruit()
    for i,v in pairs(WS:GetChildren()) do
        if string.find(v.Name, "Fruit") then
            return v
        end
    end
end
function GetMobName(Name)
    local tablegetmob = {}
    for i, v in pairs(game.Workspace.MobSpawns:GetChildren()) do
        if not table.find(tablegetmob, v.Name) then
            table.insert(tablegetmob, v.Name)
        end
    end
    if string.find(WS["_WorldOrigin"].EnemySpawns:GetChildren()[1].Name, "Lv.") then
        for i, v in pairs(tablegetmob) do
            local b = v
            v = tostring(v:gsub(" %pLv. %d+%p", ""))
            if v == Name then
                return b
            end
        end
    else
        return Name
    end
end

function GetDistance(a)
    if typeof(a) == "CFrame" then
        return (a.Position - plr.Character.HumanoidRootPart.Position).Magnitude
    elseif typeof(a) == "Vector3" then
        return (a - plr.Character.HumanoidRootPart.Position).Magnitude
    end
end

function GetQuest()
    if (NpcPos().Position - plr.Character.HumanoidRootPart.Position).Magnitude <= 10 then
        Rc.Remotes["CommF_"]:InvokeServer("StartQuest", tostring(CheckDoubleQuestSkidcuaYMF().Mob2), CheckDoubleQuestSkidcuaYMF().ID)
    else
        ToBypass(NpcPos())
    end
end

function SendKey(Name, Hold)
    if Hold == nil then
        Hold = 0
    end
    game:service("VirtualInputManager"):SendKeyEvent(true, Name, false, game)
    wait(Hold)
    game:service("VirtualInputManager"):SendKeyEvent(false, Name, false, game)
end
function DetectChest()
    local Distochest = math.huge
    local nahidwin 
    for i, v in pairs(WS:GetChildren()) do
        if string.find(v.Name, "Chest") then
            if GetDistance(v.Position) < Distochest then
                Distochest = GetDistance(v.Position)
                nahidwin = v
            end
        end
    end
    if not nahidwin then
        for i, v in pairs(WS:GetChildren()) do
            if string.find(v.Name, "Chest") and v:IsA("Part") then
                if GetDistance(v.Position) < Distochest then
                    Distochest = GetDistance(v.Position)
                    nahidwin = v
                end
            end
        end
    end
    return nahidwin
end

function ClaimQuestRaceV3()
    if Rc.Remotes.CommF_:InvokeServer("Wenlocktoad", "1") == 0 then
        Rc.Remotes.CommF_:InvokeServer("Wenlocktoad", "2")
        return
    elseif Rc.Remotes.CommF_:InvokeServer("Wenlocktoad", "1") == 2 then 
        Rc.Remotes.CommF_:InvokeServer("Wenlocktoad", "3")
        return
    elseif Rc.Remotes.CommF_:InvokeServer("Wenlocktoad", "1") == -1 then 
        task.wait(2)
        return 
    end
end

IsStackFarm = false
function AutoFarm()
    if IsStackFarm == true then 
        return 
    end
    if plr.PlayerGui.Main:FindFirstChild("Quest").Visible and not string.find(plr.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "(0/1)") then
        if MobLevel1OrMobLevel2() then
            for r, v in pairs(game.Workspace.Enemies:GetChildren()) do
                if v.Name == MobLevel1OrMobLevel2() then
                    if v:FindFirstChild("HumanoidRootPart") and v.Parent and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                        repeat wait()
                            Window:SetTitle("Auto Farm | Killing Mob ".. v.Name)
                            KillMob(v.Name, function() 
                                return  
                                IsStackFarm or 
                                not plr.PlayerGui.Main:FindFirstChild("Quest").Visible 
                            end)                                    
                        until IsStackFarm or not plr.PlayerGui.Main:FindFirstChild("Quest").Visible or not v.Parent or not v:FindFirstChild("Humanoid") or v:FindFirstChild("Humanoid").Health <= 0 or not v:FindFirstChild("HumanoidRootPart") or IsStackFarm
                    end
                end
            end
        elseif not MobLevel1OrMobLevel2() then
            for i, v in pairs(GetMobSpawnList(GetMob())) do
                repeat wait()
                    Window:SetTitle("Auto Farm | Waitting Mob ".. CheckNameMobDoubleQuest() .. "")
                    NoClip = true
                    ToBypass(v.CFrame * CFrame.new(0, 15, 0))
                until MobLevel1OrMobLevel2() or IsStackFarm or not plr.PlayerGui.Main:FindFirstChild("Quest").Visible or GetDistance(v.Position) <= 30 or IsStackFarm
                NoClip = false
            end
        end
    elseif not plr.PlayerGui.Main:FindFirstChild("Quest").Visible or string.find(plr.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "(0/1)") then
        GetQuest()
    end
end

local CombatFramework = require(game:GetService("Players").LocalPlayer.PlayerScripts:WaitForChild("CombatFramework"))
local CombatFrameworkR = getupvalues(CombatFramework)[2]

function CurrentWeapon()
    local ac = CombatFrameworkR.activeController
    local ret = ac.blades[1]
    if not ret then
        return game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Name
    end
    pcall(
        function()
            while ret.Parent ~= game.Players.LocalPlayer.Character do
                ret = ret.Parent
            end
        end
    )
    if not ret then
        return game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Name
    end
    return ret
end
function Attack2()
    if game.Players.LocalPlayer.Character.Stun.Value ~= 0 then
        return nil
    end
    local ac = CombatFrameworkR.activeController
    ac.hitboxMagnitude = 55
    if ac and ac.equipped then
        for indexincrement = 1, 1 do
            local bladehit = require(Rc.CombatFramework.RigLib).getBladeHits(
            game.Players.LocalPlayer.Character,
            { game.Players.LocalPlayer.Character.HumanoidRootPart },
            60
        )
            if #bladehit > 0 then
                local AcAttack8 = debug.getupvalue(ac.attack, 5)
                local AcAttack9 = debug.getupvalue(ac.attack, 6)
                local AcAttack7 = debug.getupvalue(ac.attack, 4)
                local AcAttack10 = debug.getupvalue(ac.attack, 7)
                local NumberAc12 = (AcAttack8 * 798405 + AcAttack7 * 727595) % AcAttack9
                local NumberAc13 = AcAttack7 * 798405
                (function()
                    NumberAc12 = (NumberAc12 * AcAttack9 + NumberAc13) % 1099511627776
                    AcAttack8 = math.floor(NumberAc12 / AcAttack9)
                    AcAttack7 = NumberAc12 - AcAttack8 * AcAttack9
                end)()
                AcAttack10 = AcAttack10 + 1
                debug.setupvalue(ac.attack, 5, AcAttack8)
                debug.setupvalue(ac.attack, 6, AcAttack9)
                debug.setupvalue(ac.attack, 4, AcAttack7)
                debug.setupvalue(ac.attack, 7, AcAttack10)
                for k, v in pairs(ac.animator.anims.basic) do
                    v:Play()
                end
                if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") and ac.blades and ac.blades[1] then
                    game:GetService("ReplicatedStorage").RigControllerEvent:FireServer("weaponChange", tostring(CurrentWeapon()))
                    Rc.Remotes.Validator:FireServer(math.floor(NumberAc12 / 1099511627776 * 16777215), AcAttack10)
                    game:GetService("ReplicatedStorage").RigControllerEvent:FireServer("hit", bladehit, 2, "")
                end
            end
        end
    end
end

function DoAttack()
    pcall(function()
        Attack2()
    end)
end

function DetectQuestComplete()
    for i,v in pairs(plr.PlayerGui.Notifications:GetDescendants()) do
        if v:IsA("TextLabel") then 
            if string.find(v.Text,"completed")  or string.find(v.Text,"QUEST COMPLETED!") then 
                return true
            end
        end
    end
    return false
end

spawn(function()
    while wait() do
        if DetectQuestComplete() then
            IsKillDone = true
        end
    end
end)

function Click()
    local bc = game:GetService("VirtualUser")
    bc:CaptureController()
    bc:ClickButton1(Vector2.new(851, 158), WS.Camera.CFrame)
end

function GetNotification(ccacc)
    for i,v in pairs(plr.PlayerGui.Notifications:GetDescendants()) do
        if v:IsA("TextLabel") then 
            if string.find(v.Text,ccacc) then 
                return true
            end
        end
    end
    return false
end

CountClaimQuest = 0
function SkipLv1()
    if plr.Data.Level.Value >= 1 and plr.Data.Level.Value <= 29 then
        if DetectMob("Sky Bandit") then
            repeat wait()
                Window:SetTitle("Auto Farm | Killing Mob Sky Bandit")
                KillMob("Sky Bandit", function() return IsStackFarm or plr.Data.Level.Value >= 30 end)
            until IsStackFarm or plr.Data.Level.Value >= 30 or not DetectMob("Sky Bandit")
        else
            for i, v in pairs(GetMobSpawnList(GetMobName("Sky Bandit"))) do
                repeat wait()
                    Window:SetTitle("Auto Farm | Waitting Mob Sky Bandit")
                    Tween(v.CFrame * CFrame.new(0, 15, 0))
                until DetectMob("Sky Bandit") or IsStackFarm or plr.Data.Level.Value >= 30 or GetDistance(v.Position) <= 30
                NoClip = false
            end
        end
    elseif plr.Data.Level.Value >= 30 and plr.Data.Level.Value <= 49 then
        if DetectMob("Shanda") then
            repeat wait()
                Window:SetTitle("Auto Farm | Killing Mob Shanda")
                KillMob("Shanda", function() return IsStackFarm or plr.Data.Level.Value >= 50 end)
            until IsStackFarm or plr.Data.Level.Value >= 50 or not DetectMob("Shanda")
        else
            for i, v in pairs(GetMobSpawnList(GetMobName("Shanda"))) do
                repeat wait()
                    Window:SetTitle("Auto Farm | Waitting Mob Shanda")
                    Tween(v.CFrame * CFrame.new(0, 15, 0))
                until DetectMob("Shanda") or IsStackFarm or plr.Data.Level.Value >= 50 or GetDistance(v.Position) <= 30
            end
        end
    elseif plr.Data.Level.Value >= 50 and plr.Data.Level.Value <= 299 then
        if not DetectQuestComplete() then
            if plr.PlayerGui.Main.Quest.Visible == false then
                Rc.Remotes["CommF_"]:InvokeServer("PlayerHunter")
                CountClaimQuest = CountClaimQuest + 1
            elseif plr.PlayerGui.Main.Quest.Visible == true then
                local djtmenokhovailon = string.gsub(plr.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "Defeat ", "")
                djtmenokhovailon = string.gsub(djtmenokhovailon, " %p(0/1)%p", "")
                if not WS.Characters:FindFirstChild(djtmenokhovailon) and plr.PlayerGui.Main.Quest.Visible == true then
                    Rc.Remotes.CommF_:InvokeServer("AbandonQuest")
                end
                if GetNotification("Die") or GetNotification("Player") or GetNotification("safe") or GetNotification("not") then
                    Rc.Remotes.CommF_:InvokeServer("AbandonQuest")
                end
                if WS.Characters:FindFirstChild(djtmenokhovailon):FindFirstChild("Humanoid").Health <= 0 then
                    Rc.Remotes.CommF_:InvokeServer("AbandonQuest")
                end
                if game.Players[djtmenokhovailon].Data.Level.Value < 20 or game.Players[djtmenokhovailon].Data.Level.Value >= 150 then
                    Rc.Remotes.CommF_:InvokeServer("AbandonQuest")
                    print(game.Players[djtmenokhovailon].Data.Level.Value)
                end
                if CountClaimQuest >= 15 then
                    HopServer()
                end
                if game.Players[djtmenokhovailon].Data.Level.Value >= 20 and game.Players[djtmenokhovailon].Data.Level.Value < 150 then
                    for i, v in pairs(WS.Characters:GetChildren()) do
                        if v:IsA("Model") then
                            if v.Name == djtmenokhovailon then
                                if v:FindFirstChild("Humanoid").Health > 0 and v.Parent and v:FindFirstChild("HumanoidRootPart") then
                                    if plr.PlayerGui.Main.PvpDisabled.Visible == false then
                                        repeat wait()
                                            Window:SetTitle("Auto Farm | Killing Players ".. v.Name)
                                            v.HumanoidRootPart.Size = Vector3.new(30, 30, 30)
                                            Tween(v.HumanoidRootPart.CFrame * CFrame.new(math.random(0, 2), math.random(0, 2), math.random(0, 2)))
                                            EquipWeapon()
                                            NoClip = true
                                            Buso()
                                            if GetDistance(v.HumanoidRootPart.Position) <= 10 then
                                                SendKey("X")
                                                Click()
                                                SendKey("Z")
                                                disablefastattack = true
                                            end
                                        until v:FindFirstChild("Humanoid").Health <= 0 or not v.Parent or not v:FindFirstChild("HumanoidRootPart") or plr.PlayerGui.Main.PvpDisabled.Visible == true
                                    elseif plr.PlayerGui.Main.PvpDisabled.Visible == true then
                                        Rc.Remotes.CommF_:InvokeServer("EnablePvp")
                                        NoClip = false
                                        disablefastattack = false
                                    end
                                end
                            end
                        end
                    end
                end
            end
        elseif IsKillDone then
            if plr.Data.Level.Value < 300 then
                if DetectMob("Shanda") then
                    repeat wait()
                        Window:SetTitle("Auto Farm | Killing Mob Shanda")
                        KillMob("Shanda", function() return IsStackFarm or plr.Data.Level.Value >= 300 end)
                    until IsStackFarm or plr.Data.Level.Value >= 50 or not DetectMob("Shanda")
                else
                    for i, v in pairs(GetMobSpawnList(GetMobName("Shanda"))) do
                        repeat wait()
                            Window:SetTitle("Auto Farm | Waitting Mob Shanda")
                            Tween(v.CFrame * CFrame.new(0, 15, 0))
                        until DetectMob("Shanda") or IsStackFarm or plr.Data.Level.Value >= 300 or GetDistance(v.Position) <= 30
                    end
                end
            elseif plr.Data.Level.Value >= 300 and IsKillDone then
                IsKillDone = false
            end
        end
    end
end

Delay = 0.1
spawn(function()
    while wait(Delay) do
        repeat task.wait()
            DoAttack()
        until disablefastattack
    end
end)

spawn(function()
    while task.wait() do
        if plr.Data.Level.Value >= 1 and plr.Data.Level.Value <= 299 then
            SkipLv1()
        elseif plr.Data.Level.Value >= 300 and plr.Data.Level.Value <= 339 then
            AutoFarm()
        end
    end
end)
