if game:GetService("Players").LocalPlayer.PlayerGui.Main:FindFirstChild("ChooseTeam") then
    repeat
        wait()
        if game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("Main").ChooseTeam.Visible == true then
            if getgenv().Team == "Pirates" then
                for i, v in pairs(
                    getconnections(
                        game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Container["Pirates"].Frame.TextButton.Activated
                    )
                ) do
                    for a, b in pairs(getconnections(game:GetService("UserInputService").TouchTapInWorld)) do
                        b:Fire()
                    end
                    v.Function()
                end
            else
                for i, v in pairs(
                    getconnections(
                        game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Container["Marines"].Frame.TextButton.Activated
                    )
                ) do
                    for a, b in pairs(getconnections(game:GetService("UserInputService").TouchTapInWorld)) do
                        b:Fire()
                    end
                    v.Function()
                end
            end
        end
    until game.Players.LocalPlayer.Team ~= nil and game:IsLoaded()
end

_G.S = {
    Turnv3 = false,
    Turnv4 = false,
    AutoTurnObservation = false,
    SelectDelay = "0.3",
    TimeWait = 20,
    DelayAttack = 80,
    MethodTween = true
}

function LoadSettings()
    if readfile and writefile and isfile and isfolder then
        if not isfolder("Night Hub") then
            makefolder("Night Hub")
        end
        if not isfolder("Night Hub/Blox Fruits/") then
            makefolder("Night Hub/Blox Fruits/")
        end
        if not isfile("Night Hub/Blox Fruits/" .. game.Players.LocalPlayer.Name .. ".json") then
            writefile(
                "Night Hub/Blox Fruits/" .. game.Players.LocalPlayer.Name .. ".json",
                game:GetService("HttpService"):JSONEncode(_G.S)
            )
        else
            local x =
                game:GetService("HttpService"):JSONDecode(
                readfile("Night Hub/Blox Fruits/" .. game.Players.LocalPlayer.Name .. ".json")
            )
            for y, z in pairs(x) do
                _G.S[y] = z
            end
        end
    else
        return
    end
end
function SaveSettings()
    if readfile and writefile and isfile and isfolder then
        if not isfile("Night Hub/Blox Fruits/" .. game.Players.LocalPlayer.Name .. ".json") then
            LoadSettings()
        else
            local x =
                game:GetService("HttpService"):JSONDecode(
                readfile("Night Hub/Blox Fruits/" .. game.Players.LocalPlayer.Name .. ".json")
            )
            local A = {}
            for y, z in pairs(_G.S) do
                A[y] = z
            end
            writefile(
                "Night Hub/Blox Fruits/" .. game.Players.LocalPlayer.Name .. ".json",
                game:GetService("HttpService"):JSONEncode(A)
            )
        end
    else
        return
    end
end
LoadSettings()

local plr = game.Players.LocalPlayer
local lp = game.Players
local WS = game.Workspace
local Rc = game.ReplicatedStorage
local Notifygame = require(game.ReplicatedStorage:WaitForChild("Notification"))
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/SourceFullNightHub/ewihwg/main/l"))()
Fastbeo = loadstring(game:HttpGet("https://raw.githubusercontent.com/SourceFullNightHub/ewihwg/main/8847hfgg"))()
local Race = plr.Data.Race.Value
local YourLevel = plr.Data.Level.Value

if game.PlaceId == 2753915549 then
    Sea1 = true
elseif game.PlaceId == 4442272183 then
    Sea2 = true
elseif game.PlaceId == 7449423635 then
    Sea3 = true
else
    game.Players.LocalPlayer:Kick("Not Support This Game!")
end

local QuestKhac = {"BartiloQuest", "CitizenQuest"}
function QuestG()
    local YourLevel = game:GetService("Players").LocalPlayer.Data.Level.Value
    local T = YourLevel
    local min = 0
    if YourLevel >= 1 and YourLevel <= 9 then
        if tostring(game.Players.LocalPlayer.Team) == "Marines" then
            Mob1 = "Trainee"
            Mob2 = "MarineQuest"
            Mob3 = 1
        elseif tostring(game.Players.LocalPlayer.Team) == "Pirates" then
            Mob1 = "Bandit"
            Mob2 = "BanditQuest1"
            Mob3 = 1
        end
    end
    local GuideModule = require(game:GetService("ReplicatedStorage").GuideModule)
    local Quests = require(game:GetService("ReplicatedStorage").Quests)
    for i, v in pairs(GuideModule["Data"]["NPCList"]) do
        for i1, v1 in pairs(v["Levels"]) do
            if YourLevel >= v1 then
                if not levelreq then
                    levelreq = 0
                end
                if v1 > levelreq then
                    npcpos = i["CFrame"]
                    Mob3 = i1
                    levelreq = v1
                end
                if #v["Levels"] == 3 and Mob3 == 3 then
                    npcpos = i["CFrame"]
                    Mob3 = 2
                    levelreq = v["Levels"][2]
                end
            end
        end
    end
    for i, v in pairs(Quests) do
        for i1, v1 in pairs(v) do
            for O, P in pairs(v1.Task) do
                if v1["LevelReq"] == levelreq and v1.Task[O] > 1 and not table.find(QuestKhac, tostring(i)) then
                    Mob2 = i
                    for i2, v2 in pairs(v1["Task"]) do
                        Mob1 = i2
                    end
                end
            end
        end
    end
    if Mob2 == "MarineQuest2" then
        Mob2 = "MarineQuest2"
        Mob3 = 1
        Mob1 = "Chief Petty Officer"
        levelreq = 120
    elseif Mob2 == "ImpeMob3" then
        Mob2 = "PrisonerQuest"
        Mob3 = 2
        Mob1 = "Dangerous Prisoner"
        levelreq = 210
    elseif Mob2 == "SkyExp1Quest" then
        if Mob3 == 1 then
        elseif Mob3 == 2 then
        end
    elseif Mob2 == "Area2Quest" and Mob3 == 2 then
        Mob2 = "Area2Quest"
        Mob3 = 1
        Mob1 = "Swan Pirate"
        levelreq = 775
    end
end

function HopServer(bO, Reason)
    if not bO then
        bO = 10
    end
    ticklon = tick()
    repeat
        wait()
    until tick() - ticklon >= 1
    local function Hop()
        for r = 1, math.huge do
            if ChooseRegion == nil or ChooseRegion == "" then
                ChooseRegion = "Singapore"
            else
                plr.PlayerGui.ServerBrowser.Frame.Filters.SearchRegion.TextBox.Text = ChooseRegion
            end
            local bP = game.ReplicatedStorage.__ServerBrowser:InvokeServer(r)
            if not plr.Backpack:FindFirstChild("God's Chalice") and not plr.Character:FindFirstChild("God's Chalice") and not plr.Backpack:FindFirstChild("Fist Of Darkness") and not plr.Character:FindFirstChild("Fist Of Darkness") then
                for k, v in pairs(bP) do
                    if k ~= game.JobId and v["Count"] < bO then
                        Notifygame.new("<Color=Red>Sitinks Hub : Wait 5 Seconds Hop Servers<Color=/>"):Display()
                        while wait(5) do
                            repeat wait()
                                Notifygame.new("<Color=Red>Sitinks Hub : Hop Servers<Color=/>"):Display()
                                game.ReplicatedStorage.__ServerBrowser:InvokeServer("teleport", k)
                            until plr.Backpack:FindFirstChild("God's Chalice") or plr.Character:FindFirstChild("God's Chalice") or plr.Backpack:FindFirstChild("Fist Of Darkness") or plr.Character:FindFirstChild("Fist Of Darkness") or getgenv().CancelHop == true
                        end
                    end
                end
            end
        end
        return false
    end
    if not getgenv().Loaded then
        local function bQ(v)
            if v.Name == "ErrorPrompt" then
                if v.Visible then
                    if v.TitleFrame.ErrorTitle.Text == "Teleport Failed" then
                        HopServer()
                        Notifygame.new("<Color=Red>Sitinks Hub : Hop Servers Again<Color=/>"):Display()
                        v.Visible = false
                    end
                end
                v:GetPropertyChangedSignal("Visible"):Connect(
                    function()
                        if v.Visible then
                            if v.TitleFrame.ErrorTitle.Text == "Teleport Failed" then
                                HopServer()
                                Notifygame.new("<Color=Red>Sitinks Hub : Hop Servers Again<Color=/>"):Display()
                                v.Visible = false
                            end
                        end
                    end
                )
            end
        end
        for k, v in pairs(game.CoreGui.RobloxPromptGui.promptOverlay:GetChildren()) do
            bQ(v)
        end
        game.CoreGui.RobloxPromptGui.promptOverlay.ChildAdded:Connect(bQ)
        getgenv().Loaded = true
    end
    while not Hop() do
        wait()
    end
end

function CheckNearestTeleporter(aI)
    vcspos = aI.Position
    min = math.huge
    min2 = math.huge
    local y = game.PlaceId
    if y == 2753915549 then
        OldWorld = true
    elseif y == 4442272183 then
        NewWorld = true
    elseif y == 7449423635 then
        ThreeWorld = true
    end
    if ThreeWorld then
        TableLocations = {
            ["Caslte On The Sea"] = Vector3.new(-5058.77490234375, 314.5155029296875, -3155.88330078125),
            ["Mansion"] = Vector3.new(-12463.8740234375, 374.9144592285156, -7523.77392578125),
            ["Great Tree"] = Vector3.new(28282.5703125, 14896.8505859375, 105.1042709350586),
            ["Ngu1"] = Vector3.new(-11993.580078125, 334.7812805175781, -8844.1826171875),
            ["ngu2"] = Vector3.new(5314.58203125, 25.419387817382812, -125.94227600097656)
        }
    elseif NewWorld then
        TableLocations = {
            ["Mansion"] = Vector3.new(-288.46246337890625, 306.130615234375, 597.9988403320312),
            ["Flamingo"] = Vector3.new(2284.912109375, 15.152046203613281, 905.48291015625),
            ["122"] = Vector3.new(923.21252441406, 126.9760055542, 32852.83203125),
            ["3032"] = Vector3.new(-6508.5581054688, 89.034996032715, -132.83953857422)
        }
    elseif OldWorld then
        TableLocations = {
            ["1"] = Vector3.new(-7894.6201171875, 5545.49169921875, -380.2467346191406),
            ["2"] = Vector3.new(-4607.82275390625, 872.5422973632812, -1667.556884765625),
            ["3"] = Vector3.new(61163.8515625, 11.759522438049316, 1819.7841796875),
            ["4"] = Vector3.new(3876.280517578125, 35.10614013671875, -1939.3201904296875)
        }
    end
    TableLocations2 = {}
    for r, v in pairs(TableLocations) do
        TableLocations2[r] = (v - vcspos).Magnitude
    end
    for r, v in pairs(TableLocations2) do
        if v < min then
            min = v
            min2 = v
        end
    end
    for r, v in pairs(TableLocations2) do
        if v < min then
            min = v
            min2 = v
        end
    end
    for r, v in pairs(TableLocations2) do
        if v <= min then
            choose = TableLocations[r]
        end
    end
    min3 = (vcspos - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
    if min2 <= min3 then
        return choose
    end
end

function requestEntrance(vector3)
    args = {
        "requestEntrance",
        vector3
    }
    game.ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
    oldcframe = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    char = game.Players.LocalPlayer.Character.HumanoidRootPart
    char.CFrame = CFrame.new(oldcframe.X, oldcframe.Y + 50, oldcframe.Z)
    if plr.Character:FindFirstChild("PartTele") then
        plr.Character:FindFirstChild("PartTele").CFrame = plr.Character.HumanoidRootPart.CFrame
    end
    task.wait(0.5)
end
function WaitHRP(q0) 
    if not q0 then return end
    return q0.Character:WaitForChild("HumanoidRootPart", 9) 
end 
function Tween(Pos)
    pcall(function()
        if game.Players.LocalPlayer.Character.Humanoid.Health > 0 and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            Distance = (Pos.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart", 9)
            game.Players.LocalPlayer.Character:WaitForChild("Head", 9)
            if not Pos then return end
            if not plr.Character:FindFirstChild("PartTele") then
                local PartTele = Instance.new("Part", plr.Character) -- Create part
                PartTele.Size = Vector3.new(10,1,10)
                PartTele.Name = "PartTele"
                PartTele.Anchored = true
                PartTele.Transparency = 1
                PartTele.CanCollide = false
                PartTele.CFrame = WaitHRP(plr).CFrame 
                PartTele:GetPropertyChangedSignal("CFrame"):Connect(function()
                    task.wait(0.01)
                    WaitHRP(plr).CFrame = PartTele.CFrame
                end)
            end
            tween = game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.PartTele, TweenInfo.new(Distance / 325, Enum.EasingStyle.Linear),{CFrame = Pos})
            local NearestEntraceFunction = CheckNearestTeleporter(Pos)
            if NearestEntraceFunction then
                tween:Cancel()
                requestEntrance(NearestEntraceFunction)
            end
            if Distance <= 250 then
                tween:Cancel()
                game.Players.LocalPlayer.Character.PartTele.CFrame = Pos
            end
            tween:Play()
        end
    end)
end

function Tweento(iuu)
    Distance = (iuu.Position - plr.Character.HumanoidRootPart.Position).Magnitude
    if game.Players.LocalPlayer.Character.Humanoid.Health > 0 and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        Distance = (iuu.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
        game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart", 9)
        game.Players.LocalPlayer.Character:WaitForChild("Head", 9)
        if not iuu then return end
        if not plr.Character:FindFirstChild("PartTele") then
            local PartTele = Instance.new("Part", plr.Character) -- Create part
            PartTele.Size = Vector3.new(10,1,10)
            PartTele.Name = "PartTele"
            PartTele.Anchored = true
            PartTele.Transparency = 1
            PartTele.CanCollide = false
            PartTele.CFrame = WaitHRP(plr).CFrame 
            PartTele:GetPropertyChangedSignal("CFrame"):Connect(function()
                task.wait(0.01)
                WaitHRP(plr).CFrame = PartTele.CFrame
            end)
        end
        tween = game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.PartTele, TweenInfo.new(Distance / 325, Enum.EasingStyle.Linear),{CFrame = iuu})
        if Distance <= 250 then
            tween:Cancel()
            game.Players.LocalPlayer.Character.PartTele.CFrame = iuu
        end
		tween:Play()
    end
    tween:Play()
end

function Tele(Pos)
    if game.Players.LocalPlayer.Character.Humanoid.Health > 0 and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        Distance = (Pos.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
        game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart", 9)
        game.Players.LocalPlayer.Character:WaitForChild("Head", 9)
        if not Pos then return end
        if not plr.Character:FindFirstChild("PartTele") then
            local PartTele = Instance.new("Part", plr.Character) -- Create part
            PartTele.Size = Vector3.new(10,1,10)
            PartTele.Name = "PartTele"
            PartTele.Anchored = true
            PartTele.Transparency = 1
            PartTele.CanCollide = false
            PartTele.CFrame = WaitHRP(plr).CFrame 
            PartTele:GetPropertyChangedSignal("CFrame"):Connect(function()
                task.wait(0.01)
                WaitHRP(plr).CFrame = PartTele.CFrame
            end)
        end
        tween = game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.PartTele, TweenInfo.new(Distance / 325, Enum.EasingStyle.Linear),{CFrame = Pos})
        local NearestEntraceFunction = CheckNearestTeleporter(Pos)
        if NearestEntraceFunction then
            tween:Cancel()
            requestEntrance(NearestEntraceFunction)
        end
        if Distance <= 250 then
            tween:Cancel()
            game.Players.LocalPlayer.Character.PartTele.CFrame = Pos
        end
        tween:Play()
    end
end

spawn(function()
    while task.wait() do
        if plr.Character:FindFirstChild("Humanoid") then
            if plr.Character.Humanoid.Health <= 0 or not plr.Character:FindFirstChild("HumanoidRootPart") then
                if plr.Character:FindFirstChild("PartTele") then
                    plr.Character:FindFirstChild("PartTele"):Destroy()
                end
            end
        end
    end
end)
spawn(function()
    while task.wait() do
        if plr.Character:FindFirstChild("PartTele") then
            if (plr.Character.HumanoidRootPart.Position - plr.Character:FindFirstChild("PartTele").Position).Magnitude >= 100 then
                plr.Character:FindFirstChild("PartTele"):Destroy()
            end
        end
    end
end)

function CancelTween()
    if plr.Character.Head:FindFirstChild("BodyClip") then
        plr.Character.Head:FindFirstChild("BodyClip"):Destroy()
    end
    if plr.Character:FindFirstChild("PartTele") then
        plr.Character:FindFirstChild("PartTele"):Destroy()
    end
    NoClip = false
    return Tween(plr.Character.HumanoidRootPart.CFrame)
end

function Bypass(Ps)
    if (Ps.Position - plr.Character.HumanoidRootPart.Position).Magnitude < 20000 then
        if _G.S.NoBypassIfHaveItem then
            if CheckBackpack("God's Chalice") or CheckBackpack("Fist Of Darkness") then
                Tween(Ps)
            else
                repeat
                    CancelTween()
                    wait()
                    if plr.Character:FindFirstChild("PartTele") then
                        plr.Character:FindFirstChild("PartTele").CFrame = Ps
                    end
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Ps
                    game.Players.LocalPlayer.Character.Head:Destroy()
                    game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(15)
                    wait(2)
                    game.Players.LocalPlayer.Character.PrimaryPart.CFrame = Ps
                    wait(3)
                until (Ps.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 2000 or v.Humanoid.Health <= 0
            end
        else
            repeat
                CancelTween()
                wait()
                if plr.Character:FindFirstChild("PartTele") then
                    plr.Character:FindFirstChild("PartTele").CFrame = Ps
                end
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Ps
                game.Players.LocalPlayer.Character.Head:Destroy()
                game:GetService("Players").LocalPlayer.Character:WaitForChild("Humanoid"):ChangeState(15)
                wait(2)
                game.Players.LocalPlayer.Character.PrimaryPart.CFrame = Ps
                wait(3)
            until (Ps.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 2000 or v.Humanoid.Health <= 0
        end
    else
        Tween(Ps)
    end
end
local RipIndraAttack = {
    "rip_indra",
    "rip_indra True Form"
}
function GetMobCastleRaid()
    for i,v  in pairs(WS.Enemies:GetChildren()) do
        if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and (v.HumanoidRootPart.Position - CFrame.new(-5496.17432, 313.768921, -2841.53027).Position).Magnitude <= 1000 and v.Humanoid.Health > 0 then
            if not table.find(RipIndraAttack, v.Name) then
                return v
            end
        end
    end
end
function CheckDistance(Target1, TARGET2)
    if not TARGET2 then
        TARGET2 = plr.Character.HumanoidRootPart
    end
    dau, buoi =
    pcall(function()
        i = Target1.Position
        v = TARGET2.Position
    end)
    if dau then
        i = Target1.Position
        v = TARGET2.Position
        return (i - v).Magnitude
    end
end

function CheckPlayerShitRace()
    local bf = game.ReplicatedStorage.Remotes.CommF_:InvokeServer("Wenlocktoad", "1")
    local c4 = game.ReplicatedStorage.Remotes.CommF_:InvokeServer("Alchemist", "1")
    if game.Players.LocalPlayer.Character:FindFirstChild("RaceTransformed") then
        return game:GetService("Players").LocalPlayer.Data.Race.Value .. " V4"
    end
    if bf == -2 then
        return game:GetService("Players").LocalPlayer.Data.Race.Value .. " V3"
    end
    if c4 == -2 then
        return game:GetService("Players").LocalPlayer.Data.Race.Value .. " V2"
    end
    return game:GetService("Players").LocalPlayer.Data.Race.Value .. " V1"
end

function Byp(nahupgrade)
    if CheckDistance(nahupgrade) > 4500 then
        Bypass(nahupgrade)
    elseif CheckDistance(nahupgrade) < 4500 then
        Tween(nahupgrade)
    end
end

function CFrameQuest()
    QuestPoses = {}
    for r, v in pairs(getnilinstances()) do
        if
            v:IsA("Model") and v:FindFirstChild("Head") and v.Head:FindFirstChild("QuestBBG") and
                v.Head.QuestBBG.Title.Text == "QUEST"
         then
            QuestPoses[v.Name] = v.Head.CFrame * CFrame.new(0, -2, 2)
        end
    end
    for r, v in pairs(game.Workspace.NPCs:GetDescendants()) do
        if v.Name == "QuestBBG" and v.Title.Text == "QUEST" then
            QuestPoses[v.Parent.Parent.Name] = v.Parent.Parent.Head.CFrame * CFrame.new(0, -2, 2)
        end
    end
    DialoguesList = {}
    for r, v in pairs(require(game.ReplicatedStorage.DialoguesList)) do
        DialoguesList[v] = r
    end
    local V = getscriptclosure(game:GetService("Players").LocalPlayer.PlayerScripts.NPC)
    local W = {}
    for k, v in pairs(debug.getprotos(V)) do
        if #debug.getconstants(v) == 1 then
            table.insert(W, debug.getconstant(v, 1))
        end
    end
    local X = false
    local Y = {}
    for k, v in pairs(debug.getconstants(V)) do
        if type(v) == "string" then
            if v == "Players" then
                X = false
            end
            if not X then
                if v == "Blox Fruit Dealer" then
                    X = true
                end
            else
            end
            if X then
                table.insert(Y, v)
            end
        end
    end
    local Z = {}
    QuestPoint = {}
    for k, v in pairs(Y) do
        if QuestPoses[v] then
            Z[W[k]] = Y[k]
        end
    end
    for r, v in next, Z do
        QuestPoint[r] = QuestPoses[v]
    end
    QuestPoint["SkyExp1Quest"] =
        CFrame.new(
        -7857.28516,
        5544.34033,
        -382.321503,
        -0.422592998,
        0,
        0.906319618,
        0,
        1,
        0,
        -0.906319618,
        0,
        -0.422592998
    )
end
local Q = require(game.ReplicatedStorage.Quests)
local a3 = require(game.ReplicatedStorage:WaitForChild("GuideModule"))
function CheckDataQuest()
    for r, v in next, a3.Data do
        if r == "QuestData" then
            return true
        end
    end
    return false
end
function CheckNameMobDoubleQuest()
    local a
    if CheckDataQuest() then
        for r, v in next, a3.Data.QuestData.Task do
            a = r
        end
    end
    return a
end
function CheckDoubleQuestSkidcuaYMF()
    QuestG()
    local a5 = {}
    if
        game.Players.LocalPlayer.Data.Level.Value >= 10 and _G.S.DoubleQuest and CheckDataQuest() and
            CheckNameMobDoubleQuest() == Mob1 and
            #CheckNameMobDoubleQuest() > 2
     then
        for r, v in pairs(Q) do
            for M, N in pairs(v) do
                for O, P in pairs(N.Task) do
                    if tostring(O) == Mob1 then
                        for a6, a7 in next, v do
                            for a8, a9 in next, a7.Task do
                                if a8 ~= Mob1 and a9 > 1 then
                                    if a7.LevelReq <= game.Players.LocalPlayer.Data.Level.Value then
                                        a5["Name"] = tostring(a8)
                                        a5["Mob2"] = r
                                        a5["ID"] = a6
                                    else
                                        a5["Name"] = Mob1
                                        a5["Mob2"] = Mob2
                                        a5["ID"] = Mob3
                                    end
                                    return a5
                                end
                            end
                        end
                    end
                end
            end
        end
    else
        a5["Name"] = Mob1
        a5["Mob2"] = Mob2
        a5["ID"] = Mob3
        return a5
    end
    a5["Name"] = Mob1
    a5["Mob2"] = Mob2
    a5["ID"] = Mob3
    return a5
end
function MobLevel1OrMobLevel2()
    local aa = {}
    for r, v in pairs(game.Workspace.Enemies:GetChildren()) do
        if
            not table.find(aa, v.Name) and v:IsA("Model") and v.Name ~= "PirateBasic" and
                not string.find(v.Name, "Brigade") and
                v:FindFirstChild("Humanoid") and
                v.Humanoid.Health > 0 and
                v:FindFirstChild("HumanoidRootPart")
         then
            table.insert(aa, v.Name)
        end
    end
    for r, v in pairs(aa) do
        local ab = v
        v = tostring(v:gsub(" %pLv. %d+%p", ""))
        if tostring(v) == CheckNameMobDoubleQuest() then
            return tostring(ab)
        end
    end
    return false
end
local ad = game.ReplicatedStorage.Remotes["CommF_"]
CFrameQuest()
function GetQuest()
    if game.Players.LocalPlayer.PlayerGui.Main:FindFirstChild("Quest").Visible then
        return
    end
    if not QuestPoint[tostring(CheckDoubleQuestSkidcuaYMF().Mob2)] then
        CFrameQuest()
        return
    end
    if
        (QuestPoint[CheckDoubleQuestSkidcuaYMF().Mob2].Position -
            game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 10
     then
        ad:InvokeServer("StartQuest", tostring(CheckDoubleQuestSkidcuaYMF().Mob2), CheckDoubleQuestSkidcuaYMF().ID)
    else
        QuestCFrame = QuestPoint[CheckDoubleQuestSkidcuaYMF().Mob2]
        if _G.S.BypassTele then
            Byp(QuestCFrame)
        else
            NoClip = true
            Tween(QuestCFrame)
        end
    end
end

Mob = ""
Mob1 = ""
plr = game.Players.LocalPlayer
if game.Workspace:FindFirstChild("MobSpawns") then
    for i, v in pairs(game.Workspace:GetChildren()) do
        if v.Name == "MobSpawns" then
            v:Destroy()
        end
    end
end
local CreateFoldermmb = Instance.new("Folder")
CreateFoldermmb.Parent = game.Workspace
CreateFoldermmb.Name = "MobSpawns"

function RemoveLevelTitle(v)
    return tostring(tostring(v):gsub(" %pLv. %d+%p", ""):gsub(" %pRaid Boss%p", ""):gsub(" %pBoss%p", ""))
end 
task.spawn(
    function()
        while task.wait() do 
            pcall(function()
                for i,v in pairs(game.workspace.MobSpawns:GetChildren()) do  
                    v.Name = RemoveLevelTitle(v.Name)
                end
            end)
            task.wait(50)
        end
    end
)
function GetSeaBeastTrial()
    if not game.Workspace.Map:FindFirstChild("FishmanTrial") then
        SpamSkill = nil
        return nil
    end
    if game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Trial of Water") then
        FishmanTrial = game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Trial of Water")
    end
    if FishmanTrial and CheckDistance(FishmanTrial) < 2000 then
        for i, v in next, game:GetService("Workspace").SeaBeasts:GetChildren() do
            if
                string.find(v.Name, "SeaBeast") and v:FindFirstChild("HumanoidRootPart") and
                    (v.HumanoidRootPart.Position - FishmanTrial.Position).Magnitude <= 1500
             then
                if v.Health.Value > 0 then
                    return v
                end
            end
        end
    end
end
function MobDepTrai()
    MobDepTraiTable = {}
    for i, v in pairs(game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:GetChildren()) do
        table.insert(MobDepTraiTable, v)
    end
    local tablefoldermmb = {}
    for i, v in next, require(game:GetService("ReplicatedStorage").Quests) do
        for i1, v1 in next, v do
            for i2, v2 in next, v1.Task do
                if v2 > 1 then
                    table.insert(tablefoldermmb, i2)
                end
            end
        end
    end
    for i, v in pairs(getnilinstances()) do
        if table.find(tablefoldermmb, RemoveLevelTitle(v.Name)) then
            table.insert(MobDepTraiTable, v)
        end
    end
    return MobDepTraiTable
end
local MobSpawnList = MobDepTrai()
function ReloadFolderMob()
    for i, v in next, game.Workspace.MobSpawns:GetChildren() do
        v:Destroy()
    end
    for i, v in pairs(MobSpawnList) do
        if v then
            if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then
                MobNew = Instance.new("Part")
                MobNew.CFrame = v.HumanoidRootPart.CFrame
                MobNew.Name = v.Name
                MobNew.Anchored = true
                MobNew.Transparency = 1
                MobNew.CanCollide = false
                MobNew.Parent = game.Workspace.MobSpawns
            elseif v:IsA("Part") then
                MobNew = v:Clone()
                MobNew.Parent = game.Workspace.MobSpawns
            end
        end
    end
end
ReloadFolderMob()
function GetMobSpawnList(a)
    a = RemoveLevelTitle(a)
    k = {}
    for i, v in pairs(game.Workspace.MobSpawns:GetChildren()) do
        if v.Name == a then
            table.insert(k, v)
        end
    end
    return k
end
function GetMob()
    local tablegetmob = {}
    for i, v in pairs(game.Workspace.MobSpawns:GetChildren()) do
        if not table.find(tablegetmob, v.Name) then
            table.insert(tablegetmob, v.Name)
        end
    end
    if string.find(game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:GetChildren()[1].Name, "Lv.") then
        for i, v in pairs(tablegetmob) do
            local b = v
            v = tostring(v:gsub(" %pLv. %d+%p", ""))
            if v == CheckNameMobDoubleQuest() then
                return b
            end
        end
    else
        return CheckNameMobDoubleQuest()
    end
end
function GetNearestChest()
    local DistanceToChest = math.huge
    local FuckChest
    for k, v in pairs(game.Workspace:GetChildren()) do
        if string.match(v.Name, "Chest")  then
            if (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude < DistanceToChest then
                DistanceToChest = (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude
                FuckChest = v
            end
        end
    end
    if not FuckChest then 
        for i,v in next,game:GetService("Workspace").Map:GetDescendants() do
            if v:IsA("Part") and string.find(v.Name, "Chest")  then
                if (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude < DistanceToChest then
                    DistanceToChest = (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude < DistanceToChest
                    FuckChest = v
                end
            end
        end
    end
    return FuckChest 
end

getgenv().tablefruitausea3 = {}
local whitelistedfruit = {}
local TableDevilFruit = {}
for i,v in next,game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("GetFruits", game:GetService("Players").LocalPlayer.PlayerGui.Main.FruitShop:GetAttribute("Shop2")) do
    if v.Price >= 1000000 then
        table.insert(whitelistedfruit,string.split(v.Name,"-")[1].." Fruit")
        getgenv().tablefruitausea3[v.Name] = v.Price
    end
    table.insert(TableDevilFruit,v.Name)
end

function GetFruitInventory(x)
    local max = math.huge
    local name 
    for i,v in next,game.ReplicatedStorage.Remotes.CommF_:InvokeServer("getInventory") do
        if v.Type == "Blox Fruit" then
            if not x then
                for i2, v2 in pairs(getgenv().tablefruitausea3) do
                    if v.Name == i2 then
                        if tonumber(v2) < tonumber(max) then
                            max = v2
                            name = i2
                        end
                    end
                end
            else
                if not getgenv().tablefruitausea3[v.Name] then 
                    return v.Name
                end
            end
        end
    end
    return name
end
function TweenObject(TweenCFrame,obj,ts)
    if not ts then ts = 350 end
    local tween_s = game:GetService("TweenService")
    local info =
        TweenInfo.new(
        (TweenCFrame.Position -
            obj.Position).Magnitude /
            ts,
        Enum.EasingStyle.Linear
    )
    tween =
        tween_s:Create(
            obj,
        info,
        {CFrame = TweenCFrame}
    )
    tween:Play() 
end
function GetMobName(Name)
    local tablegetmob = {}
    for i, v in pairs(game.Workspace.MobSpawns:GetChildren()) do
        if not table.find(tablegetmob, v.Name) then
            table.insert(tablegetmob, v.Name)
        end
    end
    if string.find(game:GetService("Workspace")["_WorldOrigin"].EnemySpawns:GetChildren()[1].Name, "Lv.") then
        for i, v in pairs(tablegetmob) do
            local b = v
            v = tostring(v:gsub(" %pLv. %d+%p", ""))
            if v == Name then
                return b
            end
        end
    else
        return Name
    end
end

function EnableBuso()
    if not plr.Character:FindFirstChild("HasBuso") then
        local args = {[1] = "Buso"}
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    end
end

function CheckEnemies(muahahahah)
    if game.Workspace.Enemies:FindFirstChild(muahahahah) then
        if v:FindFirstChild("Humanoid") then
            for i, v in pairs(game.Workspace.Enemies:GetChildren()) do
                if v.Name == muahahahah and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                    return v
                end
            end
        end
    end
end

function CheckBoss(Han)
    if game:GetService("ReplicatedStorage"):FindFirstChild(Han) then
        for r, v in pairs(game:GetService("ReplicatedStorage"):GetChildren()) do
            if v.Name == Han and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                return v
            end
        end
    end
    if game.Workspace.Enemies:FindFirstChild(Han) then
        for r, v in pairs(game.Workspace.Enemies:GetChildren()) do
            if v.Name == Han and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                return v
            end
        end
    end
end

function CheckEnemy(A)
    if game:GetService("ReplicatedStorage"):FindFirstChild(A) then
        for r, v in pairs(game:GetService("ReplicatedStorage"):GetChildren()) do
            if v.Name == A and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                return v
            end
        end
    end
    if game.Workspace.Enemies:FindFirstChild(A) then
        for r, v in pairs(game.Workspace.Enemies:GetChildren()) do
            if v.Name == A and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                return v
            end
        end
    end
end

function CheckQuestVisible()
    if plr.PlayerGui.Main.Quest.Visible == true then
        return true
    end
    return false
end

function CheckTextQuest(Tit)
    if string.find(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, Tit) then
        return true
    end
    return false
end

function EquipTool(Tls)
    local tool = game.Players.LocalPlayer.Backpack:FindFirstChild(Tls)
    if tool then
        wait(0.5)
        game.Players.LocalPlayer.Character.Humanoid:EquipTool(tool)
    end
end

function Click()
    local bc = game:GetService("VirtualUser")
    bc:CaptureController()
    bc:ClickButton1(Vector2.new(851, 158), game:GetService("Workspace").Camera.CFrame)
end

function CheckInventory(OiOiOi)
    for k, v in pairs(game:GetService("ReplicatedStorage").Remotes["CommF_"]:InvokeServer("getInventory")) do
        if v.Name == OiOiOi then
            return v
        end
    end
end

function GetSwordInventory(cac)
    for i,v in pairs(Rc.Remotes.CommF_:InvokeServer("getInventory")) do
        if type(v) == "table" then
            if v.Type == "Sword" then
                if v.Name == cac then
                    if not (plr.Backpack:FindFirstChild(v.Name) or plr.Character:FindFirstChild(v.Name)) then
                        repeat Rc.Remotes.CommF_:InvokeServer("LoadItem",v.Name) wait(2) until plr.Backpack:FindFirstChild(v.Name) or plr.Character:FindFirstChild(v.Name)
                    end
                end
            end
        end
    end
end

local MobElite = {
    "Urban",
    "Diablo",
    "Deandre"
}

function GetElite()
    for i, v in pairs(WS.Enemies:GetChildren()) do
        if table.find(MobElite, v.Name) then
            if v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v.Parent and v:FindFirstChild("HumanoidRootPart") then
                return v
            end
        end
    end
    for i, v in pairs(Rc:GetChildren()) do
        if table.find(MobElite, v.Name) then
            if v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v.Parent and v:FindFirstChild("HumanoidRootPart") then
                return v
            end
        end
    end
end

function DeleteLava()
    for i,v in pairs(WS:GetDescendants()) do
        if v.Name == "Lava" then   
            v:Destroy()
        end
    end
    for i,v in pairs(Rc:GetDescendants()) do
        if v.Name == "Lava" then   
            v:Destroy()
        end
    end
end
function CheckGlassInCakeIsland()
    if game:GetService("Workspace").Map.CakeLoaf.BigMirror.Other.Transparency == 1 then
        return true
    end
    return false
end
function CheckReplicatedStorage(Mn)
    for i, v in pairs(game.ReplicatedStorage:GetChildren()) do
        if v.Name == Mn then
            return v
        end
    end
end
function GetWP(buoif)
    Nahfck = ""
    for i, v in pairs(plr.Backpack:GetChildren()) do
        if v:IsA("Tool") and v.ToolTip == buoif then
            Nahfck = v.Name
        end
    end
    for i, v in pairs(plr.Character:GetChildren()) do
        if v:IsA("Tool") and v.ToolTip == buoif then
            Nahfck = v.Name
        end
    end
    return Nahfck
end
function GetItemInventory(bj)
    for k, v in pairs(game:GetService("ReplicatedStorage").Remotes["CommF_"]:InvokeServer("getInventory")) do
        if v["Name"] == bj then
            return v["Count"]
        end
    end
    return 0
end
function EquipWeapon(Giet)
    if _G.S.SelectTool == "" or _G.S.SelectTool == nil then
        _G.S.SelectTool = "Melee"
    end
    Giet = GetWP(_G.S.SelectTool)
    local bucac = game.Players.LocalPlayer.Backpack:FindFirstChild(Giet)
    if bucac then
        game.Players.LocalPlayer.Character.Humanoid:EquipTool(bucac)
    end
end

function SendKey(c9, ca)
    if ca == nil then
        game:service("VirtualInputManager"):SendKeyEvent(true, c9, false, game)
        wait()
        game:service("VirtualInputManager"):SendKeyEvent(false, c9, false, game)
    else
        game:service("VirtualInputManager"):SendKeyEvent(true, c9, false, game)
        wait(ca)
        game:service("VirtualInputManager"):SendKeyEvent(false, c9, false, game)
    end
end

local function StartDialog(DialogName)
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local DialogueController = require(ReplicatedStorage.DialogueController)
    local DialoguesList = require(ReplicatedStorage.DialoguesList)
    for Index, Dialog in pairs(DialoguesList) do
        if tostring(Index) == DialogName then
            DialogueController.Start(DialogueController, Dialog)
        end
    end
end

function TweenObject(TweenCFrame,obj,ts)
    if not ts then ts = 350 end
    local tween_s = game:GetService("TweenService")
    local info =
        TweenInfo.new(
        (TweenCFrame.Position -
            obj.Position).Magnitude /
            ts,
        Enum.EasingStyle.Linear
    )
    tween =
        tween_s:Create(
            obj,
        info,
        {CFrame = TweenCFrame}
    )
    tween:Play() 
end

function CheckBackpack(Item)
    for i, v in pairs(plr.Backpack:GetChildren()) do
        if v.Name == Item then
            return v
        end
    end
    for i, v in pairs(plr.Character:GetChildren()) do
        if v.Name == Item then
            return v
        end
    end
end

function MoonTextureId()
    if Sea1 then
        return game:GetService("Lighting").FantasySky.MoonTextureId
    elseif Sea2 then
        return game:GetService("Lighting").FantasySky.MoonTextureId
    elseif Sea3 then
        return game:GetService("Lighting").Sky.MoonTextureId
    end
end

function checkskillDF()
    if not plr.PlayerGui.Main.Skills:FindFirstChild(plr.Data.DevilFruit.Value) then
        equipweapon(plr.Data.DevilFruit.Value)
        return false
    end
    for r, v in next, plr.PlayerGui.Main.Skills[plr.Data.DevilFruit.Value]:GetChildren() do
        if v:IsA("Frame") then
            if
                v.Name ~= "Template" and v.Title.TextColor3 == Color3.new(1, 1, 1) and
                    v.Cooldown.Size == UDim2.new(0, 0, 1, -1) or
                    v.Cooldown.Size == UDim2.new(1, 0, 1, -1)
             then
                if v.Name ~= "F" and v.Name ~= "V" then
                    return v.Name
                end
            end
        end
    end
end
function checkskillSword()
    if not NameSword() then
        return
    end
    if not plr.PlayerGui.Main.Skills:FindFirstChild(NameSword()) then
        equipweapon(NameSword())
        return false
    end
    for r, v in next, plr.PlayerGui.Main.Skills[NameSword()]:GetChildren() do
        if v:IsA("Frame") then
            if
                v.Name ~= "Template" and v.Title.TextColor3 == Color3.new(1, 1, 1) and
                    v.Cooldown.Size == UDim2.new(0, 0, 1, -1) or
                    v.Cooldown.Size == UDim2.new(1, 0, 1, -1)
             then
                return v.Name
            end
        end
    end
end
function NameGun()
    dick = plr.Backpack or plr.Character
    for r, v in pairs(dick:GetChildren()) do
        if v:IsA("Tool") and v.ToolTip == "Gun" then
            return v.Name
        end
    end
end
function checkskillGun()
    if not NameGun() then
        return nil
    end
    if not plr.PlayerGui.Main.Skills:FindFirstChild(NameGun()) then
        equipweapon(NameGun())
        return false
    end
    for r, v in next, plr.PlayerGui.Main.Skills[NameGun()]:GetChildren() do
        if v:IsA("Frame") then
            if
                v.Name ~= "Template" and v.Title.TextColor3 == Color3.new(1, 1, 1) and
                    v.Cooldown.Size == UDim2.new(0, 0, 1, -1) or
                    v.Cooldown.Size == UDim2.new(1, 0, 1, -1)
             then
                return v.Name
            end
        end
    end
end
function equipweapon(aq)
    local c6 = tostring(aq)
    local c7 = plr.Backpack:FindFirstChild(c6)
    local c8 = plr.Character:FindFirstChild("Humanoid") or plr.Character:WaitForChild("Humanoid")
    if c7 then
        c8:EquipTool(c7)
    end
end
function checkskillMelee()
    if not plr.PlayerGui.Main.Skills:FindFirstChild(NameMelee()) then
        equipweapon(NameMelee())
        return false
    end
    for r, v in next, plr.PlayerGui.Main.Skills[NameMelee()]:GetChildren() do
        if v:IsA("Frame") then
            if
                v.Name ~= "Template" and v.Title.TextColor3 == Color3.new(1, 1, 1) and
                    v.Cooldown.Size == UDim2.new(0, 0, 1, -1) or
                    v.Cooldown.Size == UDim2.new(1, 0, 1, -1)
             then
                return v.Name
            end
        end
    end
end
function EquipWeaponName(m)
    if not m then
        return
    end
    ToolSe = m
    if plr.Backpack:FindFirstChild(ToolSe) then
        local bi = plr.Backpack:FindFirstChild(ToolSe)
        wait(.4)
        plr.Character.Humanoid:EquipTool(bi)
    end
end

function IsWpSKillLoaded(bW)
    if game:GetService("Players")["LocalPlayer"].PlayerGui.Main.Skills:FindFirstChild(bW) then
        return true
    end
end

function EquipAllWeapon()
    u3 = {"Melee", "Blox Fruit", "Sword", "Gun"}
    u3_2 = {}
    for r, v in pairs(u3) do
        u3_3 = GetWP(v)
        table.insert(u3_2, u3_3)
    end
    for r, v in pairs(u3_2) do
        if not IsWpSKillLoaded(v) then
            print(v)
            EquipWeaponName(v)
        end
    end
end

function SendKeyEvents(c9, ca)
    if ca == nil then
        game:service("VirtualInputManager"):SendKeyEvent(true, c9, false, game)
        wait()
        game:service("VirtualInputManager"):SendKeyEvent(false, c9, false, game)
    else
        game:service("VirtualInputManager"):SendKeyEvent(true, c9, false, game)
        wait(ca)
        game:service("VirtualInputManager"):SendKeyEvent(false, c9, false, game)
    end
end

spawn(
    function()
        while wait() do
            if SpamSkill then
                sword = checkskillSword()
                meele = checkskillMelee()
                df = checkskillDF()
                gun = checkskillGun()
                if
                    df and
                        not string.find(game:GetService("Players").LocalPlayer.Data.DevilFruit.Value, "Portal") and
                        df ~= "F"
                 then
                    EquipWeaponName(game:GetService("Players").LocalPlayer.Data.DevilFruit.Value)
                    local condimebeo = checkskillDF()
                    if condimebeo then
                        SendKeyEvents(condimebeo)
                    end
                elseif checkskillMelee() then
                    EquipWeaponName(NameMelee())
                    local condimebeo = checkskillMelee()
                    if condimebeo then
                        SendKeyEvents(condimebeo)
                    end
                elseif checkskillSword() then
                    EquipWeaponName(NameSword())
                    local condimebeo = checkskillSword()
                    if condimebeo then
                        SendKeyEvents(condimebeo)
                    end
                elseif checkskillGun() then
                    local condimebeo = checkskillGun()
                    EquipWeaponName(NameGun())
                    if condimebeo then
                        SendKeyEvents(condimebeo)
                    end
                else
                    EquipAllWeapon()
                end
            end
        end
    end
)

function BringMob(vvvv)
    for i, v in pairs(game.Workspace.Enemies:GetChildren()) do
        if
            v.Name == vvvv and v.Parent and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 and
                (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <=
                300
         then
            v.HumanoidRootPart.CFrame = cac
            v.Humanoid.JumpPower = 0
            v.Humanoid.WalkSpeed = 0
            v.HumanoidRootPart.Transparency = 1
            v.HumanoidRootPart.CanCollide = false
            v.Head.CanCollide = false
            if v.Humanoid:FindFirstChild("Animator") then
                v.Humanoid.Animator:Destroy()
            end
            v.Humanoid:ChangeState(11)
        end
    end
end

function GetShip()
    for i, v in pairs(game.Workspace.Boats:GetChildren()) do
        if v:FindFirstChild("Owner") then
            if v:FindFirstChild("Owner").Value == plr then
                return v
            end
        end
    end
end

function CheckQuestCompleted()
    for a, a in pairs(
        game:GetService("Players")["LocalPlayer"].PlayerGui:FindFirstChild("Notifications"):GetChildren()
    ) do
        if a.Name == "NotificationTemplate" then
            if string.lower(a.Text):find("quest completed") then
                return true
            end
        end
    end
    return false
end

game:GetService("RunService").RenderStepped:connect(function()
    sethiddenproperty(plr, "SimulationRadius", math.huge)
end)

function KillEnemy(v, Bring, S)
    a = CheckEnemies(v)
    if a:FindFirstChild("Humanoid") and a.Humanoid.Health > 0 and a.Parent and a:FindFirstChild("HumanoidRootPart") and S then
        repeat task.wait()
            EnableBuso()
            if _G.S.OnlyV4 and _G.S.Auto600MasteryAll then
                if plr.Character.RaceTransformed.Value then
                    Fuck = GetWP("Sword")
                    EquipTool(Fuck)
                else
                    EquipWeapon()
                end
            else
                EquipWeapon()
            end
            Tween(a.HumanoidRootPart.CFrame * CFrame.new(2, 20, 2))
            cac = a.HumanoidRootPart.CFrame
            a.HumanoidRootPart.CFrame = cac
            a.Humanoid.JumpPower = 0
            a.Humanoid.WalkSpeed = 0
            a.HumanoidRootPart.Transparency = 1
            a.HumanoidRootPart.CanCollide = false
            a.Head.CanCollide = false
            if Bring == nil or Bring == true then
                BringMob(v)
            end
            FastNCooldown = true
            NoClip = true
        until a.Humanoid.Health <= 0 or not a.Parent or not a:FindFirstChild("HumanoidRootPart") or not S
        NoClip = false
        FastNCooldown = false
    end
end

function CheckSafeZone(Players)
    for i,v in pairs(game:GetService("Workspace")["_WorldOrigin"].SafeZones:GetChildren()) do
        if v:IsA("Part") then
            if (v.Position - Players.HumanoidRootPart.Position).Magnitude <= 400 and Players.Humanoid.Health > 0 then
                return true
            end
        end
    end
    return false
end

function KillEnemyXa(v, Bring, S)
    a = CheckBoss(v)
    if a:FindFirstChild("Humanoid") and a.Humanoid.Health > 0 and a.Parent and a:FindFirstChild("HumanoidRootPart") and S then
        repeat task.wait()
            EnableBuso()
            if _G.S.OnlyV4 and _G.S.Auto600MasteryAll then
                if plr.Character.RaceTransformed.Value then
                    Fuck = GetWP("Sword")
                    EquipTool(Fuck)
                else
                    EquipWeapon()
                end
            else
                EquipWeapon()
            end
            Tween(a.HumanoidRootPart.CFrame * CFrame.new(2, 20, 2))
            cac = a.HumanoidRootPart.CFrame
            a.HumanoidRootPart.CFrame = cac
            a.Humanoid.JumpPower = 0
            a.Humanoid.WalkSpeed = 0
            a.HumanoidRootPart.Transparency = 1
            a.HumanoidRootPart.CanCollide = false
            a.Head.CanCollide = false
            if Bring == nil or Bring == true then
                BringMob(v)
            end
            FastNCooldown = true
            NoClip = true
        until a.Humanoid.Health <= 0 or not a.Parent or not a:FindFirstChild("HumanoidRootPart") or not S
        NoClip = false
        FastNCooldown = false
    end
end

spawn(
    function()
        while wait() do
            if
            NoClip == true
     then
        if not plr.Character.Head:FindFirstChild("BodyClip") then
            local bv = Instance.new("BodyVelocity")
            bv.Name = "BodyClip"
            bv.Velocity = Vector3.new(0, 0, 0)
            bv.MaxForce = Vector3.new(9999999, 9999999, 9999999)
            bv.P = 15000
            bv.Parent = plr.Character.Head
        end
        for i, v in pairs(plr.Character:GetDescendants()) do
            if v:IsA("BasePart") then
                v.CanCollide = false
            end
        end
    else
        if plr.Character.Head:FindFirstChild("BodyClip") then
            plr.Character.Head:FindFirstChild("BodyClip"):Destroy()
        end
        plr.Character.Humanoid:ChangeState()
    end
        end
    end
)

function CheckFruit()
    for i, v in pairs(plr.Backpack:GetChildren()) do
        if string.find(v.Name, "Fruit") then
            return v
        end
    end
    for i, v in pairs(plr.Character:GetChildren()) do
        if string.find(v.Name, "Fruit") then
            return v
        end
    end 
end

function DisableTween(aL)
    if not aL then
        NoClip = false
        if plr.Character.Head:FindFirstChild("BodyClip") then
            plr.Character.Head:FindFirstChild("BodyClip"):Destroy()
        end
        if plr.Character.Head:FindFirstChild("PartTele") then
            plr.Character.Head:FindFirstChild("PartTele"):Destroy()
        end
        CancelTween()
        return Tween(plr.Character.HumanoidRootPart.CFrame)
    end
end

CountQuestKill = 0
function KillPlayers()
    if not CheckQuestVisible() then
        game.ReplicatedStorage.Remotes["CommF_"]:InvokeServer("PlayerHunter")
        CountQuestKill = CountQuestKill + 1
    elseif CheckQuestVisible() then
        local Cac = string.gsub(game:GetService("Players").LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "Defeat ", "")
        Cac = string.gsub(Cac, " %p(0/1)%p", "")
        if CheckQuestVisible() and not game:GetService("Workspace").Characters:FindFirstChild(Cac) then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AbandonQuest")
        end
        if game.Players[Cac].Data.Level.Value < 20 or game.Players[Cac].Data.Level.Value <= (YourLevel - 150) or game.Players[Cac].Data.Level.Value >= (YourLevel + 150) then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("AbandonQuest")
            print(game.Players[Cac].Data.Level.Value)
        end
        if CountQuestKill >= 15 then
            HopServer("Find New Players Hunter")
        end
        if game:GetService("Players").LocalPlayer.PlayerGui.Main:FindFirstChild("Quest").Visible then
            for r, v in next, game:GetService("Workspace").Characters:GetChildren() do
                if v:IsA("Model") and v.Name == Cac then
                    if CheckTextQuest(v.Name) then
                        if v:FindFirstChild("Humanoid") then
                            if game:GetService("Players").LocalPlayer.PlayerGui.Main.PvpDisabled.Visible == false then
                                repeat wait()
                                    EquipWeapon()
                                    EnableBuso()                                            
                                    v.HumanoidRootPart.Size = Vector3.new(30, 30, 30)
                                    Tween(v.HumanoidRootPart.CFrame * CFrame.new(2, 2, 2))
                                    NoClip = true
                                    if (v.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).Magnitude <= 10 then
                                        SendKey("Z")
                                        SendKey("X")
                                        _G.S.FastAttack = false
                                        game:GetService "VirtualUser":CaptureController()
                                        game:GetService "VirtualUser":Button1Down(Vector2.new(1280, 672))
                                    end
                                until game:GetService("Players").LocalPlayer.PlayerGui.Main.PvpDisabled.Visible == true or v.Humanoid.Health <= 0 or not v.Parent or plr.Character.Humanoid.Health <= 0
                                NoClip = false
                                _G.S.FastAttack = true
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("EnablePvp")
                            elseif game:GetService("Players").LocalPlayer.PlayerGui.Main.PvpDisabled.Visible == true then
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("EnablePvp")
                            end
                        end
                    end
                end
            end
        end
    end
end

local gg = getrawmetatable(game)
local old = gg.__namecall
setreadonly(gg, false)
gg.__namecall =
    newcclosure(
    function(...)
        local method = getnamecallmethod()
        local args = {...}
        if tostring(method) == "FireServer" then
            if tostring(args[1]) == "RemoteEvent" then
                if tostring(args[2]) ~= "true" and tostring(args[2]) ~= "false" then
                    if AimSkills then
                        args[2] = AimPos
                        return old(unpack(args))
                    end
                end
            end
        end
        return old(...)
    end
)

local Windows = Library:CreateWindow({Title = 'Sitinks Hub'})

function notify(a, b ,c)
    Library:Notify({
        Title = a,
        Description = b,
        Time = c
    })
end

local S = Windows:CreateTab({Name = 'Shop'})
local T = Windows:CreateTab({Name = 'Settings Farm'})
local F = Windows:CreateTab({Name = 'Stack Auto Farm'})
local B = Windows:CreateTab({Name = 'Sub Farmming'})
local G = Windows:CreateTab({Name = 'Get Item'})
local R = Windows:CreateTab({Name = 'Upgraded Race'})

S:CreateSection({Text = 'World'})

S:CreateButton({
    Name = "Teleport Old World",
    Description = "",
    CallBack = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelMain")
    end
})

S:CreateButton({
    Name = "Teleport New World",
    Description = "",
    CallBack = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelDressrosa")
    end
})

S:CreateButton({
    Name = "Teleport Third Sea",
    Description = "",
    CallBack = function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelZou")
    end
})

T:CreateSection({Text = 'Skills Turning'})

T:CreateToggle({
    Name = "Turn Race V4",
    Description = "Auto Turn Race V4 If Can Awakening",
    Default = _G.S.Turnv4,
    Settings = false,
    CallBack = function(Value)
        _G.S.Turnv4 = Value
        SaveSettings()
    end
})

T:CreateToggle({
    Name = "Auto Buso",
    Description = "Auto Enabled Buso Haki",
    Default = true,
    Settings = false,
    CallBack = function(Value)
        _G.AutoBuso = Value
    end
})

T:CreateToggle({
    Name = "Auto Observation",
    Description = "Auto Turn Observation Haki",
    Default = false,
    Settings = false,
    CallBack = function(Value)
        _G.S.AutoTurnObservation = Value
        SaveSettings()
    end
})

spawn(function()
    while wait() do
        if _G.S.AutoTurnObservation then
            if not plr.PlayerGui.ScreenGui:FindFirstChild("ImageLabel") then
                SendKey("E")
                task.wait(3)
            end
        end
        if _G.AutoBuso then
            if not plr.Character:FindFirstChild("HasBuso") then
                EnableBuso()
            end
        end
        if _G.S.Turnv4 then
            if plr.Character:FindFirstChild("RaceEnergy") and plr.Character.RaceEnergy.Value >= 1 and not plr.Character.RaceTransformed.Value then
                SendKey("Y")
            end
        end
    end
end)

T:CreateSection({Text = 'Farm Settings'})

local ToggleFastATtack = T:CreateToggle({
    Name = "Enable FastAttack",
    Description = "FastAttack very mups and useful",
    Default = true,
    Settings = false,
    CallBack = function(Value)
        _G.Shitverybig = Value
    end
})

T:CreateDropdown({
    Name = "FastAttack Delay",
    Description = "Delay Attack",
    Options = {"0.1", "0.2", "0.3"},
    Default = _G.S.SelectDelay,
    CallBack = function(Value)
        _G.S.SelectDelay = Value
        SaveSettings()
    end
})

spawn(function()
    while task.wait() do
        if _G.S.SelectDelay then
            if _G.S.SelectDelay == "0.1" then
                _G.S.DelayAttack = 100
                _G.S.TimeWait = 0
            elseif _G.S.SelectDelay == "0.2" then
                _G.S.DelayAttack = 80
                _G.S.TimeWait = 10
            elseif _G.S.SelectDelay == "0.3" then
                _G.S.DelayAttack = 70
                _G.S.TimeWait = 20
            end
        end
    end
end)

function AttackFunction()
    Fastbeo:Attack()
end
function Click()
    local bc = game:GetService("VirtualUser")
    bc:CaptureController()
    bc:ClickButton1(Vector2.new(851, 158), game:GetService("Workspace").Camera.CFrame)
end
spawn(
    function()
        while task.wait() do
            if FastNCooldown then
                Fastbeo:InputSetting(_G.S)
                Fastbeo:InputValue(_G.S.DelayAttack, _G.S.TimeWait)
                Fastbeo:Attack(true)
            else
                Fastbeo:Attack(false)
            end
        end
    end
)

task.spawn(function()
    while task.wait() do
        if _G.Shitverybig then
            for i, v in pairs(game.Workspace.Enemies:GetChildren()) do
                if v:FindFirstChild("Humanoid") then
                    if v.Humanoid.Health > 0 then
                        if (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 100 then
                            repeat task.wait()
                                FastNCooldown = true
                                Click()
                            until v.Humanoid.Health <= 0 or not v:FindFirstChild("Humanoid") or (v.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).Magnitude > 100
                            FastNCooldown = false
                        end
                    end
                end
            end
        end
    end
end)

task.spawn(function()
    while task.wait() do
        if _G.Shitverybig then
            for i, v in pairs(game.Workspace.Characters:GetChildren()) do
                if v:FindFirstChild("Humanoid") then
                    if v.Humanoid.Health > 0 and v.Name ~= plr.Name then
                        if (v.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 100 then
                            repeat task.wait()
                                FastNCooldown = true
                                Click()
                            until v.Humanoid.Health <= 0 or not v:FindFirstChild("Humanoid") or (v.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).Magnitude > 100
                            FastNCooldown = false
                        end
                    end
                end
            end
        end
    end
end)
local BypassToggle = T:CreateToggle({
    Name = "Bypass Teleport",
    Description = "Bypass To New CFrame Fast And Safety",
    Default = _G.S.BypassTele,
    Settings = true,
    CallBack = function(Value)
        _G.S.BypassTele = Value
        SaveSettings()
    end
})

BypassToggle:CreateToggle({
    Name = "No Bypass If Have God's Chalice Or Fist Of Darkness",
    Default = _G.S.NoBypassIfHaveItem,
    CallBack = function(Value)
        _G.S.NoBypassIfHaveItem = Value
        SaveSettings()
    end
})

F:CreateSection({Text = 'Select Tool'})

local ToggleSelectTool = F:CreateDropdown({
    Name = "Select Tool",
    Description = "Select Tool To Farm",
    Options = {"Melee", "Sword"},
    Default = _G.S.SelectTool,
    CallBack = function(Value)
        _G.S.SelectTool = Value
        SaveSettings()
    end
})

F:CreateSection({Text = 'Settings'})

StatsOptions = {"Melee", "Defense", "Sword", "Gun", "Demon Fruit"}
F:CreateDropdown({
    Name = "Select Stats",
    Description = "",
    Options = StatsOptions,
    Default = _G.S.Stats,
    CallBack = function(Value)
        _G.S.Stats = Value
        SaveSettings()
    end
})

spawn(
    function()
        while wait() do
            if _G.S.Stats then
                local args = {
                    [1] = "AddPoint",
                    [2] = _G.S.Stats,
                    [3] = 9999
                }
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            end
        end
    end
)

local tatcacode = {
    "Sub2UncleKizaru",
    "NEWTROLL",
    "SUB2NOOBMASTER123",
    "StrawHatMaine",
    "Sub2OfficialNoobie",
    "Sub2NoobMaster123",
    "SUB2GAMERROBOT_EXP1",
    "SUB2GAMERROBOT_RESET1",
    "THEGREATACE",
    "BIGNEWS",
    "FUDD10",
    "fudd10_v2",
    "Bluxxy",
    "Starcodeheo",
    "JCWK",
    "SUB2CAPTAINMAUI",
    "Magicbus",
    "Sub2Fer999",
    "kittgaming",
    "GAMERROBOT",
    "SUBGAMERROBOT",
    "ADMINGIVEAWAY",
    "KITT_RESET",
    "SECRET_ADMIN",
    "Sub2Daigrock",
    "Axiore",
    "TantaiGaming"
}

F:CreateButton({
    Name = "Redeem All Codes",
    Description = "",
    CallBack = function()
        for i, v in pairs(tatcacode) do
            game:GetService("ReplicatedStorage").Remotes.Redeem:InvokeServer(v)
        end
    end
})

F:CreateButton({
    Name = "Boost FPS",
    Description = "",
    CallBack = function()
        for i, v in pairs(game.Workspace.Map:GetDescendants()) do
            if
                v.Name == "Tavern" or v.Name == "SmileFactory" or v.Name == "Tree" or v.Name == "Rocks" or
                    v.Name == "PartHouse" or
                    v.Name == "Hotel" or
                    v.Name == "Walplriece" or
                    v.Name == "MiddlePillars" or
                    v.Name == "Cloud" or
                    v.Name == "PluginGrass" or
                    v.Name == "BigHouse" or
                    v.Name == "SmallHouse" or
                    v.Name == "Detail"
             then
                v:Destroy()
            end
        end
        for i, v in pairs(game.ReplicatedStorage.Unloaded:GetDescendants()) do
            if
                v.Name == "Tavern" or v.Name == "SmileFactory" or v.Name == "Tree" or v.Name == "Rocks" or
                    v.Name == "PartHouse" or
                    v.Name == "Hotel" or
                    v.Name == "Walplriece" or
                    v.Name == "MiddlePillars" or
                    v.Name == "Cloud" or
                    v.Name == "PluginGrass" or
                    v.Name == "BigHouse" or
                    v.Name == "SmallHouse" or
                    v.Name == "Detail"
             then
                v:Destroy()
            end
        end
        for i, v in pairs(plr.Character:GetDescendants()) do
            if v:IsA("Accessory") or v.Name == "Pants" or v.Name == "Shirt" then
                v:Destroy()
            end
        end
        local decalsyeeted = true -- Leaving this on makes games look shitty but the fps goes up by at least 20.
        local g = game
        local w = g.Workspace
        local l = g.Lighting
        local t = w.Terrain
        t.WaterWaveSize = 0
        t.WaterWaveSpeed = 0
        t.WaterReflectance = 0
        t.WaterTransparency = 0
        l.GlobalShadows = false
        l.FogEnd = 9e9
        l.Brightness = 0
        settings().Rendering.QualityLevel = "Level01"
        for i, v in pairs(g:GetDescendants()) do
            if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
            elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
                v.Transparency = 1
            elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                v.Lifetime = NumberRange.new(0)
            elseif v:IsA("Explosion") then
                v.BlastPressure = 1
                v.BlastRadius = 1
            elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
                v.Enabled = false
            elseif v:IsA("MeshPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
                v.TextureID = 10385902758728957
            end
        end
        for i, e in pairs(l:GetChildren()) do
            if
                e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or
                    e:IsA("BloomEffect") or
                    e:IsA("DepthOfFieldEffect")
             then
                e.Enabled = false
            end
        end
    end
})

F:CreateButton({
    Name = "Cancel Tween",
    Description = "",
    CallBack = function()
        DisableTween(A)
    end
})

F:CreateSection({Text = 'Farm'})

local DropdownMethod = F:CreateDropdown({
    Name = "Select Method Farm",
    Description = "Select Method Farm < Cake Prince > or < Level > or < Bone >",
    Options = {"Level", "Cake Prince", "Bone"},
    Default = _G.S.SelectMethodFarm,
    CallBack = function(Value)
        _G.S.SelectMethodFarm = Value
        SaveSettings()
    end
})

local ToggleStartFarm = F:CreateToggle({
    Name = "Start Farm",
    Description = "Start Farm Mode Farm Your Selected",
    Default = _G.S.StartFarm,
    Settings = true,
    CallBack = function(Value)
        _G.S.StartFarm = Value
        SaveSettings()
        DisableTween(_G.S.StartFarm)
    end
})

ToggleStartFarm:CreateToggle({
    Name = "Double Quest",
    Default = _G.S.DoubleQuest,
    CallBack = function(Value)
        _G.S.DoubleQuest = Value
        SaveSettings()
   end
})

ToggleStartFarm:CreateToggle({
    Name = "Accept Quest",
    Default = _G.S.AcceptQuest,
    CallBack = function(Value)
        _G.S.AcceptQuest = Value
        SaveSettings()
   end
})

ToggleStartFarm:CreateToggle({
    Name = "Not Summon Cake Prince",
    Default = _G.S.SummonCakePrince,
    CallBack = function(Value)
        _G.S.SummonCakePrince = Value
        SaveSettings()
   end
})

local MobCakePrince = {
    "Baking Staff",
    "Cookie Crafter",
    "Cake Guard",
    "Head Baker"
}

local HauntedCastleMob = {
    "Reborn Skeleton",
    "Posessed Mummy",
    "Living Zombie",
    "Demonic Soul",
}

spawn(function()
    while wait() do
        if _G.S.StartFarm and not _G.S.SummonCakePrince and _G.S.SelectMethodFarm == "Cake Prince" then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CakePrinceSpawner", false)
        elseif _G.S.SummonCakePrince == false then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CakePrinceSpawner", true)
        end
    end
end)

StackFarm = true
function StackFunc()
    if _G.S.AutoBartilo and plr.Data.Level.Value >= 850 and game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BartiloQuestProgress","Bartilo") == 3 and Sea2 then StackFarm = false return end  
    if _G.S.AutoSea2 and plr.Data.Level.Value >= 700 and game.ReplicatedStorage.Remotes.CommF_:InvokeServer("DressrosaQuestProgress", "Dressrosa") ~= 0 and Sea1 then StackFarm = false return end 
    if _G.S.AutoDarkbruhbruh and Sea2 and CheckEnemy("Darkbeard") then StackFarm = false return end
    if _G.S.AutoPole and CheckEnemy("Thunder God") and Sea1 then StackFarm = false return end
    if _G.S.AutoSaber and not CheckInventory("Saber") and Sea1 then StackFarm = false return end
    if _G.S.AutoElite and GetElite() and Sea3 then StackFarm = false return end
    if _G.S.AutoFactory and CheckEnemy("Core") and Sea2 then StackFarm = false return end
    if _G.S.AutoCastle and Sea3 then StackFarm = false return end
    StackFarm = true
end

spawn(function()
    while wait() do
        if _G.S.StartFarm then
            StackFunc()
        end
    end
end)

function MethodFarm()
    if not StackFarm then
        return
    end
    if _G.S.SelectMethodFarm == "Level" then
        if plr.Data.Level.Value >= 1 and plr.Data.Level.Value <= 29 then
            if CheckEnemies("Sky Bandit") then
                repeat wait()
                    KillEnemy("Sky Bandit", true, _G.S.StartFarm)
                until not CheckEnemies("Sky Bandit") or _G.S.StartFarm == false or plr.Data.Level.Value >= 30
            else
                NoClip = true
                Byp(CFrame.new(-4953.20703125, 295.74420166015625, -2899.22900390625))
            end
        elseif plr.Data.Level.Value >= 30 and plr.Data.Level.Value <= 49 then
            if CheckEnemies("Shanda") then
                repeat wait()
                    KillEnemy("Shanda", true, _G.S.StartFarm)
                until not CheckEnemies("Shanda") or _G.S.StartFarm == false or plr.Data.Level.Value >= 50
            else
                NoClip = true
                Tween(CFrame.new(-7678.48974609375, 5566.40380859375, -497.2156066894531))
            end
        elseif plr.Data.Level.Value >= 50 and plr.Data.Level.Value <= 299 then
            if not CheckQuestCompleted() then
                KillPlayers()
            else
                if CheckEnemies("Shanda") then
                    repeat wait()
                        KillEnemy("Shanda", true, _G.S.StartFarm)
                    until not CheckEnemies("Shanda") or _G.S.StartFarm == false or plr.Data.Level.Value >= 300
                else
                    NoClip = true
                    Tween(CFrame.new(-7678.48974609375, 5566.40380859375, -497.2156066894531))
                end
            end
        elseif plr.Data.Level.Value >= 300 then
            if CheckQuestVisible() then
                if MobLevel1OrMobLevel2() then
                    for i, v in pairs(WS.Enemies:GetChildren()) do
                        if v.Name == MobLevel1OrMobLevel2() then
                            if v.Humanoid.Health > 0 and v.Parent and v:FindFirstChild("HumanoidRootPart") then
                                repeat wait()
                                    KillEnemy(v.Name, true, _G.S.StartFarm)
                                until v.Humanoid.Health <= 0 or not v.Parent or not v:FindFirstChild("HumanoidRootPart") or not CheckQuestVisible() or _G.S.StartFarm == false
                            end
                        end
                    end
                elseif not MobLevel1OrMobLevel2() then
                    cac = GetMobSpawnList(GetMob())
                    for i, v in pairs(cac) do
                        NoClip = true
                        Tween(v.CFrame * CFrame.new(2, 20, 2))
                    end
                end
            else
                GetQuest()
            end
        end
    elseif _G.S.SelectMethodFarm == "Cake Prince" and Sea3 then
        if not CheckGlassInCakeIsland() then
            if CheckBoss("Cake Prince") then
                repeat wait()
                    KillEnemyXa("Cake Prince", false, _G.S.StartFarm)
                until not CheckBoss("Cake Prince") or CheckGlassInCakeIsland() or not _G.S.StartFarm
            end
        elseif CheckGlassInCakeIsland() then
            if _G.S.AcceptQuest then
                if not CheckQuestVisible() or not CheckTextQuest("Cookie Crafter") then
                    if CheckDistance(CFrame.new(-2020.6177978515625, 37.793975830078125, -12029.17578125)) <= 10 then
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StartQuest", "CakeQuest1", 1)
                    else
                        if _G.S.BypassTele then
                            Byp(CFrame.new(-2020.6177978515625, 37.793975830078125, -12029.17578125))
                        else
                            Tween(CFrame.new(-2020.6177978515625, 37.793975830078125, -12029.17578125))
                        end
                    end
                elseif CheckQuestVisible() and CheckTextQuest("Cookie Crafter") then
                    if not CheckBoss("Cake Prince") then
                        if CheckEnemies("Baking Staff") or CheckEnemies("Cookie Crafter") or CheckEnemies("Cake Guard") or CheckEnemies("Head Baker") then
                            for i, v in pairs(WS.Enemies:GetChildren()) do
                                if table.find(MobCakePrince, v.Name) then
                                    if v.Humanoid.Health > 0 and v.Parent and v:FindFirstChild("HumanoidRootPart") then
                                        repeat wait()
                                            KillEnemy(v.Name, true, _G.S.StartFarm)
                                        until v.Humanoid.Health <= 0 or not v.Parent or not v:FindFirstChild("HumanoidRootPart") or not CheckGlassInCakeIsland() or CheckBoss("Cake Prince") or _G.S.StartFarm
                                    end
                                end
                            end
                        else
                            if _G.S.BypassTele then
                                Byp(CFrame.new(-2020.6177978515625, 37.793975830078125, -12029.17578125))
                            else
                                Tween(CFrame.new(-2020.6177978515625, 37.793975830078125, -12029.17578125))
                            end
                        end
                    end
                end
            elseif not _G.S.AcceptQuest then
                if not CheckBoss("Cake Prince") then
                    if CheckEnemies("Baking Staff") or CheckEnemies("Cookie Crafter") or CheckEnemies("Cake Guard") or CheckEnemies("Head Baker") then
                        for i, v in pairs(WS.Enemies:GetChildren()) do
                            if table.find(MobCakePrince, v.Name) then
                                if v.Humanoid.Health > 0 and v.Parent and v:FindFirstChild("HumanoidRootPart") then
                                    repeat wait()
                                        KillEnemy(v.Name, true, _G.S.StartFarm)
                                    until v.Humanoid.Health <= 0 or not v.Parent or not v:FindFirstChild("HumanoidRootPart") or not CheckGlassInCakeIsland() or CheckBoss("Cake Prince") or _G.S.StartFarm
                                end
                            end
                        end
                    else
                        if _G.S.BypassTele then
                            Byp(CFrame.new(-2020.6177978515625, 37.793975830078125, -12029.17578125))
                        else
                            Tween(CFrame.new(-2020.6177978515625, 37.793975830078125, -12029.17578125))
                        end
                    end
                end
            end
        end
    elseif _G.S.SelectMethodFarm == "Bone" and Sea3 then
        if _G.S.AcceptQuest then
            if not CheckQuestVisible() or not CheckTextQuest("Posessed Mummy") then
                if CheckDistance(CFrame.new(-9516.99316, 172.017181, 6078.46533, 0, 0, -1, 0, 1, 0, 1, 0, 0)) <= 10 then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StartQuest", "HauntedQuest2", 2)
                else
                    if _G.S.BypassTele then
                        Byp(CFrame.new(-9516.99316, 172.017181, 6078.46533, 0, 0, -1, 0, 1, 0, 1, 0, 0))
                    else
                        Tween(CFrame.new(-9516.99316, 172.017181, 6078.46533, 0, 0, -1, 0, 1, 0, 1, 0, 0))
                    end
                end
            elseif CheckQuestVisible() and CheckTextQuest("Posessed Mummy") then
                if CheckEnemies("Reborn Skeleton") or CheckEnemies("Living Zombie") or CheckEnemies("Demonic Soul") or CheckEnemies("Posessed Mummy") then
                    for i, v in pairs(WS.Enemies:GetChildren()) do
                        if table.find(HauntedCastleMob, v.Name) then
                            if v.Humanoid.Health > 0 and v.Parent and v:FindFirstChild("HumanoidRootPart") then
                                repeat wait()
                                    KillEnemy(v.Name, true, _G.S.StartFarm)
                                until v.Humanoid.Health <= 0 or not v.Parent or not v:FindFirstChild("HumanoidRootPart") or _G.S.StartFarm == false
                            end
                        end                
                    end
                else
                    if _G.S.BypassTele then
                        Byp(CFrame.new(-9516.99316, 172.017181, 6078.46533, 0, 0, -1, 0, 1, 0, 1, 0, 0))
                    else
                        Tween(CFrame.new(-9516.99316, 172.017181, 6078.46533, 0, 0, -1, 0, 1, 0, 1, 0, 0))
                    end
                end
            end
        else
            if CheckEnemies("Reborn Skeleton") or CheckEnemies("Living Zombie") or CheckEnemies("Demonic Soul") or CheckEnemies("Posessed Mummy") then
                for i, v in pairs(WS.Enemies:GetChildren()) do
                    if table.find(HauntedCastleMob, v.Name) then
                        if v.Humanoid.Health > 0 and v.Parent and v:FindFirstChild("HumanoidRootPart") then
                            repeat wait()
                                KillEnemy(v.Name, true, _G.S.StartFarm)
                            until v.Humanoid.Health <= 0 or not v.Parent or not v:FindFirstChild("HumanoidRootPart") or _G.S.StartFarm == false
                        end
                    end                
                end
            else
                if _G.S.BypassTele then
                    Byp(CFrame.new(-9516.99316, 172.017181, 6078.46533, 0, 0, -1, 0, 1, 0, 1, 0, 0))
                else
                    Tween(CFrame.new(-9516.99316, 172.017181, 6078.46533, 0, 0, -1, 0, 1, 0, 1, 0, 0))
                end
            end
        end
    end
end

function FarmLevel(shitdick)
    if CheckQuestVisible() then
        if MobLevel1OrMobLevel2() then
            for i, v in pairs(WS.Enemies:GetChildren()) do
                if v.Name == MobLevel1OrMobLevel2() then
                    if v.Humanoid.Health > 0 and v.Parent and v:FindFirstChild("HumanoidRootPart") then
                        repeat wait()
                            KillEnemy(v.Name, true, shitdick)
                        until v.Humanoid.Health <= 0 or not v.Parent or not v:FindFirstChild("HumanoidRootPart") or not CheckQuestVisible() or not shitdick
                    end
                end
            end
        elseif not MobLevel1OrMobLevel2() then
            cac = GetMobSpawnList(GetMob())
            for i, v in pairs(cac) do
                NoClip = true
                Tween(v.CFrame * CFrame.new(2, 20, 2))
            end
        end
    else
        GetQuest()
    end
end

spawn(function()
    while wait() do
        pcall(function()
            if _G.S.StartFarm then
                MethodFarm()
            end
        end)
    end
end)

local ToggleFarmNearest = F:CreateToggle({
    Name = "Kill Aura",
    Description = "Auto Kill Nearest Mob",
    Default = false,
    Settings = false,
    CallBack = function(Value)
        _G.KillNear = Value
        DisableTween(_G.KillNear)
    end
})

spawn(function()
    while wait() do
        if _G.KillNear then
            for i,v in pairs(WS.Enemies:GetChildren()) do
                if v.Humanoid.Health > 0 and v.Parent and v:FindFirstChild("HumanoidRootPart") then
                    if CheckDistance(v.HumanoidRootPart) <= 1000 then
                        repeat wait()
                            KillEnemy(v.Name, true, _G.KillNear)
                        until not v.Parent or v.Humanoid.Health <= 0 or not v:FindFirstChild("HumanoidRootPart") or not _G.KillNear
                    end
                end
            end
        end
    end
end)

F:CreateSection({Text = 'Sword Mastery'})

function CheckMasTool(NameWP)
    for i,v in pairs(plr.Backpack:GetChildren()) do
        if v.ToolTip == NameWP then
            return v.Level.Value
        end
    end
end

function ChangeSword()
    for i,v in pairs(Rc.Remotes.CommF_:InvokeServer("getInventory")) do
        if type(v) == "table" then
            if v.Type == "Sword" and v.Mastery >= 600 then
                if not (plr.Backpack:FindFirstChild(v.Name) or plr.Character:FindFirstChild(v.Name)) then
                    repeat Rc.Remotes.CommF_:InvokeServer("LoadItem",v.Name) wait(2) until CheckMasTool("Sword") < 600 or not _G.S.Auto600MasteryAll
                end
            end
        end
    end
end

local AutoSwordMastery = F:CreateToggle({
    Name = "Auto 600 Mastery All Sword",
    Description = "Beta",
    Default = _G.S.Auto600MasteryAll,
    Settings = true,
    CallBack = function(Value)
        _G.S.Auto600MasteryAll = Value
        SaveSettings()
    end
})

AutoSwordMastery:CreateToggle({
    Name = "Only Race V4 Awakening",
    Default = _G.S.OnlyV4,
    CallBack = function(Value)
        _G.S.OnlyV4 = Value
        SaveSettings()
   end
})

spawn(function()
    while task.wait() do
        if _G.S.Auto600MasteryAll then
            local Check = CheckMasTool("Sword")
            if Check >= 600 then
                ChangeSword()
            elseif Check < 600 then
                repeat wait()
                    ToggleSelectTool:Set("Sword")
                until not _G.S.Auto600MasteryAll or Check >= 600
            end
        end
    end
end)

F:CreateSection({Text = 'Chest'})

local ToggleAutoChest = F:CreateToggle({
    Name = "Start Auto Chest",
    Description = "Auto Chest Default Mode Is Tween, You can change Method In Settings This Toggle",
    Default = _G.S.AutoChest,
    Settings = true,
    CallBack = function(Value)
        _G.S.AutoChest = Value
        SaveSettings()
        DisableTween(_G.S.AutoChest)
    end
})

ToggleAutoChest:CreateToggle({
    Name = "Hop Chest",
    Default = _G.S.HopCHEST,
    CallBack = function(Value)
      _G.S.HopCHEST = Value
      SaveSettings()
   end
})

ToggleAutoChest:CreateToggle({
    Name = "Stop Legendary Item",
    Default = _G.S.StopItem,
    CallBack = function(Value)
      _G.S.StopItem = Value
      SaveSettings()
   end
})

spawn(function()
    while task.wait() do
        if _G.S.StopItem and _G.S.AutoChest then
            if CheckBackpack("Fist Of Darkness") or CheckBackpack("God's Chalice") then
                if Sea2 then
                    Tween(CFrame.new(-379.70889282227, 73.0458984375, 304.84692382813))
                elseif Sea3 then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(
                        "requestEntrance",
                        Vector3.new(-12549.7236, 337.511505, -7470.36328)
                    )
                end
            end
        end
    end
end)

ChestCount = 0
spawn(function()
    while wait() do
        if _G.S.AutoChest then
            v = GetNearestChest()
            if v then
                repeat wait()
                    Tween(v.CFrame)
                    NoClip = true
                    if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Position).Magnitude <= 2 then
                        firetouchinterest(v, game.Players.LocalPlayer.Character.HumanoidRootPart, 0)
                        firetouchinterest(v, game.Players.LocalPlayer.Character.HumanoidRootPart, 1)
                    end
                    if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position-v.Position).Magnitude <= 5 then 
                        SendKey("W")
                    end
                    if _G.S.HopCHEST then
                        if ChestCount >= 30 then
                            HopServer("Hop Chest")
                        end
                    end                
                until not v.Parent or not _G.S.AutoChest
                CancelTween()
                ChestCount = ChestCount + 1
                NoClip = false
            else
                if _G.S.HopCHEST then
                    HopServer("Hop Chest")
                end
            end
        end
    end
end)

F:CreateSection({Text = 'Others Farm'})

local EliteAutoToggle = F:CreateToggle({
    Name = "Auto Elite",
    Description = "Auto Kill Elite",
    Default = _G.S.AutoElite,
    Settings = true,
    CallBack = function(Value)
        _G.S.AutoElite = Value
        SaveSettings()
    end
})

EliteAutoToggle:CreateToggle({
    Name = "Hop Servers",
    Default = _G.S.AutoEliteHop,
    CallBack = function(Value)
        _G.S.AutoEliteHop = Value
        SaveSettings()
   end
})

EliteAutoToggle:CreateToggle({
    Name = "No Hop If God's Chalice",
    Default = _G.S.NoHopGodChalice,
    CallBack = function(Value)
        _G.S.NoHopGodChalice = Value
        SaveSettings()
   end
})

spawn(function()
    while task.wait() do
        if _G.S.AutoElite and Sea3 then
            v = GetElite()
            if v then
                if not CheckTextQuest("Diablo") and not CheckTextQuest("Urban") and not CheckTextQuest("Deandre") then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("EliteHunter")
                elseif CheckTextQuest("Diablo") or CheckTextQuest("Urban") or CheckTextQuest("Deandre") then
                    repeat wait()
                        KillEnemyXa(v.Name, false, _G.S.AutoElite)
                    until not v.Parent or not v:FindFirstChild("HumanoidRootPart") or v.Humanoid.Health <= 0 or not _G.S.AutoElite
                end
            elseif not v then
                if _G.S.AutoEliteHop and not GetElite() then
                    if not _G.S.NoHopGodChalice then
                        HopServer("Hop Elite")
                    elseif _G.S.NoHopGodChalice then
                        if CheckBackpack("God's Chalice") then
                            -- not yet
                        else
                            HopServer("Hop Elite")
                        end
                    end
                end
            end
        end
    end
end)

F:CreateToggle({
    Name = "Auto Factory",
    Description = "Auto Kill Factory",
    Default = _G.S.AutoFactory,
    Settings = true,
    CallBack = function(Value)
        _G.S.AutoFactory = Value
        SaveSettings()
    end
})

function AutoFactory()
    if CheckEnemy("Core") then
        repeat wait()
            KillEnemyXa("Core", false, _G.S.AutoFactory)
        until not CheckEnemy("Core") or not _G.S.AutoFactory
    end
end

spawn(function()
    while wait() do
        if _G.S.AutoFactory and Sea2 then
            AutoFactory()
        end
    end
end)

F:CreateToggle({
    Name = "Auto Caslte Raid",
    Description = "Auto Kill Pirates In Caslte",
    Default = _G.S.AutoCastle,
    Settings = false,
    CallBack = function(Value)
        _G.S.AutoCastle = Value
        SaveSettings()
    end
})

function RaidCastle()
    if _G.S.AutoElite and GetElite() and Sea3 then return end
    v = GetMobCastleRaid()
    if v then
        repeat wait()
            KillEnemyXa(v.Name, true, _G.S.AutoCastle)
        until not v.Parent or not v:FindFirstChild("HumanoidRootPart") or v.Humanoid.Health <= 0 or not _G.S.AutoCastle
    else
        Tween(CFrame.new(-5496.17432, 313.768921, -2841.53027))
    end
end

spawn(function()
    while wait() do
        if _G.S.AutoCastle then
            RaidCastle()
        end
    end
end)

B:CreateSection({Text = "Sub Farmming"})

B:CreateSectionContent({
    Text = "This Is All Function For Sub Farmming"
})

local AutoScondSeaToggle = B:CreateToggle({
    Name = "Auto New World",
    Description = "Auto Kill Boss Ice In Ice Village",
    Default = _G.S.AutoSea2,
    Settings = false,
    CallBack = function(Value)
        _G.S.AutoSea2 = Value
        SaveSettings()
        DisableTween(_G.S.AutoSea2)
    end
})

function AutoNewWorld()
    if plr.Data.Level.Value >= 700 then
        if game.ReplicatedStorage.Remotes.CommF_:InvokeServer("DressrosaQuestProgress", "Dressrosa") ~= 0 then
            if game.Workspace.Map.Ice.Door.CanCollide then
                if not CheckBackpack("Key") then
                    if (CFrame.new(4852.2895507813, 5.651451587677, 718.53070068359).Position - plr.Character.HumanoidRootPart.Position).magnitude < 5 then
                        game.ReplicatedStorage.Remotes["CommF_"]:InvokeServer("DressrosaQuestProgress", "Detective")
                        wait(.1)
                        EquipTool("Key")
                    else
                        Tween(CFrame.new(4852.2895507813, 5.651451587677, 718.53070068359))
                    end
                elseif CheckBackpack("Key") then
                    Tween(game.Workspace.Map.Ice.Door.CFrame)
                end
            elseif not game.Workspace.Map.Ice.Door.CanCollide then
                if CheckEnemy("Ice Admiral") then
                    repeat wait()
                        KillEnemyXa("Ice Admiral", false, _G.S.AutoSea2)
                    until not _G.S.AutoSea2 or not CheckEnemy("Ice Admiral")
                end
            end
        else
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelDressrosa")
        end
    end
end

spawn(function()
    while task.wait() do
        if _G.S.AutoSea2 then
            AutoNewWorld()
        end
    end
end)

local AutoBartiloToggle = B:CreateToggle({
    Name = "Auto Bartilo Quest",
    Description = "Nah",
    Default = _G.S.AutoBartilo,
    Settings = false,
    CallBack = function(Value)
        _G.S.AutoBartilo = Value
        SaveSettings()
        DisableTween(_G.S.AutoBartilo)
    end
})

function CheckQuest2Bartilo()
    local a  
    if game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate1.BrickColor == BrickColor.new("Sand yellow") then 
        a = "Plate1"
    elseif game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate2.BrickColor == BrickColor.new("Sand yellow") then
        a = "Plate2"
    elseif game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate3.BrickColor == BrickColor.new("Sand yellow") then
        a = "Plate3"
    elseif game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate4.BrickColor == BrickColor.new("Sand yellow") then
        a = "Plate4"
    elseif game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate5.BrickColor == BrickColor.new("Sand yellow") then
        a = "Plate5"
    elseif game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate6.BrickColor == BrickColor.new("Sand yellow") then
        a = "Plate6"
    elseif game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate7.BrickColor == BrickColor.new("Sand yellow") then
        a = "Plate7"
    elseif game:GetService("Workspace").Map.Dressrosa.BartiloPlates.Plate8.BrickColor == BrickColor.new("Sand yellow") then
        a = "Plate8"
    end
    return a 
end

function AutoBartilo()
    if plr.Data.Level.Value >= 800 then
        if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BartiloQuestProgress","Bartilo") == 0 then
            if CheckQuestVisible() and CheckTextQuest("50") and CheckTextQuest("Swan Pirate") then
                if CheckEnemies("Swan Pirate") then
                    repeat wait()
                        KillEnemy("Swan Pirate", true, _G.S.AutoBartilo)
                    until not CheckEnemies("Swan Pirate") or not _G.S.AutoBartilo or not CheckTextQuest("50") or game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BartiloQuestProgress","Bartilo") == 1
                else
                    Tween(CFrame.new(932.624451, 156.106079, 1180.27466))
                end
            elseif not CheckQuestVisible() or not CheckTextQuest("50") or not CheckTextQuest("Swan Pirate") then
                if CheckDistance(CFrame.new(-456.28952, 73.0200958, 299.895966)) <= 10 then
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StartQuest", "BartiloQuest", 1)
                else
                    if _G.S.BypassTele then
                        Byp(CFrame.new(-456.28952, 73.0200958, 299.895966))
                    else
                        Tween(CFrame.new(-456.28952, 73.0200958, 299.895966))
                    end
                end
            end
        elseif game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BartiloQuestProgress","Bartilo") == 1 then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BartiloQuestProgress","Bartilo")
            if CheckEnemy("Jeremy") then
                repeat wait()
                    KillEnemyXa("Jeremy", false, _G.S.AutoBartilo)
                until not CheckEnemy("Jeremy") or not _G.S.AutoBartilo or game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BartiloQuestProgress","Bartilo") == 2
            end
        elseif game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BartiloQuestProgress","Bartilo") == 2 then
            repeat task.wait()
                if (plr.Character.HumanoidRootPart.Position - Vector3.new(-1835.65, 10.4325, 1679.75)).Magnitude > 100 then
                    Tween(CFrame.new(-1835.65, 10.4325, 1679.75))
                else
                    plr.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Map.Dressrosa.BartiloPlates[CheckQuest2Bartilo()].CFrame
                    task.wait()
                    firetouchinterest(game:GetService("Workspace").Map.Dressrosa.BartiloPlates[CheckQuest2Bartilo()], game.Players.LocalPlayer.Character.HumanoidRootPart, 0)
                    firetouchinterest(game:GetService("Workspace").Map.Dressrosa.BartiloPlates[CheckQuest2Bartilo()], game.Players.LocalPlayer.Character.HumanoidRootPart, 1)
                end
            until game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BartiloQuestProgress","Bartilo") == 3 or not _G.S.AutoBartilo
        end
    end
end

spawn(function()
    while task.wait() do
        if _G.S.AutoBartilo and Sea2 then
            if plr.Data.Level.Value >= 850 then
                AutoBartilo()
            end
        end
    end
end)

local AutoGhoulToggle = B:CreateToggle({
    Name = "Auto Ghoul",
    Description = "",
    Default = _G.S.AutoGhoul,
    Settings = true,
    CallBack = function(Value)
        _G.S.AutoGhoul = Value
        SaveSettings()
        DisableTween(_G.S.AutoGhoul)
    end
})

AutoGhoulToggle:CreateToggle({
    Name = "Hop Find Boss",
    Default = _G.S.HopFindBossGhoul,
    CallBack = function(Value)
        _G.S.HopFindBossGhoul = Value
        SaveSettings()
   end
})

function AutoGhoul()
    if plr.Data.Race.Value ~= "Ghoul" then
        if not CheckBackpack("Hellfire Torch") then
            if CheckBoss("Cursed Captain") then
                repeat wait()
                    KillEnemyXa("Cursed Captain", false, _G.S.AutoGhoul)
                until not CheckBoss("Cursed Captain") or CheckBackpack("Hellfire Torch") or plr.Data.Race.Value == "Ghoul" or _G.S.AutoGhoul == false
            elseif not CheckBoss("Cursed Captain") then
                if _G.S.HopFindBossGhoul == true then
                    HopServer("Hop Find Cursed Captain")
                end
            end
        elseif CheckBackpack("Hellfire Torch") then
            if CheckDistance(CFrame.new(918.615234,122.202454,33454.3789,-0.999998808,0,0.00172644004,0,1,0,-0.00172644004,0,-0.999998808)) <= 8 then
                local args = {
                    [1] = "Ectoplasm",
                    [2] = "BuyCheck",
                    [3] = 4
                }
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                v352 = game.ReplicatedStorage.Remotes.CommF_:InvokeServer("Ectoplasm", "Buy", 4)
            else
                Tween(CFrame.new(918.615234,122.202454,33454.3789,-0.999998808,0,0.00172644004,0,1,0,-0.00172644004,0,-0.999998808))
            end
        end
    end
end

spawn(function()
    while wait() do
        if _G.S.AutoGhoul and Sea2 then
            AutoGhoul()
        end
    end
end)

local AutoCyborgToggle = B:CreateToggle({
    Name = "Auto Cyborg",
    Description = "",
    Default = _G.S.AutoCyborg,
    Settings = true,
    CallBack = function(Value)
        _G.S.AutoCyborg = Value
        SaveSettings()
        DisableTween(_G.S.AutoCyborg)
    end
})

AutoCyborgToggle:CreateToggle({
    Name = "Hop Find Fist Of Darkness",
    Default = _G.S.HopFindKey,
    CallBack = function(Value)
        _G.S.HopFindKey = Value
        SaveSettings()
   end
})

function AutoCyborg()
    if game.ReplicatedStorage.Remotes.CommF_:InvokeServer("CyborgTrainer", "Check") == 2 then
        notify("SCRIPT", "Turn Off Auto Cyborg Please!!!", 5)
        wait(6)
        return
    end
    if game.ReplicatedStorage.Remotes.CommF_:InvokeServer("CyborgTrainer", "Check") then 
        game.ReplicatedStorage.Remotes.CommF_:InvokeServer("CyborgTrainer", "Buy")
        return
    end
    if game.ReplicatedStorage.Remotes.CommF_:InvokeServer("CheckBlockPart") then
        if CheckBoss("Order") then
            repeat wait()
                KillEnemyXa("Order", true, _G.S.AutoCyborg)
            until not CheckBoss("Order") or not _G.S.AutoCyborg
        else
            if CheckBackpack("Microchip") then
                fireclickdetector(game:GetService("Workspace").Map.CircleIsland.RaidSummon.Button.Main.ClickDetector)
            else
                game.ReplicatedStorage.Remotes.CommF_:InvokeServer("BlackbeardReward", "Microchip", "2")
            end
        end
    else
        if CheckBackpack("Fist Of Darkness") then
            fireclickdetector(game:GetService("Workspace").Map.CircleIsland.RaidSummon.Button.Main.ClickDetector)
            task.wait(3)
        else
            v = GetNearestChest()
            repeat wait()
                Tween(v.CFrame)
                NoClip = true
                if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Position).Magnitude <= 2 then
                    firetouchinterest(v, game.Players.LocalPlayer.Character.HumanoidRootPart, 0)
                    firetouchinterest(v, game.Players.LocalPlayer.Character.HumanoidRootPart, 1)
                end
                if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position-v.Position).Magnitude <= 5 then 
                    SendKey("W")
                end
                if _G.S.HopFindKey then
                    if ChestCount >= 30 then
                        HopServer("Hop Find Fist Of Darkness")
                    end
                end       
            until CheckBackpack("Fist Of Darkness") or not _G.S.AutoCyborg or not v.Parent
            ChestCount = ChestCount + 1
        end
    end
end

spawn(function()
    while wait() do
        if _G.S.AutoCyborg and Sea2 then
            if plr.Data.Race.Value ~= "Cyborg" then
                AutoCyborg()
            end
        end
    end
end)

G:CreateSection({Text = "Fighting Style"})

local AutoSuperhumanToggle = G:CreateToggle({
    Name = "Auto Superhuman",
    Description = "Beta",
    Default = _G.S.AutoSuperhuman,
    Settings = false,
    CallBack = function(Value)
        _G.S.AutoSuperhuman = Value
        SaveSettings()
    end
})

function KillAura()
    for i,v in pairs(WS.Enemies:GetChildren()) do 
        pcall(function()
            sethiddenproperty(plr, "SimulationRadius", math.huge)
            v.Humanoid.Health = 0
        end)
    end
end

function IsIslandRaid(cu)
    if game:GetService("Workspace")["_WorldOrigin"].Locations:FindFirstChild("Island " .. cu) then
        min = 4500
        for r, v in pairs(game:GetService("Workspace")["_WorldOrigin"].Locations:GetChildren()) do
            if
                v.Name == "Island " .. cu and
                    (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < min
             then
                min = (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            end
        end
        for r, v in pairs(game:GetService("Workspace")["_WorldOrigin"].Locations:GetChildren()) do
            if
                v.Name == "Island " .. cu and
                    (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= min
             then
                return v
            end
        end
    end
end
function GetIslandNext()
    TableIslandsRaid = {5, 4, 3, 2, 1}
    for r, v in pairs(TableIslandsRaid) do
        if
            IsIslandRaid(v) and
                (IsIslandRaid(v).Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <=
                    4500
         then
            return IsIslandRaid(v)
        end
    end
end

function StartRaid()
    if Sea2 then
        return fireclickdetector(game:GetService("Workspace").Map.CircleIsland.RaidSummon2.Button.Main.ClickDetector)
    elseif Sea3 then
        return fireclickdetector(game:GetService("Workspace").Map["Boat Castle"].RaidSummon2.Button.Main.ClickDetector)
    end
end

if _G.S.listChips == nil then
    _G.S.listChips = "Flame"
end
function AutoRaidFully()
    if game.Players.LocalPlayer.PlayerGui.Main.Timer.Visible == true then
        pcall(function()
            if GetIslandNext() then
                NoClip = true
                spawn(Tweento(getNextIsland().CFrame * CFrame.new(0, 60, 0)), 1)
            end
            spawn(function()
                for i,v in pairs(WS.Enemies:GetChildren()) do
                    if v:FindFirstChild("Humanoid") then
                        spawn(function()
                            repeat
                                v.Humanoid.Health = 0
                                task.wait()
                            until not v:FindFirstChild("Humanoid") or v.Humanoid.Health <= 0
                        end)
                    end
                end
            end)
        end)
    elseif plr.PlayerGui.Main.Timer.Visible == false then
        if not CheckBackpack("Special Microchip") then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("RaidsNpc", "Select", _G.S.listChips)
        elseif CheckBackpack("Special Microchip") then
            StartRaid()
        end
    end
end

function GetMasterymelee(x)
    a = CheckBackpack(x)
    return a.Level.Value
end

function AutoSuperhuman()
    if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySuperhuman", true) ~= 1 then
        if not CheckBackpack("Black Leg") and not CheckBackpack("Electro")
        and not CheckBackpack("Fishman Karate") and not CheckBackpack("Dragon Claw") then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyBlackLeg")
        elseif CheckBackpack("Black Leg") or CheckBackpack("Electro") or CheckBackpack("Fishman Karate") or CheckBackpack("Dragon Claw") then
            if CheckBackpack("Black Leg") then
                if GetMasterymelee("Black Leg") >= 300 then
                    wait(.1)
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyElectro")
                end
            elseif CheckBackpack("Electro") then
                if GetMasterymelee("Electro") >= 300 then
                    wait(.1)
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyFishmanKarate")
                end
            elseif CheckBackpack("Fishman Karate") then
                if GetMasterymelee("Fishman Karate") >= 300 then
                    wait(.1)
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward","DragonClaw", "2")              
                end
            elseif CheckBackpack("Dragon Claw") then
                if GetMasterymelee("Dragon Claw") >= 300 then
                    wait(.1)
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyBlackLeg")
                end
            end
        end
    end
end

spawn(function()
    while task.wait() do
        if _G.S.AutoSuperhuman then
            AutoSuperhuman()
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySuperhuman")
        end
    end
end)

local AutoDeathStepToggle = G:CreateToggle({
    Name = "Auto Death Step",
    Description = "Beta",
    Default = _G.S.AutoDeathStep,
    Settings = true,
    CallBack = function(Value)
        _G.S.AutoDeathStep = Value
        SaveSettings()
    end
})

AutoDeathStepToggle:CreateToggle({
    Name = "Hop Find Boss",
    Default = _G.S.HopDeathStep,
    CallBack = function(Value)
        _G.S.HopDeathStep = Value
        SaveSettings()
   end
})

function CheckPhoeyuDoor()
    if game.Workspace.Map.IceCastle.Hall.LibraryDoor:FindFirstChild("PhoeyuDoor") then
        return game.Workspace.Map.IceCastle.Hall.LibraryDoor.PhoeyuDoor.CanCollide
    end
end

function GetDeathStep()
    if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyDeathStep", true) ~= 1 then
        if CheckBackpack("Black Leg") then
            if CheckMasTool("Melee") >= 400 then
                if CheckPhoeyuDoor() then
                    if not CheckBackpack("Library Key") then
                        if CheckEnemy("Awakened Ice Admiral") then
                            repeat wait()
                                KillEnemyXa("Awakened Ice Admiral", false, _G.S.AutoDeathStep)
                            until not CheckEnemy("Awakened Ice Admiral") or not _G.S.AutoDeathStep or CheckBackpack("Library Key")
                        else
                            if _G.S.HopDeathStep == true then
                                HopServer("Hop Find Awakened Ice Admiral")
                            end
                        end
                    else
                        EquipTool("Library Key")
                        wait(.1)
                        Tween(CFrame.new(6375.9126, 296.634583, -6843.14062, -0.849467814, 1.5493983e-08, -0.527640462, 3.70608895e-08, 1, -3.0301031e-08, 0.527640462, -4.5294577e-08, -0.849467814))
                        if CheckDistance(CFrame.new(6375.9126, 296.634583, -6843.14062, -0.849467814, 1.5493983e-08, -0.527640462, 3.70608895e-08, 1, -3.0301031e-08, 0.527640462, -4.5294577e-08, -0.849467814)) <= 10 then
                            SendKey("W")
                        end
                    end
                else
                    if plr.Data.Fragments.Value >= 5000 and plr.Data.Beli.Value >= 2500000 then
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyDeathStep")                         
                    end
                end
            else
                ToggleStartFarm:Set(true)
            end
        else
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyBlackLeg")
        end
    end
end

spawn(function()
    while task.wait() do
        if _G.S.AutoDeathStep and Sea2 then
            GetDeathStep()
        end
    end
end)

local AutoSharkmanToggle = G:CreateToggle({
    Name = "Auto Sharkman Karate",
    Description = "Beta",
    Default = _G.S.AutoSharkman,
    Settings = true,
    CallBack = function(Value)
        _G.S.AutoSharkman = Value
        SaveSettings()
    end
})

AutoSharkmanToggle:CreateToggle({
    Name = "Hop Find Boss",
    Default = _G.S.HopSharkman,
    CallBack = function(Value)
        _G.S.HopSharkman = Value
        SaveSettings()
   end
})

function AutoSharkman()
    if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuySharkmanKarate", true) ~= 1 then
        if CheckBackpack("Fishman Karate") then
            if CheckMasTool("Melee") >= 400 then
                if CheckBackpack("Water Key") then
                    game.ReplicatedStorage.Remotes.CommF_:InvokeServer("BuySharkmanKarate", true)
                    game.ReplicatedStorage.Remotes.CommF_:InvokeServer("BuySharkmanKarate")
                else
                    if CheckEnemy("Tide Keeper") then
                        repeat wait()
                            KillEnemyXa("Tide Keeper", false, _G.S.AutoSharkman)
                        until CheckBackpack("Water Key") or not CheckEnemy("Tide Keeper") or not _G.S.AutoSharkman  
                    end
                end
            else
                ToggleStartFarm:Set(true)
            end
        else
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BuyFishmanKarate")
        end
    else
        notify("Sitinks Hub", "Turn Off Auto Sharkman Karate Please", 5)
        wait(6)
    end
end

spawn(function()
    while task.wait() do
        if _G.S.AutoSharkman and Sea2 then
            AutoSharkman()
        end
    end
end)

G:CreateSection({Text = "All Sea 1 Item"})

local AutoSaberToggle = G:CreateToggle({
    Name = "Auto Saber",
    Description = "Work",
    Default = _G.S.AutoSaber,
    Settings = true,
    CallBack = function(Value)
        _G.S.AutoSaber = Value
        SaveSettings()
    end
})

AutoSaberToggle:CreateToggle({
    Name = "Hop Find Boss",
    Default = _G.S.HopSaber,
    CallBack = function(Value)
        _G.S.HopSaber = Value
        SaveSettings()
   end
})

function CheckSaberDoor()
    for r, v in next, game:GetService("Workspace").Map.Jungle.Final:GetChildren() do
        if v:IsA("Part") and not v.CanCollide then
            return true
        end
    end
end

function CheckButtonJungle()
    for r, v in pairs(game:GetService("Workspace").Map.Jungle.QuestPlates:GetChildren()) do
        if v:IsA("Model") then
            if v.Button:FindFirstChild("TouchInterest") then
                return v
            end
        end
    end
end

function CheckCup()
    return game.Workspace.Map.Desert.Burn.Part.CanCollide == false
end

spawn(function()
    while task.wait() do
        if _G.S.AutoSaber and plr.Data.Level.Value >= 200 and not CheckInventory('Saber') then
            if not CheckSaberDoor() then
                if game:GetService("Workspace").Map.Jungle.QuestPlates.Door.CanCollide then
                    if CheckButtonJungle() then
                        NoClip = true
                        Byp(CheckButtonJungle().Button.CFrame)
                    end
                else
                    if not CheckCup() then
                        if not CheckBackpack("Torch") then
                            Tween(game:GetService("Workspace").Map.Jungle.Torch.CFrame)
                            task.wait(.2)
                            EquipTool("Torch")
                        else
                            NoClip = true
                            EquipTool("Torch")
                            Tween(
                                CFrame.new(
                                    1114.61475,
                                    5.04679728,
                                    4350.22803,
                                    -0.648466587,
                                    -1.28799094e-09,
                                    0.761243105,
                                    -5.70652914e-10,
                                    1,
                                    1.20584542e-09,
                                    -0.761243105,
                                    3.47544882e-10,
                                    -0.648466587
                                )
                            )
                        end
                    else
                        if Rc.Remotes.CommF_:InvokeServer("ProQuestProgress", "RichSon") ~= 0 and Rc.Remotes.CommF_:InvokeServer("ProQuestProgress", "RichSon") ~= 1 then
                            if not CheckBackpack("Cup") then
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress", "GetCup")
                                task.wait(.2)
                                EquipTool("Cup")
                                wait(0.3) 
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress", "FillCup", plr.Character.Cup)
                                wait(0.3) 
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress", "SickMan")
                            end
                        else
                            if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress", "RichSon") == nil then
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress", "RichSon") 
                            elseif game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress", "RichSon") == 0 then
                                if CheckEnemy("Mob Leader") then
                                    repeat wait()
                                        KillEnemyXa("Mob Leader", true, _G.S.AutoSaber)
                                    until not CheckEnemy("Mob Leader") or not _G.S.AutoSaber
                                end
                            elseif game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress", "RichSon") == 1 then
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress", "RichSon") 
                                wait(0.1) 
                                EquipTool("Relic") 
                                wait(0.2) 
                                NoClip = true 
                                Tween(CFrame.new(-1404.91504, 29.9773273, 3.80598116, 0.876514494, 5.66906877e-09, 0.481375456, 2.53851997e-08, 1, -5.79995607e-08, -0.481375456, 6.30572643e-08, 0.876514494))
                            end
                        end
                    end
                end
            else
                if CheckEnemy("Saber Expert") then
                    repeat wait()
                        KillEnemyXa("Saber Expert", false, _G.S.AutoSaber)
                    until CheckEnemy("Saber Expert") or _G.S.AutoSaber or CheckInventory("Saber")
                else
                    if _G.S.HopSaber == true then
                        HopServer("Find Saber Expert Boss")
                    elseif _G.S.HopSaber == false then
                        if _G.S.StartFarm and Sea1 then
                            FarmLevel(_G.S.AutoSaber)
                        end
                    end
                end
            end
        end
    end
end)

local AutoPoleToggle = G:CreateToggle({
    Name = "Auto Pole",
    Description = "Work",
    Default = _G.S.AutoPole,
    Settings = true,
    CallBack = function(Value)
        _G.S.AutoPole = Value
        SaveSettings()
    end
})

AutoPoleToggle:CreateToggle({
    Name = "Hop Find Boss",
    Default = _G.S.HopPole,
    CallBack = function(Value)
        _G.S.HopPole = Value
        SaveSettings()
   end
})

spawn(function()
    while wait() do
        if _G.S.AutoPole and Sea1 then
            if not CheckInventory("Pole (1st Form)") then
                if CheckEnemy("Thunder God") then
                    repeat wait()
                        KillEnemyXa("Thunder God", false, _G.S.AutoPole)
                    until not CheckEnemy("Thunder God") or not _G.S.AutoPole or CheckInventory("Pole (1st Form)") 
                else
                    if _G.S.HopPole == true then
                        HopServer("Find Thunder God Boss")
                    end
                end
            elseif CheckInventory("Pole (1st Form)") then
                AutoPoleToggle:Set(false)
                notify("SCRIPT", "Your Are Have Pole", 5)
            end
        end
    end
end)

G:CreateSection({Text = "All Sea 2 Item"})

local AutoDarkbruhbruh = G:CreateToggle({
    Name = "Auto Dark Coat",
    Description = "Work",
    Default = _G.S.AutoDjtChimden,
    Settings = true,
    CallBack = function(Value)
        _G.S.AutoDjtChimden = Value
        SaveSettings()
    end
})

AutoDarkbruhbruh:CreateToggle({
    Name = "Hop Find Boss",
    Default = _G.S.HopDarkbuhbuh,
    CallBack = function(Value)
        _G.S.HopDarkbuhbuh = Value
        SaveSettings()
   end
})

spawn(function()
    while task.wait() do
        if _G.S.AutoDjtChimden and Sea2 then
            if not _G.S.HopDarkbuhbuh then
                if not CheckEnemy("Darkbeard") then
                    if CheckBackpack("Fist Of Darkness") then
                        EquipTool("Fist Of Darkness")
                        wait(.1)
                        Tween(CFrame.new(3777.53955,15.1938925,-3499.29639, -0.0338903107, 7.75397169e-08, -0.99942553, 3.2805858e-09, 1, 7.74730395e-08, 0.99942553, -6.53115839e-10, -0.0338903107))
                    else
                        v = GetNearestChest()
                        repeat wait()
                            Tween(v.CFrame)
                            NoClip = true
                            if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Position).Magnitude <= 2 then
                                firetouchinterest(v, game.Players.LocalPlayer.Character.HumanoidRootPart, 0)
                                firetouchinterest(v, game.Players.LocalPlayer.Character.HumanoidRootPart, 1)
                            end
                            if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position-v.Position).Magnitude <= 5 then 
                                SendKey("W")
                            end
                        until not _G.S.AutoDjtChimden or CheckBackpack("Fist Of Darkness") or CheckEnemy("Darkbeard") or not v.Parent
                        NoClip = false
                        CancelTween()
                    end
                elseif CheckEnemy("Darkbeard") then
                    repeat wait()
                        KillEnemyXa('Darkbeard', true, _G.S.AutoDjtChimden)
                    until not CheckEnemy("Darkbeard") or not _G.S.AutoDjtChimden
                end
            elseif _G.S.HopDarkbuhbuh then
                if not CheckEnemy("Darkbeard") then
                    HopServer("Find Darkbeard Boss")
                end
            end
        end
    end
end)

local AutoRengchimden = G:CreateToggle({
    Name = "Auto Rengoku",
    Description = "Auto Get Sword Donut Man",
    Default = _G.S.AutoDonut,
    Settings = true,
    CallBack = function(Value)
        _G.S.AutoDonut = Value
        SaveSettings()
    end
})

AutoRengchimden:CreateToggle({
    Name = "Hop Find Boss",
    Default = _G.S.AutoDonutHop,
    CallBack = function(Value)
        _G.S.AutoDonutHop = Value
        SaveSettings()
   end
})

spawn(function()
    while wait() do
        if _G.S.AutoDonut and Sea2 then
            if not CheckInventory("Rengoku") then
                if not CheckBackpack("Hidden Key") then
                    if CheckEnemy("Awakened Ice Admiral") then
                        repeat wait()
                            KillEnemyXa("Awakened Ice Admiral", false, _G.S.AutoDonut)
                        until not CheckEnemy("Awakened Ice Admiral") or CheckBackpack("Hidden Key") or not  _G.S.AutoDonut
                    else
                        if _G.S.AutoDonutHop == true then
                            HopServer("Find Boss Awakened Ice Admiral")
                        else
                            if CheckEnemies("Snow Lurker") or CheckEnemies("Arctic Warrior") then
                                local TableMobRengoku = {
                                    "Arctic Warrior",
                                    "Snow Lurker"
                                }
                                for i, v in pairs(game.Workspace.Enemies:GetChildren()) do
                                    if table.find(TableMobRengoku, v.Name) then
                                        if v.Humanoid.Health > 0 and v.Parent and v:FindFirstChild("HumanoidRootPart") then
                                            repeat wait()
                                                KillEnemy(v.Name, true, _G.S.AutoDonut)
                                            until not CheckEnemies("Snow Lurker") or not _G.S.AutoDonut or CheckBackpack("Hidden Key")
                                        end
                                    end
                                end
                            else
                                NoClip = true
                                if _G.S.BypassTele then
                                    Byp(CFrame.new(5439.716796875, 84.420944213867, -6715.1635742188))
                                else
                                    NoClip = true
                                    Tween(CFrame.new(5439.716796875, 84.420944213867, -6715.1635742188))
                                end
                            end
                        end
                    end
                else
                    EquipTool("Hidden key")
                    NoClip = true
                    Tween(CFrame.new(6571.1201171875, 299.23028564453, -6967.841796875))
                end
            else
                notify("SCRIPT", "Turn Off Auto Rengoku Please", 5)
                wait(6)
            end
        end
    end
end)

local AutoRaceV2V3Toggle = R:CreateToggle({
    Name = "Auto Race(V1 - V2 - V3)",
    Description = "Beta",
    Default = _G.S.AutoRaceV1V2V3,
    Settings = true,
    CallBack = function(Value)
        _G.S.AutoRaceV1V2V3 = Value
        SaveSettings()
        DisableTween(_G.S.AutoRaceV1V2V3)
    end
})

AutoRaceV2V3Toggle:CreateToggle({
    Name = "Hop Server Night",
    Default = _G.S.HopSvNight,
    CallBack = function(Value)
        _G.S.HopSvNight = Value
        SaveSettings()
   end
})

function QuestRaceV3()
    local v113 = game.ReplicatedStorage.Remotes.CommF_:InvokeServer("Wenlocktoad", "1")
    if v113 == 0 then
        game.ReplicatedStorage.Remotes.CommF_:InvokeServer("Wenlocktoad", "2")
        return
    elseif v113 == 2 then 
        game.ReplicatedStorage.Remotes.CommF_:InvokeServer("Wenlocktoad", "3")
        return
    elseif v113 == -1 then 
        notify("SCRIPT", "Your Need More Beli To Upgraded Race V3", 5)
        wait(6)
        return 
    end
end

function GetPlayersSkypiea()
    for i,v in pairs(game.Players:GetPlayers()) do
        if v.Name ~= plr.Name then
            if v.Data.Race.Value == "Skypiea" then
                return v.Name
            end
        end
    end
end

function GetSeaBeast()
    for r, v in next, game.Workspace.SeaBeasts:GetChildren() do
        if v.Name == "SeaBeast1" then
            if v:FindFirstChild("HumanoidRootPart") then
                if (v.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).Magnitude <= 4000 then
                    local s = v.HealthBBG.Frame.TextLabel.Text
                    local c5 = s:gsub("/%d+,%d+", "")
                    local a = v.HealthBBG.Frame.TextLabel.Text
                    local ab
                    if string.find(c5, ",") then
                        ab = a:gsub("%d+,%d+/", "")
                    else
                        ab = a:gsub("%d+/", "")
                    end
                    local c = ab:gsub(",", "")
                    if tonumber(c) >= 34500 then
                        return v
                    end
                end
            end
        end
    end
    return false
end

function TeleportSeabeast(c5)
    local a = Vector3.new(0, c5:FindFirstChild("HumanoidRootPart").Position.Y, 0)
    local ab = Vector3.new(0, game:GetService("Workspace").Map["WaterBase-Plane"].Position.Y, 0)
    if (a - ab).Magnitude <= 175 then
        Tween(c5.HumanoidRootPart.CFrame * CFrame.new(0, 400, 50))
    else
        Tween(
            CFrame.new(
                c5.HumanoidRootPart.Position.X,
                game:GetService("Workspace").Map["WaterBase-Plane"].Position.Y + 200,
                c5.HumanoidRootPart.Position.Z
            )
        )
    end
end

function KillSeaBeast(aaaaaaa)
    if v:FindFirstChild("HumanoidRootPart") then
        if (v.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).Magnitude <= 4000 then
            repeat wait()
                SpamSkill = true
                AimSkills = true
                AimPos = v.HumanoidRootPart.Position
                NoClip = true
                TeleportSeabeast(v)
            until not GetSeaBeast() or not v.Parent or not v:FindFirstChild("HumanoidRootPart") or not aaaaaaa
            SpamSkill = false
            AimSkills = false
            AimPos = nil
            NoClip = false
        end
    end
end

ChestRaceMink = 0
spawn(function()
    while wait() do
        if _G.S.AutoRaceV1V2V3 then
            PlrRace = CheckPlayerShitRace()
            if string.find(PlrRace, "V1") then
                if not game:GetService("Players").LocalPlayer.Data.Race:FindFirstChild("Evolved") then
                    if game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Alchemist", "1") == 0 then
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Alchemist", "2")
                    elseif game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Alchemist", "1") == 1 then
                        if not CheckBackpack("Flower 1") then
                            if WS.Flower1.Transparency ~= 1 then
                                Tween(WS.Flower1.CFrame)
                            elseif _G.S.HopSvNight then
                                if game.Lighting.ClockTime > 3 and game.Lighting.ClockTime < 16 then
                                    HopServer("Hop Servers Night")
                                end 
                            end
                        elseif not CheckBackpack("Flower 2") then
                            Tween(WS.Flower2.CFrame)
                        elseif not CheckBackpack("Flower 3") then
                            if CheckEnemies("Ship Deckhand") or CheckEnemies("Ship Engineer") or CheckEnemies("Ship Steward") or CheckEnemies("Ship Officer") then
                                for i, v in pairs(WS.Enemies:GetChildren()) do
                                    if v.Name == "Ship Deckhand" or v.Name == "Ship Engineer" or v.Name == "Ship Steward" or v.Name == "Ship Officer" then
                                        repeat wait()
                                            KillEnemy(v.Name, true, _G.S.AutoRaceV1V2V3)
                                        until not v.Parent or v.Humanoid.Health <= 0 or not _G.S.AutoRaceV1V2V3
                                    end
                                end   
                            elseif not CheckEnemies("Ship Deckhand") and not CheckEnemies("Ship Engineer") and not CheckEnemies("Ship Steward") and not CheckEnemies("Ship Officer") then
                                NoClip = true
                                Tween(CFrame.new(1212.0111083984375, 150.79205322265625, 33059.24609375)) 
                            end
                        end
                    elseif game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Alchemist", "1") == 2 then
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Alchemist", "3")
                    end
                end
            elseif string.find(PlrRace, "V2") then
                QuestRaceV3()
                if Race == "Human V2" then
                    if CheckEnemy("Jeremy") and CheckEnemy("Fajita") and CheckEnemy("Diamond") then
                        repeat wait()
                            Superidol = Superidol + 1
                            KillBoss("Jeremy", _G.S.AutoRaceV2V3)
                            KillBoss("Diamond", _G.S.AutoRaceV2V3)
                            KillBoss("Fajita", _G.S.AutoRaceV2V3)
                        until not _G.S.AutoRaceV1V2V3 or PlrRace ~= "Human V2"
                    end
                elseif PlrRace == "Mink V2" then
                    v = GetNearestChest()
                    repeat wait()
                        Tween(v.CFrame)
                        NoClip = true
                        if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Position).Magnitude <= 2 then
                            firetouchinterest(v, game.Players.LocalPlayer.Character.HumanoidRootPart, 0)
                            firetouchinterest(v, game.Players.LocalPlayer.Character.HumanoidRootPart, 1)
                        end
                        if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position-v.Position).Magnitude <= 5 then 
                            SendKey("W")
                        end
                    until not _G.S.AutoRaceV2V3 or PlrRace ~= "Mink V2" or not v.Parent 
                    CancelTween()
                elseif PlrRace == "Ghoul V2" then
                    for i,v in pairs(WS.Characters:GetChildren()) do
                        if v.Name ~= plr.Name then
                            if v.Humanoid.Health > 0 and v.Parent and v:FindFirstChild("HumanoidRootPart") then
                                if CheckDistance(v.HumanoidRootPart) <= 13000 then
                                    repeat task.wait()
                                        Tween(v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2))
                                        Click()
                                        FastNCooldown = true
                                        NoClip = true
                                    until not v.Parent or PlrRace ~= "Ghoul V2" or CheckSafeZone(v) or v.Humanoid.Health <= 0 or not _G.S.AutoRaceV2V3
                                end
                            end
                        end
                    end
                elseif PlrRace == "Cyborg V2" then
                    if not CheckFruit() then
                        if GetFruitInventory(true) then
                            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("LoadFruit",GetFruitInventory(true))
                        end
                    end
                elseif PlrRace == "Skypiea V2" then
                    for i, v in pairs(WS.Characters:GetChildren()) do
                        if v.Name == GetPlayersSkypiea() then
                            if CheckDistance(v.HumanoidRootPart) <= 13000 then
                                repeat task.wait()
                                    Tween(v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2))
                                    Click()
                                    FastNCooldown = true
                                    NoClip = true
                                until not v.Parent or PlrRace ~= "Skypiea V2" or CheckSafeZone(v) or v.Humanoid.Health <= 0 or not _G.S.AutoRaceV2V3
                            end
                        end
                    end
                elseif PlrRace == "Fishman V3" then
                    if not GetSeaBeast() then
                        if not GetShip() then
                            if CheckDistance(CFrame.new(-5325.12646, 4.7167592, -714.438171, -0.245173886, 4.1912454e-08, -0.969479144, -2.48438443e-08, 1, 4.95147496e-08, 0.969479144, 3.62253125e-08, -0.245173886)) <= 10 then
                                local args = {
                                    [1] = "BuyBoat",
                                    [2] = "Guardian"
                                }
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args) )
                            else
                                Tween(CFrame.new(-5325.12646, 4.7167592, -714.438171, -0.245173886, 4.1912454e-08, -0.969479144, -2.48438443e-08, 1, 4.95147496e-08, 0.969479144, 3.62253125e-08, -0.245173886))
                            end
                        else
                            TweenObject(CFrame.new(-4872.52979, -0.34796223, 750.928406), GetShip().VehicleSeat)
                        end
                    else
                        KillSeaBeast(_G.S.AutoRaceV2V3)
                    end
                end
            end
        end
    end
end)
