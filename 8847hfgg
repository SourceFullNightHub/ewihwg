getgenv()["Auto Get Ballon Wait Delay"] = 0
getgenv()["Hop Server"] = true
getgenv()["Auto Ballon"] = true
getgenv()["Hop Delay"] = 1200 -- 20 mins
getgenv()["Auto Open Gift"] = true
getgenv()["Auto Presents"] = true
getgenv()["Send Gems"] = true
getgenv()["FPS Boost"] = true

getgenv()["Username"] = {"username1", "username2"} -- Add usernames here
getgenv()["Gems"] = 100000 -- Adjust the gem threshold here

local p = print
local Players = game.Players
local Player = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Network = ReplicatedStorage:WaitForChild("Network")
local Library = require(ReplicatedStorage.Library)

local function Hop()
    local PlaceID = game.PlaceId
    local AllIDs = {}
    local foundAnything = ""
    local actualHour = os.date("!*t").hour
    
    local function TPReturner()
        local Site
        if foundAnything == "" then
            Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
        else
            Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
        end
        
        if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
            foundAnything = Site.nextPageCursor
        end
        
        local num = 0
        for i,v in pairs(Site.data) do
            local Possible = true
            if tonumber(v.maxPlayers) > tonumber(v.playing) then
                for _,v0 in pairs(AllIDs) do
                    if num ~= 0 then
                        if tostring(v.id) == tostring(v0) then
                            Possible = false
                        else
                            if tonumber(os.date("!*t").hour) ~= tonumber(v0) then
                                pcall(function () 
                                    AllIDs = {} 
                                    table.insert(AllIDs, os.date("!*t").hour)  
                                end)
                            end
                        end
                    end
                    num = num + 1
                end
            end
            
            if Possible == true then
                table.insert(AllIDs, tostring(v.id))
                wait()
                pcall(function() 
                    wait() 
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, tostring(v.id), game.Players.LocalPlayer) 
                end)
                wait(4)
            end
        end
    end
    
    local function Teleport()  
        while wait() do
            pcall(function() 
                TPReturner() 
                if foundAnything ~= "" then 
                    TPReturner() 
                end 
            end)
        end 
    end 
    
    Teleport()
end

local function PosBallon(val)
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(val.X, val.Y + 30, val.Z)
end

if getgenv()["FPS Boost"] then
    UserSettings():GetService("UserGameSettings").MasterVolume = 0
    local decalsyeeted = true
    local g = game
    local w = g.Workspace
    local l = g.Lighting
    local t = w.Terrain
    
    sethiddenproperty(l,"Technology",2)
    sethiddenproperty(t,"Decoration",false)
    game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.Chat,false)
    t.WaterWaveSize = 0
    t.WaterWaveSpeed = 0
    t.WaterReflectance = 0
    t.WaterTransparency = 0
    l.GlobalShadows = 0
    l.FogEnd = 9e9
    l.Brightness = 0
    settings().Rendering.QualityLevel = "1"
    
    for i, v in pairs(w:GetDescendants()) do
        if v:IsA("BasePart") and not v:IsA("MeshPart") then
            v.Material = "Plastic"
            v.Reflectance = 0
        elseif (v:IsA("Decal") or v:IsA("Texture")) and decalsyeeted then
            v.Transparency = 1
        elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
            v.Lifetime = NumberRange.new(0)
        elseif v:IsA("Explosion") then
            v.BlastPressure = 1
            v.BlastRadius = 1
        elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
            v.Enabled = false
        elseif v:IsA("MeshPart") and decalsyeeted then
            v.Material = "Plastic"
            v.Reflectance = 0
            v.TextureID = 10385902758728957
        elseif v:IsA("SpecialMesh") and decalsyeeted then
            v.TextureId=0
        elseif (v:IsA("Shirt") or v:IsA("Pants")) and decalsyeeted then
            v[v.ClassName.."Template"]=1
        end
    end
    
    for i = 1,#l:GetChildren() do
        e=l:GetChildren()[i]
        if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
            e.Enabled = false
        end
    end
    
    w.DescendantAdded:Connect(function(v)
        if v:IsA("BasePart") and not v:IsA("MeshPart") then
            v.Material = "Plastic"
            v.Reflectance = 0
        elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
            v.Transparency = 1
        elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
            v.Lifetime = NumberRange.new(0)
        elseif v:IsA("Explosion") then
            v.BlastPressure = 1
            v.BlastRadius = 1
        elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
            v.Enabled = false
        elseif v:IsA("MeshPart") and decalsyeeted then
            v.Material = "Plastic"
            v.Reflectance = 0
            v.TextureID = 10385902758728957
        elseif v:IsA("SpecialMesh") and decalsyeeted then
            v.TextureId=0
        elseif (v:IsA("Shirt") or v:IsA("Pants")) and decalsyeeted then
            v[v.ClassName.."Template"] = 1
        end
    end)
end

while getgenv()["Auto Open Gift"] do 
    wait()
    local Checks,Error = pcall(function()
        for val,val1 in pairs(Player.PlayerGui._MISC.FreeGifts.Frame.ItemsFrame.Gifts:GetChildren()) do
            if val1:FindFirstChild("Timer") and val1.Timer.Text:lower():find("redeem") then
                local GetNum = val1.Name:gsub("Gift", "")
                task.spawn(function()
                    Network:FindFirstChild("Redeem Free Gift"):InvokeServer(tonumber(GetNum))
                end)
            end
        end
    end)
    
    if not Checks then
        print("Auto Open Gift >" .. Error .. " <")
    end
end

while getgenv()["Auto Ballon"] do 
    task.wait(getgenv()["Auto Get Ballon Wait Delay"])
    local Checks,Error = pcall(function()
        local CBallon = {}
        NotFoundB = true
        for val, val1 in pairs(game:GetService("ReplicatedStorage").Network.BalloonGifts_GetActiveBalloons:InvokeServer()) do
            if not val1.Popped then
                NotFoundB = false
                p("balloon Not Found")
                CBallon[val] = val1
            end
        end
        
        if NotFoundB then
            p("Data > No balloons detected: Time" .. getgenv()["Auto Get Ballon Wait Delay"] .. " <")
            if getgenv()["Hop Server"] then
                wait(getgenv()["Hop Delay"])
                Hop()
            end
            task.wait(getgenv()["Auto Get Ballon Wait Delay"])
        end
        
        for val2, val3 in pairs(CBallon) do
            p("Found Ballon")
            local PosB = val3.Position
            game:GetService("ReplicatedStorage").Network.Slingshot_Toggle:InvokeServer()
            task.wait()
            PosBallon(PosB)
            task.wait()
            game:GetService("ReplicatedStorage").Network.Slingshot_FireProjectile:InvokeServer(Vector3.new(PosB.X, PosB.Y + 25, PosB.Z), 0.5794160315249014, -0.8331117721691044, 200)
            task.wait(0.1)
            game:GetService("ReplicatedStorage").Network.BalloonGifts_BalloonHit:FireServer(val2)
            task.wait()
            game:GetService("ReplicatedStorage").Network.Slingshot_Unequip:InvokeServer()
            p("Data > No balloons detected: Time" .. getgenv()["Auto Get Ballon Wait Delay"] .. " <")
            task.wait(getgenv()["Auto Get Ballon Wait Delay"])
        end
        
        if getgenv()["Hop Server"] then
            wait(getgenv()["Hop Delay"])
            Hop()
        end
        
        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Anchored = false
        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
    end)
    
    if not Checks then
        print("Auto Ballon Data >" .. Error .. " <")
    end
end

while getgenv()["Auto Presents"] do 
    wait()
    local Checks,Error = pcall(function()
        for val,val1 in pairs(Library.Save.Get().HiddenPresents) do 
            if not v.Found and v.ID then 
                Library.Network.Invoke("Hidden Presents: Found", val1.ID) 
            end 
        end 
    end)
    
    if not Checks then
        print("Auto Presents >" .. Error .. " <")
    end
end

local gemThreshold = getgenv()["Gems"] or 1000 -- Amount of gems before sending
while getgenv()["Send Gems"] do 
    local currentGems = player.Gems -- Replace 'Gems' with the actual currency property
    if currentGems >= gemThreshold then
        for _, username in ipairs(getgenv()["Username"]) do
            game:GetService("TradeService"):RequestTrade(username) 
            print("Gems sent to " .. username) 
        end
    end
    wait(60) -- Check every minute (adjust as needed)
end
